var N=null,E="",T="t",U="u",searchIndex={};
var r_0l="BinaryPrettyPrint",r_1l="Bitmap",r_2l="KernelLogger",r_3l="processor_uid",r_4l="local_apic_id",r_5l="state",r_6l="is_ap",r_7l="Running",r_8l="processor",r_9l="instruction_pointer",r_Al="kernel::x86_64::interrupts",r_Bl="kernel::x86_64::logger",r_Cl="kernel::x86_64::memory::buddy_allocator",r_Dl="kernel::x86_64::memory::physical",r_El="kernel::x86_64::process",r_Fl="kernel::heap_allocator",r_Gl="kernel::util::binary_pretty_print",r_Hl="allocate_n",r_Il="free_n",r_Jl="map_physical_region",r_Kl="unmap_physical_region",r_Ll="acpiphysicalmapping",r_Ml="PebbleAcpiHandler",r_Nl="InterruptController",r_Ol="PhysicalRegionMapper",r_Pl="BuddyAllocator",r_Ql="PhysicalMemoryManager",r_Rl="LockedPhysicalMemoryManager",r_Sl="Thread",r_Tl="Process",r_Ul="ProcessState",r_Vl="HoleAllocator",r_Wl="LockedHoleAllocator",r_Xl="HoleInfo",r_Yl="HoleList",r_Zl="Allocation",r_am="stack_pointer",r_bm="set_handler",r_cm="memory",r_dm="HEAP_START",r_em="frame_allocator",r_fl="kernel",r_fm="recursivemapping",r_gl="kmain",r_gm="logger",r_hl="This is the entry point for the kernel on x86_64. It is…",r_hm="enabled",r_il="physical_region_mapper",r_im="info",r_jl="kernel::x86_64",r_kl="interruptstackframe",r_ll="kernel::x86_64::memory",r_ml="buddy_allocator",r_nl="lockedphysicalmemorymanager",r_ol="process",r_pl="arch",r_ql="size",r_rl="layout",r_sl="allocation",r_tl="new_uninitialized",r_ul="holeinfo",r_vl="allocate_first_fit",r_wl="allocerr",r_xl="kernel::util",r_yl="kernel::x86_64::acpi_handler",r_zl="kernel::x86_64::cpu";
var r_0f="Converts the value of `self` to an `i8`.",r_0g="returns the largest finite number this type can represent",r_0h="A value bounded by a minimum and a maximum",r_0i="epsilon",r_0j="checked",r_0k="is_integer",r_1f="Converts the value of `self` to an `i16`.",r_1g="num::traits",r_1h="Rational",r_1i="Returns epsilon, a small positive value.",r_1j="Performs an integral remainder that returns `None` instead…",r_1k="Returns true if the rational number is an integer…",r_2f="Converts the value of `self` to an `i32`.",r_2g="A generic interface for casting between machine scalars…",r_2h="Alias for a `Ratio` of machine-sized integers.",r_2i="Returns the largest finite value that this type can…",r_2j="checked_rem",r_2k="reduced",r_3f="Converts the value of `self` to an `i64`.",r_3g="Convert a value to another, using the `as` operator.",r_3h="num::complex",r_3i="Returns `true` if the number is NaN.",r_3j="Finds the remainder of dividing two numbers, checking for…",r_3k="Returns a reduced copy of self.",r_4f="Converts the value of `self` to an `i128`.",r_4g="Defines an additive identity element for `Self`.",r_4h="num::integer",r_4i="Returns `true` if the number is infinite.",r_4j="Performs negation that returns `None` if the result can't…",r_4k="Returns the reciprocal.",r_5f="Converts the value of `self` to a `usize`.",r_5g="Returns the additive identity element of `Self`, `0`.",r_5h="num::iter",r_5i="Returns `true` if the number is neither infinite or NaN.",r_5j="checked_neg",r_5k="Rounds towards minus infinity.",r_6f="Converts the value of `self` to an `u8`.",r_6g="Returns `true` if `self` is equal to the additive identity.",r_6h="num::rational",r_6i="Returns `true` if the number is neither zero, infinite,…",r_6j="Negates a number, returning `None` for results that can't…",r_6k="Rounds towards plus infinity.",r_7f="Converts the value of `self` to an `u16`.",r_7g="Defines a multiplicative identity element for `Self`.",r_7h="error",r_7i="classify",r_7j="Performs a left shift that returns `None` on overflow.",r_7k="Rounds to the nearest integer. Rounds half-way cases away…",r_8f="Converts the value of `self` to an `u32`.",r_8g="Returns the multiplicative identity element of `Self`, `1`.",r_8h="abs",r_8i="Returns the floating point category of the number. If only…",r_8j="checked_shl",r_8k="Rounds towards zero.",r_9f="Converts the value of `self` to an `u64`.",r_9g="Returns `true` if `self` is equal to the multiplicative…",r_9h="one",r_9i="fpcategory",r_9j="Performs a right shift that returns `None` on overflow.",r_9k="Returns the fractional part of a number, with division…",r_Ag="Real portion of the complex number",r_Ah="Raises self to the power of `exp`, using exponentiation by…",r_Ai="binomial",r_Aj="Return `1.0 / sqrt(2.0)`.",r_Ak="NumRef",r_Bg="Imaginary portion of the complex number",r_Bh="Performs addition that returns `None` instead of wrapping…",r_Bi="Calculate the binomial coefficient.",r_Bj="FRAC_2_PI",r_Bk="The trait for `Num` types which also implement numeric…",r_Cg="Floored integer division.",r_Ch="Adds two numbers, checking for overflow. If overflow…",r_Ci="multinomial",r_Cj="Return `2.0 / π`.",r_Ck="RefNum",r_Dg="Floored integer modulo, satisfying:",r_Dh="Performs subtraction that returns `None` instead of…",r_Di="Calculate the multinomial coefficient.",r_Dj="FRAC_2_SQRT_PI",r_Dk="The trait for references which implement numeric…",r_Eg="Greatest Common Divisor (GCD).",r_Eh="Subtracts two numbers, checking for underflow. If…",r_Ei="Provides methods to compute an integer's square root, cube…",r_Ej="Return `2.0 / sqrt(π)`.",r_Ek="NumAssignOps",r_Fg="Lowest Common Multiple (LCM).",r_Fh="Performs multiplication that returns `None` instead of…",r_Fi="For a given n, iterate over all binomial coefficients…",r_Fj="FRAC_PI_2",r_Fk="The trait for types implementing numeric assignment…",r_Gg="divides",r_Gh="Multiplies two numbers, checking for underflow or…",r_Gi="iterbinomial",r_Gj="Return `π / 2.0`.",r_Gk="NumAssign",r_Hg="Deprecated, use `is_multiple_of` instead.",r_Hh="Performs division that returns `None` instead of panicking…",r_Hi="An iterator over the range [start, stop)",r_Hj="FRAC_PI_3",r_Hk="The trait for `Num` types which also implement assignment…",r_Ig="is_multiple_of",r_Ih="Divides two numbers, checking for underflow, overflow and…",r_Ii="An iterator over the range [start, stop]",r_Ij="Return `π / 3.0`.",r_Ik="NumAssignRef",r_Jg="Returns `true` if `self` is a multiple of `other`.",r_Jh="num::traits::ops",r_Ji="An iterator over the range [start, stop) by `step`. It…",r_Jj="FRAC_PI_4",r_Jk="The trait for `NumAssign` types which also implement…",r_Kg="is_even",r_Kh="Saturating math operations",r_Ki="An iterator over the range [start, stop] by `step`. It…",r_Kj="Return `π / 4.0`.",r_Kk="Represents the ratio between two numbers.",r_Lg="Returns `true` if the number is even.",r_Lh="saturating_add",r_Li="Empty",r_Lj="FRAC_PI_6",r_Lk="Rational32",r_Mg="is_odd",r_Mh="Saturating addition operator. Returns a+b, saturating at…",r_Mi="Invalid",r_Mj="Return `π / 6.0`.",r_Mk="Alias for a `Ratio` of 32-bit-sized integers.",r_Ng="Returns `true` if the number is odd.",r_Nh="saturating_sub",r_Ni="bounds",r_Nj="FRAC_PI_8",r_Nk="Rational64",r_Og="Simultaneous truncated integer division and modulus.…",r_Oh="Saturating subtraction operator. Returns a-b, saturating…",r_Oi="float",r_Oj="Return `π / 8.0`.",r_Ok="Alias for a `Ratio` of 64-bit-sized integers.",r_Pg="Simultaneous floored integer division and modulus. Returns…",r_Ph="Binary operator for raising a value to a power.",r_Pi="Generic trait for floating point numbers that works with…",r_Pj="LN_10",r_Pk="Creates a new `Ratio`. Fails if `denom` is zero.",r_Qg="num",r_Qh="Returns `self` to the power `rhs`.",r_Qi="infinity",r_Qj="Return `ln(10.0)`.",r_Qk="from_integer",r_Rg="Returns an iterator over the given range [start, stop)…",r_Rh="Useful functions for signed numbers (i.e. numbers that can…",r_Ri="Returns positive infinity.",r_Rj="Return `ln(2.0)`.",r_Rk="Creates a `Ratio` representing the integer `t`.",r_Sg="range_inclusive",r_Sh="Returns true if the number is positive and false if the…",r_Si="neg_infinity",r_Sj="LOG10_E",r_Sk="new_raw",r_Tg="Return an iterator over the range [start, stop]",r_Th="Returns true if the number is negative and false if the…",r_Ti="Returns negative infinity.",r_Tj="Return `log10(e)`.",r_Tk="Creates a `Ratio` without checking for `denom == 0` or…",r_Ug="range_step",r_Uh="Unsigned",r_Ui="Returns NaN.",r_Uj="LOG2_E",r_Uk="to_integer",r_Vg="Return an iterator over the range [start, stop) by `step`.…",r_Vh="A trait for values which cannot be negative",r_Vi="neg_zero",r_Vj="Return `log2(e)`.",r_Vk="Converts to an integer, rounding towards zero.",r_Wg="range_step_inclusive",r_Wh="The base trait for numeric types, covering `0` and `1`…",r_Wi="Returns `-0.0`.",r_Wj="Return Archimedes’ constant.",r_Wk="numer",r_Xg="Return an iterator over the range [start, stop] by `step`.…",r_Xh="FromStrRadixErr",r_Xi="Returns the smallest finite value that this type can…",r_Xj="SQRT_2",r_Xk="Gets an immutable reference to the numerator.",r_Yf="A generic trait for converting a value to a number.",r_Yg="Numbers which have upper and lower bounds",r_Yh="Convert from a string and radix <= 36.",r_Yi="min_positive_value",r_Yj="Return `sqrt(2.0)`.",r_Yk="denom",r_Zf="Converts the value of `self` to an `isize`.",r_Zg="returns the smallest finite number this type can represent",r_Zh="clamp",r_Zi="Returns the smallest positive, normalized value that this…",r_Zj="identities",r_Zk="Gets an immutable reference to the denominator.",r_ag="Converts the value of `self` to an `u128`.",r_ah="Returns the additive identity, `0`.",r_ai="Zero",r_aj="Returns the largest integer less than or equal to a number.",r_ak="checked_shr",r_al="Raises the `Ratio` to the power of an exponent.",r_bg="Converts the value of `self` to an `f32`.",r_bh="Returns the multiplicative identity, `1`.",r_bi="Complex32",r_bj="ceil",r_bk="Unary operator for retrieving the multiplicative inverse,…",r_bl="approximate_float",r_cg="Converts the value of `self` to an `f64`.",r_ch="count_ones",r_ci="Complex64",r_cj="Returns the smallest integer greater than or equal to a…",r_ck="Returns the multiplicative inverse of `self`.",r_cl="Renders as `numer/denom`. If denom=1, renders as numer.",r_dg="A generic trait for converting a number to a value.",r_dh="Returns the number of ones in the binary representation of…",r_di="Create a new Complex",r_dj="Returns the nearest integer to a number. Round half-way…",r_dk="Fused multiply-add. Computes `(self * a) + b` with only…",r_dl="Parses `numer/denom` or just `numer`.",r_eg="Convert an `isize` to return an optional value of this…",r_eh="count_zeros",r_ei="Returns imaginary unit",r_ej="Return the integer part of a number.",r_ek="The resulting type after applying the fused multiply-add.",r_el="Parses `numer/denom` where the numbers are in base `radix`.",r_fg="Convert an `i8` to return an optional value of this type.…",r_fh="Returns the number of zeros in the binary representation…",r_fi="norm_sqr",r_fj="Returns the fractional part of a number.",r_fk="The fused multiply-add assignment operation.",r_gg="Convert an `i16` to return an optional value of this type.…",r_gh="leading_zeros",r_gi="Returns the square of the norm (since `T` doesn't…",r_gj="Computes the absolute value of `self`. Returns…",r_gk="mul_add_assign",r_hg="Convert an `i32` to return an optional value of this type.…",r_hh="Returns the number of leading zeros in the binary…",r_hi="scale",r_hj="Returns a number that represents the sign of `self`.",r_hk="saturating",r_ig="Convert an `i64` to return an optional value of this type.…",r_ih="trailing_zeros",r_ii="Multiplies `self` by the scalar `t`.",r_ij="is_sign_positive",r_ik="wrapping",r_jg="Convert an `i128` to return an optional value of this…",r_jh="Returns the number of trailing zeros in the binary…",r_ji="unscale",r_jj="Returns `true` if `self` is positive, including `+0.0` and…",r_jk="Performs addition that wraps around on overflow.",r_kg="Convert a `usize` to return an optional value of this…",r_kh="rotate_left",r_ki="Divides `self` by the scalar `t`.",r_kj="is_sign_negative",r_kk="wrapping_add",r_lg="Convert an `u8` to return an optional value of this type.…",r_lh="rotate_right",r_li="Returns the complex conjugate. i.e. `re - i im`",r_lj="Returns `true` if `self` is negative, including `-0.0` and…",r_lk="Wrapping (modular) addition. Computes `self + other`,…",r_mg="Convert an `u16` to return an optional value of this type.…",r_mh="signed_shl",r_mi="inv",r_mj="Returns the minimum of the two numbers.",r_mk="Performs subtraction that wraps around on overflow.",r_ng="Convert an `u32` to return an optional value of this type.…",r_nh="signed_shr",r_ni="Returns `1/self`",r_nj="Returns the maximum of the two numbers.",r_nk="wrapping_sub",r_og="Convert an `u64` to return an optional value of this type.…",r_oh="unsigned_shl",r_oi="Checks if the given complex number is NaN",r_oj="Returns the reciprocal (multiplicative inverse) of the…",r_ok="Wrapping (modular) subtraction. Computes `self - other`,…",r_pg="Convert an `u128` to return an optional value of this…",r_ph="unsigned_shr",r_pi="Checks if the given complex number is infinite",r_pj="Raise a number to an integer power.",r_pk="Performs multiplication that wraps around on overflow.",r_qg="Convert a `f32` to return an optional value of this type.…",r_qh="swap_bytes",r_qi="Checks if the given complex number is finite",r_qj="to_degrees",r_qk="wrapping_mul",r_rg="Convert a `f64` to return an optional value of this type.…",r_rh="Reverses the byte order of the integer.",r_ri="Checks if the given complex number is normal",r_rj="Converts to degrees, assuming the number is in radians.",r_rk="Wrapping (modular) multiplication. Computes `self *…",r_sg="An interface for casting between machine scalars.",r_sh="from_be",r_si="sum",r_sj="to_radians",r_sk="Performs a left shift that does not panic.",r_tg="Creates a number from another value that can be converted…",r_th="Convert an integer from big endian to the target's…",r_ti="An iterator over binomial coefficients.",r_tj="Converts to radians, assuming the number is in degrees.",r_tk="wrapping_shl",r_ug="cast",r_uh="from_le",r_ui="Simultaneous integer division and modulus",r_uj="integer_decode",r_uk="Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",r_vg="Cast from one machine scalar to another.",r_vh="Convert an integer from little endian to the target's…",r_vi="Floored integer division",r_vj="Returns the mantissa, base 2 exponent, and sign as…",r_vk="Performs a right shift that does not panic.",r_wg="Raises a value to the power of exp, using exponentiation…",r_wh="to_be",r_wi="Floored integer modulus",r_wj="Return Euler’s number.",r_wk="wrapping_shr",r_xg="checked_pow",r_xh="Convert `self` to big endian from the target's endianness.",r_xi="Simultaneous floored integer division and modulus",r_xj="FRAC_1_PI",r_xk="Panic-free bitwise shift-right; yields `self >>…",r_yg="Raises a value to the power of exp, returning `None` if an…",r_yh="to_le",r_yi="Calculates the Greatest Common Divisor (GCD) of the number…",r_yj="Return `1.0 / π`.",r_yk="NumOps",r_zg="A complex number in Cartesian form.",r_zh="Convert `self` to little endian from the target's…",r_zi="Calculates the Lowest Common Multiple (LCM) of the number…",r_zj="FRAC_1_SQRT_2",r_zk="The trait for types implementing basic numeric operations";var r_Af="ratio",r_Bf="parseratioerror",r_Cf="i64",r_Df="f32",r_Ef="f64",r_Ff="pow",r_Gf="Ratio",r_Hf="ParseRatioError",r_If="div",r_Jf="mul",r_Kf="rem",r_Lf="i32",r_Mf="i16",r_Nf="floor",r_Of="round",r_Pf="trunc",r_Qf="fract",r_Rf="recip",r_Sf="checked_add",r_Tf="checked_sub",r_Uf="checked_mul",r_Vf="checked_div",r_Wf="is_positive",r_Xf="is_negative",r_zf="num_rational";var r_nf="num_iter",r_of="into_iter",r_pf="size_hint",r_qf="next",r_rf="next_back",r_sf="rangeinclusive",r_tf="rangestep",r_uf="rangestepinclusive",r_vf="Range",r_wf="RangeInclusive",r_xf="RangeStep",r_yf="RangeStepInclusive";var r_0e="to_f32",r_1e="to_f64",r_2e="from_isize",r_3e="from_i8",r_4e="from_i16",r_5e="from_i32",r_6e="from_i64",r_7e="from_i128",r_8e="from_usize",r_9e="from_u8",r_Ae="num_complex",r_Be="complex",r_Ce="parsecomplexerror",r_De="mul_assign",r_Ee="div_assign",r_Fe="rem_assign",r_Ge="product",r_He="Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",r_Ie="Complex",r_Je="ParseComplexError",r_Ke="sub",r_Le="add",r_Me="to_isize",r_Ne="to_i8",r_Oe="to_i16",r_Pe="to_i32",r_Qe="to_i64",r_Re="to_i128",r_Se="i128",r_Te="to_usize",r_Ue="to_u8",r_Ve="to_u16",r_We="to_u32",r_Xe="to_u64",r_Ye="to_u128",r_Ze="u128",r_af="from_u16",r_bf="from_u32",r_cf="from_u64",r_df="from_u128",r_ef="from_f32",r_ff="from_f64",r_gf="is_nan",r_hf="is_infinite",r_if="is_finite",r_jf="is_normal",r_kf="is_zero",r_lf="is_one",r_mf="from_str_radix";var r_me="num_integer",r_ne="nth_root",r_oe="Returns the truncated principal `n`th root of an integer…",r_pe="Returns the truncated principal square root of an integer…",r_qe="Returns the truncated principal cube root of an integer --…",r_re="div_floor",r_se="mod_floor",r_te="div_rem",r_ue="div_mod_floor",r_ve="sqrt",r_we="cbrt",r_xe="Roots",r_ye="Integer",r_ze="IterBinomial";var r_0d="trigger_mode",r_1d="SameAsBus",r_2d="acpi",r_3d="physicalmapping",r_4d="acpi::interrupt",r_5d="processorstate",r_6d="Processor",r_7d="PhysicalMapping",r_8d="AmlError",r_9d="MadtError",r_Wd="acpistaticinfo",r_Xd="acpierror",r_Yd="global_system_interrupt",r_Zd="polarity",r_ae="AcpiError",r_be="ProcessorState",r_ce="AmlNamespace",r_de="IoApic",r_ee="InterruptSourceOverride",r_fe="NmiSource",r_ge="LocalInterruptLine",r_he="Polarity",r_ie="TriggerMode",r_je="InterruptModel",r_ke="AcpiHandler",r_le="AcpiStaticInfo";var r_0c="add_assign",r_1c="sub_assign",r_2c="index",r_3c="entry",r_4c="index_mut",r_5c="steps_between",r_6c="replace_one",r_7c="replace_zero",r_8c="add_one",r_9c="sub_one",r_Ac="table",r_Ad="InactivePageTable",r_Bc="inactivepagetable",r_Bd="EntryFlags",r_Cc="mapper",r_Cd="Entry",r_Dc="identitymapping",r_Dd="Frame",r_Ec="switch_to",r_Ed="FrameAllocator",r_Fc="Switch to this set of page tables. This returns a tuple…",r_Fd="Mapper",r_Gc="activepagetable",r_Gd="HierarchicalLevel",r_Hc="x86_64::boot",r_Hd="TableMapping",r_Ic="x86_64::hw::gdt",r_Id="Table",r_Jc="to_owned",r_Jd="ActivePageTable",r_Kc="clone_into",r_Kd="PhysicalAddress",r_Lc="x86_64::hw::tss",r_Ld="HypervisorInfo",r_Mc="x86_64::hw::idt",r_Md="Level4",r_Nc="x86_64::hw::i8259_pic",r_Nd="Level3",r_Oc="x86_64::hw::local_apic",r_Od="Level2",r_Pc="x86_64::hw::cpu",r_Pd="Level1",r_Qc="x86_64::hw::port",r_Qd="IdentityMapping",r_Rc="x86_64::hw::registers",r_Rd="RecursiveMapping",r_Sc="x86_64::hw::serial",r_Sd="flush",r_Tc="x86_64::memory::paging::entry",r_Td="cmp",r_Uc="x86_64::memory::paging::frame",r_Ud="u64",r_Vc="x86_64::memory::paging::mapper",r_Vd="zero",r_Wc="x86_64::memory::paging::page",r_Xc="x86_64::memory::paging::table",r_Yc="next_table_address",r_Zc="vendor",r_ad="add_usize",r_bc="x86_64",r_bd="memorytype",r_cc="This marks memory that the OS should preserve in the…",r_cd="cpuflags",r_dc="BootInfo",r_dd="MemoryEntry",r_ec="privilegelevel",r_ed="PayloadInfo",r_fc="new",r_fd="MemoryType",r_gc="tsssegment",r_gd="DescriptorTablePointer",r_hc="segmentselector",r_hd="SegmentSelector",r_ic="x86_64::hw",r_id="PrivilegeLevel",r_jc="empty",r_jd="CodeSegment",r_kc="idtentry",r_kd="DataSegment",r_lc="write",r_ld="TssSegment",r_mc="Unknown",r_md="InterruptStackFrame",r_nc="microarch",r_nd="IdtEntry",r_oc="read",r_od="LocalApicRegister",r_pc="u16",r_pd="LocalApic",r_qc="virtualaddress",r_qd="CpuInfo",r_rc="x86_64::memory",r_rd="ModelInfo",r_sc="entryflags",r_sd="Vendor",r_tc="frame",r_td="Microarch",r_uc="x86_64::memory::paging",r_ud="HypervisorVendor",r_vc="contains",r_vd="PortSize",r_wc="physicaladdress",r_wd="CpuFlags",r_xc="page",r_xd="SerialPort",r_yc="start_address",r_yd="Deref",r_zc="This is a marker type that specifies that we are in an…",r_zd="DerefMut";var r_0b="CheckedShr",r_1b="MulAdd",r_2b="MulAddAssign",r_3b="Saturating",r_4b="WrappingAdd",r_5b="WrappingSub",r_6b="WrappingMul",r_7b="WrappingShl",r_8b="WrappingShr",r_9b="Signed",r_Ab="Output",r_Bb="mul_add",r_Cb="Performs the fused multiply-add operation.",r_Db="The result after applying the operator.",r_Eb="signum",r_Fb="Computes the absolute value.",r_Gb="abs_sub",r_Hb="The positive difference of two numbers.",r_Ib="Returns the sign of the number.",r_Jb="ParseFloatError",r_Kb="FloatErrorKind",r_Lb="Bounded",r_Mb="ToPrimitive",r_Nb="FromPrimitive",r_Ob="NumCast",r_Pb="AsPrimitive",r_Qb="FloatCore",r_Rb="FloatConst",r_Sb="PrimInt",r_Tb="CheckedAdd",r_Ub="CheckedSub",r_Vb="CheckedMul",r_Wb="CheckedDiv",r_Xb="CheckedRem",r_Yb="CheckedNeg",r_Zb="CheckedShl",r_ac="doc",r_rb="num_traits",r_sb="isize",r_tb="min_value",r_ub="max_value",r_vb="u32",r_wb="Shifts the bits to the left by a specified amount amount,…",r_xb="Shifts the bits to the right by a specified amount amount,…",r_yb="Shifts a number to the left, checking for overflow. If…",r_zb="num_traits::ops";var r_0a="recordbuilder",r_1a="arguments",r_2a="target",r_3a="module_path",r_4a="str",r_5a="record",r_6a="builder",r_7a="Returns a new builder.",r_8a="The verbosity level of the message.",r_9a="The name of the target of the directive.",r_Ua="Error",r_Va="Debug",r_Wa="Trace",r_Xa="levelfilter",r_Ya="level",r_Za="metadata",r_ab="metadatabuilder",r_bb="build",r_cb="log",r_db="parselevelerror",r_eb="ordering",r_fb="partial_cmp",r_gb="from_str",r_hb="hash",r_ib="clone",r_jb="Level",r_kb="LevelFilter",r_lb="Record",r_mb="RecordBuilder",r_nb="Metadata",r_ob="MetadataBuilder",r_pb="SetLoggerError",r_qb="ParseLevelError";var r_Aa="try_into",r_Ba="borrow",r_Ca="borrow_mut",r_Da="type_id",r_Ea="typeid",r_Fa="from",r_Ga="into",r_Ha="deref_mut",r_Ia="formatter",r_Ja="fmt",r_Ka="deref",r_La="drop",r_Ma="mutex",r_Na="default",r_Oa="rwlock",r_Pa="Mutex",r_Qa="RwLock",r_Ra="MutexGuard",r_Sa="RwLockReadGuard",r_Ta="RwLockWriteGuard",r_sa="mutexguard",r_ta="Creates a new spinlock wrapping the supplied data.",r_ua="into_inner",r_va="option",r_wa="rwlockreadguard",r_xa="rwlockwriteguard",r_ya="result",r_za="try_from";var r_ca="bit_field",r_da="usize",r_ea="self",r_fa="range",r_ga="bit_length",r_ha="get_bit",r_ia="Obtains the bit at the index `bit`; note that index 0 is…",r_ja="bool",r_ka="get_bits",r_la="Obtains the range of bits specified by `range`; note that…",r_ma="set_bit",r_na="Sets the bit at the index `bit` to the value `value`…",r_oa="set_bits",r_pa="Sets the range of bits defined by the range `range` to the…",r_qa="BitField",r_ra="BitArray";var r_ba="bitflags";var r_aa="cfg_if";
searchIndex[r_fl]={r_ac:E,"i":[[5,r_gl,r_fl,r_hl,N,N],[5,"kernel_main",E,E,N,N],[5,"panic",E,E,N,N],[0,r_bc,E,"This module defines the kernel entry-point on x86_64.",N,N],[3,"Arch",r_jl,E,N,N],[12,"physical_memory_manager",E,E,0,N],[12,"kernel_page_table",E,"This is the main set of page tables for the kernel. It is…",0,N],[12,r_il,E,E,0,N],[5,r_gl,E,r_hl,N,N],[0,"acpi_handler",E,E,N,N],[3,r_Ml,r_yl,E,N,N],[12,r_il,E,E,1,N],[12,"page_table",E,E,1,N],[12,r_em,E,E,1,N],[11,r_fc,E,E,1,[[[r_Ma],[r_Ma],[r_nl]],["pebbleacpihandler"]]],[0,"cpu",r_jl,E,N,N],[3,"Cpu",r_zl,E,N,N],[12,r_3l,E,E,2,N],[12,r_4l,E,E,2,N],[12,r_6l,E,E,2,N],[12,"tss",E,E,2,N],[12,"tss_selector",E,E,2,N],[11,"from_acpi",E,E,2,[[[r_8l],["pin",["box"]],[r_hc]],["cpu"]]],[0,"interrupts",r_jl,E,N,N],[3,r_Nl,r_Al,E,N,N],[5,"nmi_handler",E,E,N,[[[r_kl]]]],[5,"breakpoint_handler",E,E,N,[[[r_kl]]]],[5,"invalid_opcode_handler",E,E,N,[[[r_kl]]]],[5,"general_protection_fault_handler",E,E,N,[[[r_kl],[r_Ud]]]],[5,"page_fault_handler",E,E,N,[[[r_kl],[r_Ud]]]],[5,"double_fault_handler",E,E,N,[[[r_kl],[r_Ud]]]],[5,"spurious_handler",E,E,N,[[[r_kl]]]],[7,"IDT",E,"This should only be accessed directly by the bootstrap…",N,N],[17,"LEGACY_PIC_VECTOR",E,E,N,N],[17,"APIC_SPURIOUS_VECTOR",E,E,N,N],[11,"init",E,E,3,[[[r_pl],["interruptmodel"]],["interruptcontroller"]]],[11,"install_exception_handlers",E,E,3,[[]]],[11,"install_yield_handler",E,E,3,[[]]],[0,r_gm,r_jl,E,N,N],[3,r_2l,r_Bl,"This handles calls to the log macros throughout the…",N,N],[7,"COM1",E,"The COM1 serial port, accessed through the UART 16550…",N,N],[0,r_cm,r_jl,"This module contains the physical memory manager Pebble…",N,N],[3,r_7d,r_ll,"Sometimes the system needs to access specific areas of…",N,N],[12,"physical_base",E,"The address of the start of the mapping in the physical…",4,N],[12,"virtual_base",E,"The address of the start of the mapping in the virtual…",4,N],[12,r_ql,E,"Size, in bytes, of the mapping. Must be a multiple of the…",4,N],[3,r_Ol,E,E,N,N],[12,"mappings",E,"This maps `PhysicalMapping`s to their starting…",5,N],[12,"virtual_area_bitmap",E,"This tracks which of the pages in the area of virtual…",5,N],[0,r_ml,E,"One of the allocators we use to manage physical memory is…",N,N],[3,r_Pl,r_Cl,E,N,N],[12,"bins",E,"The bins of free blocks, where bin `i` contains blocks of…",6,N],[11,r_fc,E,"Create a new `BuddyAllocator`, with a maximum block size…",6,[[[r_da]],["buddyallocator"]]],[11,"add_range",E,"Add a range of `Frame`s to this allocator, marking them…",6,[[[r_ea],[r_fa,[r_tc]]]]],[11,r_Hl,E,"Allocate (at least) `n` contiguous frames from this…",6,[[[r_ea],[r_da]],[r_va,[r_tc]]]],[11,r_Il,E,"Free the given block (starting at `start` and of size `n`…",6,[[[r_ea],[r_tc],[r_da]]]],[11,"allocate_block",E,"Tries to allocate a block of the given order. If no blocks…",6,[[[r_ea],[r_da]],[r_va,[r_tc]]]],[11,"buddy_of",E,"Finds the starting frame of the block that is the buddy of…",6,[[[r_tc],[r_da]],[r_tc]]],[11,"max_order",E,"Get the order of the largest block this allocator can track.",6,[[[r_ea]],[r_da]]],[0,"physical",r_ll,E,N,N],[3,r_Ql,r_Dl,"The main physical memory manager. It tracks all…",N,N],[12,r_ml,E,"A buddy allocator used to track all conventional memory.…",7,N],[3,r_Rl,E,E,N,N],[12,"0",E,E,8,N],[17,"BUDDY_ALLOCATOR_MAX_ORDER",E,E,N,N],[11,r_fc,E,E,8,[[["bootinfo"]],[r_nl]]],[0,"userspace_map",r_ll,E,N,N],[17,"KERNEL_SPACE_START","kernel::x86_64::memory::userspace_map",E,N,N],[17,"KERNEL_SPACE_END",E,E,N,N],[17,"INITIAL_STACK_SIZE",E,E,N,N],[17,"MEMORY_OBJECTS_START",E,E,N,N],[17,"MESSAGE_BUFFERS_START",E,E,N,N],[17,"KERNEL_STACKS_START",E,E,N,N],[17,"USER_STACKS_START",E,E,N,N],[17,r_dm,E,E,N,N],[17,"IMAGE_START",E,E,N,N],[6,"KernelPageTable",r_ll,"Type alias to hide the concrete type of the kernel's page…",N,N],[11,r_fc,E,E,5,[[],["physicalregionmapper"]]],[11,r_Jl,E,E,5,[[[r_ea],[r_tc],[r_da],[r_sc],[r_Gc],[r_nl]],[r_3d]]],[11,r_Kl,E,E,5,[[[r_ea],[r_3d],[r_Gc],[r_nl]]]],[0,r_ol,r_jl,E,N,N],[3,r_Sl,r_El,"Represents a thread, including its stack and the contents…",N,N],[12,"id",E,E,9,N],[12,"stack_top",E,E,9,N],[12,"stack_size",E,E,9,N],[12,r_9l,E,E,9,N],[12,r_am,E,E,9,N],[12,"base_pointer",E,E,9,N],[3,r_Tl,E,E,N,N],[12,r_5l,E,E,10,N],[12,"threads",E,E,10,N],[4,r_Ul,E,E,N,N],[13,"Poisoned",E,"We put a process in the `Poisoned` state while we do work…",11,N],[13,"NotRunning",E,E,11,N],[13,r_7l,E,E,11,N],[5,"drop_to_usermode",E,"Drop to Ring 3, into a process. This is used for the…",N,N],[5,"yield_handler",E,"This is called when a task yields to the kernel (using…",N,[[]]],[11,r_fc,E,E,10,[[[r_pl],[r_Bc,[r_fm]],[r_qc]],[r_ol]]],[11,r_Ec,E,E,10,[[[r_ea]]]],[7,"GDT",r_jl,"The kernel GDT. This is not thread-safe, and so should…",N,N],[0,r_pl,r_fl,E,N,N],[8,"Architecture","kernel::arch","Trait that is implemented by a type in each architecture…",N,N],[0,"heap_allocator",r_fl,E,N,N],[3,r_Vl,r_Fl,E,N,N],[12,"heap_bottom",E,E,12,N],[12,"heap_size",E,E,12,N],[12,"holes",E,E,12,N],[3,r_Wl,E,E,N,N],[12,"0",E,E,13,N],[3,r_Xl,E,E,N,N],[12,"addr",E,E,14,N],[12,r_ql,E,E,14,N],[3,"Hole",E,E,N,N],[12,r_ql,E,E,15,N],[12,r_qf,E,E,15,N],[3,r_Yl,E,E,N,N],[12,"first",E,E,16,N],[3,r_Zl,E,E,N,N],[12,r_im,E,E,17,N],[12,"front_padding",E,E,17,N],[12,"back_padding",E,E,17,N],[5,"split_hole",E,"Split the given hole into…",N,[[[r_ul],[r_rl]],[r_va,[r_sl]]]],[5,r_vl,E,E,N,[[["hole"],[r_rl]],[r_ya,[r_sl,r_wl]]]],[5,"free",E,"Walk the list, starting at `hole` and free the allocation…",N,[[["hole"],[r_qc],[r_da]]]],[5,"align_down",E,"Get the greatest x with the given alignment such that x <=…",N,[[[r_da],[r_da]],[r_da]]],[5,"align_up",E,"Get the smallest x with the given alignment such that x >=…",N,[[[r_da],[r_da]],[r_da]]],[5,"handle_alloc_error",E,E,N,N],[11,r_tl,E,"Create a new, uninitialized `HoleAllocator`. Before heap…",12,[[],["holeallocator"]]],[11,"init",E,"Initialise the `HoleAllocator`. This should only be called…",12,[[[r_ea],[r_qc],[r_qc]]]],[11,r_tl,E,E,13,[[],["lockedholeallocator"]]],[11,r_im,E,E,15,[[[r_ea]],[r_ul]]],[11,r_fc,E,"Create a new `HoleList` that contains the given hole.…",16,[[[r_qc],[r_da]],["holelist"]]],[11,r_vl,E,"Search for a big enough hole for the given `Layout` with…",16,[[[r_ea],[r_rl]],[r_ya,[r_wl]]]],[11,"free",E,"Free an allocation defined by `ptr` and `layout`. Unsafe…",16,N],[11,"get_min_size",E,E,16,[[],[r_da]]],[0,"util",r_fl,E,N,N],[0,"binary_pretty_print",r_xl,E,N,N],[3,r_0l,r_Gl,"Values can be wrapped in this type when they're printed to…",N,N],[12,"0",E,E,18,N],[0,"bitmap",r_xl,"It's useful to be able to model an integral type such as…",N,N],[8,r_1l,"kernel::util::bitmap",E,N,N],[10,"alloc_n",E,"Find `n` consecutive unset bits, set them and return the…",19,[[[r_ea],[r_da]],[r_va]]],[0,"math",r_xl,E,N,N],[5,"flooring_log2","kernel::util::math","Fast integer `log2` that floors to the lower power-of-2 if…",N,[[[r_Ud]],[r_Ud]]],[5,"ceiling_log2",E,E,N,[[[r_Ud]],[r_Ud]]],[5,"ceiling_integer_divide",E,"Divide `x` by `divide_by`, taking the ceiling if it does…",N,[[[r_Ud],[r_Ud]],[r_Ud]]],[0,"__rg_allocator_abi",r_fl,E,N,N],[5,"__rg_alloc","kernel::__rg_allocator_abi",E,N,N],[5,"__rg_dealloc",E,E,N,N],[5,"__rg_realloc",E,E,N,N],[5,"__rg_alloc_zeroed",E,E,N,N],[7,"ALLOCATOR",r_fl,E,N,N],[14,r_bm,E,E,N,N],[14,"set_handler_with_error_code",E,E,N,N],[14,"save_regs",E,E,N,N],[14,"restore_regs",E,E,N,N],[14,"wrap_handler",E,E,N,N],[14,"wrap_handler_with_error_code",E,E,N,N],[14,"wrap_syscall_handler",E,E,N,N],[14,"assert_first_call",E,"This macro should be called at the beginning of functions…",N,N],[11,r_za,r_jl,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_za,r_yl,E,1,[[[U]],[r_ya]]],[11,r_Fa,E,E,1,[[[T]],[T]]],[11,r_Aa,E,E,1,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,1,[[[r_ea]],[U]]],[11,r_Ba,E,E,1,[[[r_ea]],[T]]],[11,r_Ca,E,E,1,[[[r_ea]],[T]]],[11,r_Da,E,E,1,[[[r_ea]],[r_Ea]]],[11,r_za,r_zl,E,2,[[[U]],[r_ya]]],[11,r_Fa,E,E,2,[[[T]],[T]]],[11,r_Aa,E,E,2,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,2,[[[r_ea]],[U]]],[11,r_Ba,E,E,2,[[[r_ea]],[T]]],[11,r_Ca,E,E,2,[[[r_ea]],[T]]],[11,r_Da,E,E,2,[[[r_ea]],[r_Ea]]],[11,r_za,r_Al,E,3,[[[U]],[r_ya]]],[11,r_Fa,E,E,3,[[[T]],[T]]],[11,r_Aa,E,E,3,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,3,[[[r_ea]],[U]]],[11,r_Ba,E,E,3,[[[r_ea]],[T]]],[11,r_Ca,E,E,3,[[[r_ea]],[T]]],[11,r_Da,E,E,3,[[[r_ea]],[r_Ea]]],[11,r_za,r_Bl,E,20,[[[U]],[r_ya]]],[11,r_Fa,E,E,20,[[[T]],[T]]],[11,r_Aa,E,E,20,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,20,[[[r_ea]],[U]]],[11,r_Ba,E,E,20,[[[r_ea]],[T]]],[11,r_Ca,E,E,20,[[[r_ea]],[T]]],[11,r_Da,E,E,20,[[[r_ea]],[r_Ea]]],[11,r_za,r_ll,E,4,[[[U]],[r_ya]]],[11,r_Fa,E,E,4,[[[T]],[T]]],[11,r_Aa,E,E,4,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,4,[[[r_ea]],[U]]],[11,r_Ba,E,E,4,[[[r_ea]],[T]]],[11,r_Ca,E,E,4,[[[r_ea]],[T]]],[11,r_Da,E,E,4,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,4,[[[r_ea]],[T]]],[11,r_Kc,E,E,4,N],[11,r_za,E,E,5,[[[U]],[r_ya]]],[11,r_Fa,E,E,5,[[[T]],[T]]],[11,r_Aa,E,E,5,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,5,[[[r_ea]],[U]]],[11,r_Ba,E,E,5,[[[r_ea]],[T]]],[11,r_Ca,E,E,5,[[[r_ea]],[T]]],[11,r_Da,E,E,5,[[[r_ea]],[r_Ea]]],[11,r_za,r_Cl,E,6,[[[U]],[r_ya]]],[11,r_Fa,E,E,6,[[[T]],[T]]],[11,r_Aa,E,E,6,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,6,[[[r_ea]],[U]]],[11,r_Ba,E,E,6,[[[r_ea]],[T]]],[11,r_Ca,E,E,6,[[[r_ea]],[T]]],[11,r_Da,E,E,6,[[[r_ea]],[r_Ea]]],[11,r_za,r_Dl,E,7,[[[U]],[r_ya]]],[11,r_Fa,E,E,7,[[[T]],[T]]],[11,r_Aa,E,E,7,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,7,[[[r_ea]],[U]]],[11,r_Ba,E,E,7,[[[r_ea]],[T]]],[11,r_Ca,E,E,7,[[[r_ea]],[T]]],[11,r_Da,E,E,7,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,8,[[[U]],[r_ya]]],[11,r_Fa,E,E,8,[[[T]],[T]]],[11,r_Aa,E,E,8,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,8,[[[r_ea]],[U]]],[11,r_Ba,E,E,8,[[[r_ea]],[T]]],[11,r_Ca,E,E,8,[[[r_ea]],[T]]],[11,r_Da,E,E,8,[[[r_ea]],[r_Ea]]],[11,r_za,r_El,E,9,[[[U]],[r_ya]]],[11,r_Fa,E,E,9,[[[T]],[T]]],[11,r_Aa,E,E,9,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,9,[[[r_ea]],[U]]],[11,r_Ba,E,E,9,[[[r_ea]],[T]]],[11,r_Ca,E,E,9,[[[r_ea]],[T]]],[11,r_Da,E,E,9,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,10,[[[U]],[r_ya]]],[11,r_Fa,E,E,10,[[[T]],[T]]],[11,r_Aa,E,E,10,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,10,[[[r_ea]],[U]]],[11,r_Ba,E,E,10,[[[r_ea]],[T]]],[11,r_Ca,E,E,10,[[[r_ea]],[T]]],[11,r_Da,E,E,10,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,11,[[[U]],[r_ya]]],[11,r_Fa,E,E,11,[[[T]],[T]]],[11,r_Aa,E,E,11,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,11,[[[r_ea]],[U]]],[11,r_Ba,E,E,11,[[[r_ea]],[T]]],[11,r_Ca,E,E,11,[[[r_ea]],[T]]],[11,r_Da,E,E,11,[[[r_ea]],[r_Ea]]],[11,r_za,r_Fl,E,12,[[[U]],[r_ya]]],[11,r_Fa,E,E,12,[[[T]],[T]]],[11,r_Aa,E,E,12,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,12,[[[r_ea]],[U]]],[11,r_Ba,E,E,12,[[[r_ea]],[T]]],[11,r_Ca,E,E,12,[[[r_ea]],[T]]],[11,r_Da,E,E,12,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,13,[[[U]],[r_ya]]],[11,r_Fa,E,E,13,[[[T]],[T]]],[11,r_Aa,E,E,13,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,13,[[[r_ea]],[U]]],[11,r_Ba,E,E,13,[[[r_ea]],[T]]],[11,r_Ca,E,E,13,[[[r_ea]],[T]]],[11,r_Da,E,E,13,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,14,[[[U]],[r_ya]]],[11,r_Fa,E,E,14,[[[T]],[T]]],[11,r_Aa,E,E,14,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,14,[[[r_ea]],[U]]],[11,r_Ba,E,E,14,[[[r_ea]],[T]]],[11,r_Ca,E,E,14,[[[r_ea]],[T]]],[11,r_Da,E,E,14,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,14,[[[r_ea]],[T]]],[11,r_Kc,E,E,14,N],[11,r_za,E,E,15,[[[U]],[r_ya]]],[11,r_Fa,E,E,15,[[[T]],[T]]],[11,r_Aa,E,E,15,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,15,[[[r_ea]],[U]]],[11,r_Ba,E,E,15,[[[r_ea]],[T]]],[11,r_Ca,E,E,15,[[[r_ea]],[T]]],[11,r_Da,E,E,15,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,16,[[[U]],[r_ya]]],[11,r_Fa,E,E,16,[[[T]],[T]]],[11,r_Aa,E,E,16,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,16,[[[r_ea]],[U]]],[11,r_Ba,E,E,16,[[[r_ea]],[T]]],[11,r_Ca,E,E,16,[[[r_ea]],[T]]],[11,r_Da,E,E,16,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,17,[[[U]],[r_ya]]],[11,r_Fa,E,E,17,[[[T]],[T]]],[11,r_Aa,E,E,17,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,17,[[[r_ea]],[U]]],[11,r_Ba,E,E,17,[[[r_ea]],[T]]],[11,r_Ca,E,E,17,[[[r_ea]],[T]]],[11,r_Da,E,E,17,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,17,[[[r_ea]],[T]]],[11,r_Kc,E,E,17,N],[11,r_za,r_Gl,E,18,[[[U]],[r_ya]]],[11,r_Fa,E,E,18,[[[T]],[T]]],[11,r_Aa,E,E,18,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,18,[[[r_ea]],[U]]],[11,r_Ba,E,E,18,[[[r_ea]],[T]]],[11,r_Ca,E,E,18,[[[r_ea]],[T]]],[11,r_Da,E,E,18,[[[r_ea]],[r_Ea]]],[11,"to_string",E,E,18,[[[r_ea]],["string"]]],[11,r_Ja,E,E,18,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_ll,E,4,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Fl,E,14,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,17,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Gl,E,18,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ka,r_Fl,E,13,[[[r_ea]],[r_Ma]]],[11,r_La,r_jl,E,0,[[[r_ea]]]],[11,r_ib,r_ll,E,4,[[[r_ea]],[r_3d]]],[11,r_ib,r_Fl,E,14,[[[r_ea]],[r_ul]]],[11,r_ib,E,E,17,[[[r_ea]],[r_sl]]],[11,"alloc",E,E,13,N],[11,"dealloc",E,E,13,N],[11,r_Hl,r_Dl,E,8,[[[r_ea],[r_da]],[r_fa,[r_tc]]]],[11,r_Il,E,E,8,[[[r_ea],[r_tc],[r_da]]]],[11,r_hm,r_Bl,E,20,[[[r_ea],[r_Za]],[r_ja]]],[11,r_cb,E,E,20,[[[r_ea],[r_5a]]]],[11,r_Sd,E,E,20,[[[r_ea]]]],[11,r_Jl,r_yl,E,1,[[[r_ea],[r_da],[r_da]],[r_Ll]]],[11,r_Kl,E,E,1,[[[r_ea],[r_Ll]]]]],"p":[[3,"Arch"],[3,r_Ml],[3,"Cpu"],[3,r_Nl],[3,r_7d],[3,r_Ol],[3,r_Pl],[3,r_Ql],[3,r_Rl],[3,r_Sl],[3,r_Tl],[4,r_Ul],[3,r_Vl],[3,r_Wl],[3,r_Xl],[3,"Hole"],[3,r_Yl],[3,r_Zl],[3,r_0l],[8,r_1l],[3,r_2l]]};
searchIndex["spin"]={r_ac:"Synchronization primitives based on spinning","i":[[3,r_Pa,"spin","This type provides MUTual EXclusion based on spinning.",N,N],[3,r_Ra,E,"A guard to which the protected data can be accessed",N,N],[3,r_Qa,E,"A reader-writer lock",N,N],[3,r_Sa,E,"A guard to which the protected data can be read",N,N],[3,r_Ta,E,"A guard to which the protected data can be written",N,N],[3,"Once",E,"A synchronization primitive which can be used to run a…",N,N],[11,r_fc,E,r_ta,0,[[[T]],[r_Ma]]],[11,r_ua,E,"Consumes this mutex, returning the underlying data.",0,[[[r_ea]],[T]]],[11,"lock",E,"Locks the spinlock and returns a guard.",0,[[[r_ea]],[r_sa]]],[11,"force_unlock",E,"Force unlock the spinlock.",0,[[[r_ea]]]],[11,"try_lock",E,"Tries to lock the mutex. If it is already locked, it will…",0,[[[r_ea]],[r_va,[r_sa]]]],[11,r_fc,E,r_ta,1,[[[T]],[r_Oa]]],[11,r_ua,E,"Consumes this `RwLock`, returning the underlying data.",1,[[[r_ea]],[T]]],[11,r_oc,E,"Locks this rwlock with shared read access, blocking the…",1,[[[r_ea]],[r_wa]]],[11,"try_read",E,"Attempt to acquire this lock with shared read access.",1,[[[r_ea]],[r_va,[r_wa]]]],[11,"force_read_decrement",E,"Force decrement the reader count.",1,[[[r_ea]]]],[11,"force_write_unlock",E,"Force unlock exclusive write access.",1,[[[r_ea]]]],[11,r_lc,E,"Lock this rwlock with exclusive write access, blocking the…",1,[[[r_ea]],[r_xa]]],[11,"try_write",E,"Attempt to lock this rwlock with exclusive write access.",1,[[[r_ea]],[r_va,[r_xa]]]],[18,"INIT",E,"Initialization constant of `Once`.",2,N],[11,r_fc,E,"Creates a new `Once` value.",2,[[],["once"]]],[11,"call_once",E,"Performs an initialization routine once and only once. The…",2,[[[r_ea],["f"]],[T]]],[11,"try",E,"Returns a pointer iff the `Once` was previously initialized",2,[[[r_ea]],[r_va]]],[11,"wait",E,"Like try, but will spin if the `Once` is in the process of…",2,[[[r_ea]],[r_va]]],[11,r_za,E,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,3,[[[U]],[r_ya]]],[11,r_Fa,E,E,3,[[[T]],[T]]],[11,r_Aa,E,E,3,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,3,[[[r_ea]],[U]]],[11,r_Ba,E,E,3,[[[r_ea]],[T]]],[11,r_Ca,E,E,3,[[[r_ea]],[T]]],[11,r_Da,E,E,3,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,1,[[[U]],[r_ya]]],[11,r_Fa,E,E,1,[[[T]],[T]]],[11,r_Aa,E,E,1,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,1,[[[r_ea]],[U]]],[11,r_Ba,E,E,1,[[[r_ea]],[T]]],[11,r_Ca,E,E,1,[[[r_ea]],[T]]],[11,r_Da,E,E,1,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,4,[[[U]],[r_ya]]],[11,r_Fa,E,E,4,[[[T]],[T]]],[11,r_Aa,E,E,4,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,4,[[[r_ea]],[U]]],[11,r_Ba,E,E,4,[[[r_ea]],[T]]],[11,r_Ca,E,E,4,[[[r_ea]],[T]]],[11,r_Da,E,E,4,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,5,[[[U]],[r_ya]]],[11,r_Fa,E,E,5,[[[T]],[T]]],[11,r_Aa,E,E,5,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,5,[[[r_ea]],[U]]],[11,r_Ba,E,E,5,[[[r_ea]],[T]]],[11,r_Ca,E,E,5,[[[r_ea]],[T]]],[11,r_Da,E,E,5,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,2,[[[U]],[r_ya]]],[11,r_Fa,E,E,2,[[[T]],[T]]],[11,r_Aa,E,E,2,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,2,[[[r_ea]],[U]]],[11,r_Ba,E,E,2,[[[r_ea]],[T]]],[11,r_Ca,E,E,2,[[[r_ea]],[T]]],[11,r_Da,E,E,2,[[[r_ea]],[r_Ea]]],[11,r_Ha,E,E,3,[[[r_ea]],[T]]],[11,r_Ha,E,E,5,[[[r_ea]],[T]]],[11,r_Ja,E,E,3,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,4,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,5,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,1,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,2,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ka,E,E,3,[[[r_ea]],[T]]],[11,r_Ka,E,E,4,[[[r_ea]],[T]]],[11,r_Ka,E,E,5,[[[r_ea]],[T]]],[11,r_La,E,"The dropping of the MutexGuard will release the lock it…",3,[[[r_ea]]]],[11,r_La,E,E,4,[[[r_ea]]]],[11,r_La,E,E,5,[[[r_ea]]]],[11,r_Na,E,E,0,[[],[r_Ma]]],[11,r_Na,E,E,1,[[],[r_Oa]]]],"p":[[3,r_Pa],[3,r_Qa],[3,"Once"],[3,r_Ra],[3,r_Sa],[3,r_Ta]]};
searchIndex[r_2d]={r_ac:E,"i":[[3,r_ce,r_2d,E,N,N],[3,r_6d,E,E,N,N],[12,r_3l,E,E,0,N],[12,r_4l,E,E,0,N],[12,r_5l,E,"The state of this processor. Always check that the…",0,N],[12,r_6l,E,"Whether this processor is the Bootstrap Processor (BSP),…",0,N],[3,r_7d,E,"Describes a physical mapping created by…",N,N],[12,"physical_start",E,E,1,N],[12,"virtual_start",E,E,1,N],[12,"region_length",E,E,1,N],[12,"mapped_length",E,E,1,N],[3,r_le,E,"All the information from parsing the static tables. This…",N,N],[4,r_8d,E,E,N,N],[13,"EndOfStream",E,E,2,N],[13,"UnexpectedByte",E,E,2,N],[13,"IncompatibleValueConversion",E,E,2,N],[13,"InvalidPath",E,E,2,N],[13,"InvalidFieldFlags",E,E,2,N],[13,"InvalidNameSeg",E,E,2,N],[13,"NeedsBacktrack",E,"This is a special error type that marks that the parser…",2,N],[4,r_9d,E,E,N,N],[13,"UnexpectedEntry",E,E,3,N],[13,"InterruptOverrideEntryHasInvalidBus",E,E,3,N],[13,"InvalidLocalNmiLine",E,E,3,N],[13,"NoLocalNmiLineSpecified",E,E,3,N],[13,"MpsIntiInvalidPolarity",E,E,3,N],[13,"MpsIntiInvalidTriggerMode",E,E,3,N],[4,r_ae,E,E,N,N],[13,"RsdpIncorrectSignature",E,E,4,N],[13,"RsdpInvalidOemId",E,E,4,N],[13,"RsdpInvalidChecksum",E,E,4,N],[13,"NoValidRsdp",E,E,4,N],[13,"SdtInvalidSignature",E,E,4,N],[13,"SdtInvalidOemId",E,E,4,N],[13,"SdtInvalidTableId",E,E,4,N],[13,"SdtInvalidChecksum",E,E,4,N],[13,"InvalidAmlTable",E,E,4,N],[13,"InvalidMadt",E,E,4,N],[4,r_be,E,E,N,N],[13,"Disabled",E,"A processor in this state is unusable, and you must not…",5,N],[13,"WaitingForSipi",E,"A processor waiting for a SIPI (Startup Inter-processor…",5,N],[13,r_7l,E,"A Running processor is currently brought up and running…",5,N],[5,"search_for_rsdp_bios",E,"This is the entry point of `acpi` if you have no…",N,[[["h"]],[r_ya,[r_Wd,r_Xd]]]],[5,"parse_rsdp",E,"This is the entry point of `acpi` if you have the physical…",N,[[["h"],[r_da]],[r_ya,[r_Wd,r_Xd]]]],[5,"parse_rsdt",E,"This is the entry point of `acpi` if you already have the…",N,[[["h"],["u8"],[r_da]],[r_ya,[r_Wd,r_Xd]]]],[11,"parse_aml_tables",E,E,6,[[[r_Wd],["h"]],[r_ya,["amlnamespace",r_Xd]]]],[0,"interrupt",E,E,N,N],[3,r_de,r_4d,E,N,N],[12,"id",E,E,7,N],[12,"address",E,E,7,N],[12,"global_system_interrupt_base",E,E,7,N],[3,r_ee,E,"Describes a difference in the mapping of an ISA interrupt…",N,N],[12,"isa_source",E,E,8,N],[12,r_Yd,E,E,8,N],[12,r_Zd,E,E,8,N],[12,r_0d,E,E,8,N],[3,r_fe,E,"Describes a Global System Interrupt that should be enabled…",N,N],[12,r_Yd,E,E,9,N],[12,r_Zd,E,E,9,N],[12,r_0d,E,E,9,N],[4,r_ge,E,E,N,N],[13,"Lint0",E,E,10,N],[13,"Lint1",E,E,10,N],[4,r_he,E,E,N,N],[13,r_1d,E,E,11,N],[13,"ActiveHigh",E,E,11,N],[13,"ActiveLow",E,E,11,N],[4,r_ie,E,E,N,N],[13,r_1d,E,E,12,N],[13,"Edge",E,E,12,N],[13,r_jb,E,E,12,N],[4,r_je,E,E,N,N],[13,"Pic",E,"This model is only chosen when a newer one can not be…",13,N],[13,"Apic",E,"Describes an interrupt controller based around the…",13,N],[12,"local_apic_address","acpi::interrupt::InterruptModel",E,13,N],[12,"io_apics",E,E,13,N],[12,"local_apic_nmi_line",E,E,13,N],[12,"interrupt_source_overrides",E,E,13,N],[12,"nmi_sources",E,E,13,N],[12,"also_has_legacy_pics",E,"If this field is set, you must remap and mask all the…",13,N],[8,r_ke,r_2d,"An implementation of this trait must be provided to allow…",N,N],[10,r_Jl,E,"Given a starting physical address and a size, map a region…",14,[[[r_ea],[r_da],[r_da]],[r_3d]]],[10,r_Kl,E,"Unmap the given physical mapping. Safe because we consume…",14,[[[r_ea],[r_3d]]]],[11,"boot_processor",E,"A description of the boot processor. Until you bring any…",15,[[[r_ea]],[r_va]]],[11,"application_processors",E,"Descriptions of each of the application processors. These…",15,[[[r_ea]],["vec"]]],[11,"interrupt_model",E,"The interrupt model supported by this system.",15,[[[r_ea]],[r_va]]],[14,"parser_trace",E,"Easy macro for controlling whether debug output is printed…",N,N],[14,"parse_any_of",E,"This macro takes a parser and one or more parsing…",N,N],[14,"check_attempt",E,"This macro wraps parselets that check if we're parsing the…",N,N],[11,r_za,E,E,6,[[[U]],[r_ya]]],[11,r_Fa,E,E,6,[[[T]],[T]]],[11,r_Aa,E,E,6,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,6,[[[r_ea]],[U]]],[11,r_Ba,E,E,6,[[[r_ea]],[T]]],[11,r_Ca,E,E,6,[[[r_ea]],[T]]],[11,r_Da,E,E,6,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,0,[[[r_ea]],[T]]],[11,r_Kc,E,E,0,N],[11,r_za,E,E,1,[[[U]],[r_ya]]],[11,r_Fa,E,E,1,[[[T]],[T]]],[11,r_Aa,E,E,1,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,1,[[[r_ea]],[U]]],[11,r_Ba,E,E,1,[[[r_ea]],[T]]],[11,r_Ca,E,E,1,[[[r_ea]],[T]]],[11,r_Da,E,E,1,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,15,[[[U]],[r_ya]]],[11,r_Fa,E,E,15,[[[T]],[T]]],[11,r_Aa,E,E,15,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,15,[[[r_ea]],[U]]],[11,r_Ba,E,E,15,[[[r_ea]],[T]]],[11,r_Ca,E,E,15,[[[r_ea]],[T]]],[11,r_Da,E,E,15,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,2,[[[U]],[r_ya]]],[11,r_Fa,E,E,2,[[[T]],[T]]],[11,r_Aa,E,E,2,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,2,[[[r_ea]],[U]]],[11,r_Ba,E,E,2,[[[r_ea]],[T]]],[11,r_Ca,E,E,2,[[[r_ea]],[T]]],[11,r_Da,E,E,2,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,3,[[[U]],[r_ya]]],[11,r_Fa,E,E,3,[[[T]],[T]]],[11,r_Aa,E,E,3,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,3,[[[r_ea]],[U]]],[11,r_Ba,E,E,3,[[[r_ea]],[T]]],[11,r_Ca,E,E,3,[[[r_ea]],[T]]],[11,r_Da,E,E,3,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,4,[[[U]],[r_ya]]],[11,r_Fa,E,E,4,[[[T]],[T]]],[11,r_Aa,E,E,4,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,4,[[[r_ea]],[U]]],[11,r_Ba,E,E,4,[[[r_ea]],[T]]],[11,r_Ca,E,E,4,[[[r_ea]],[T]]],[11,r_Da,E,E,4,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,5,[[[U]],[r_ya]]],[11,r_Fa,E,E,5,[[[T]],[T]]],[11,r_Aa,E,E,5,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,5,[[[r_ea]],[U]]],[11,r_Ba,E,E,5,[[[r_ea]],[T]]],[11,r_Ca,E,E,5,[[[r_ea]],[T]]],[11,r_Da,E,E,5,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,5,[[[r_ea]],[T]]],[11,r_Kc,E,E,5,N],[11,r_za,r_4d,E,7,[[[U]],[r_ya]]],[11,r_Fa,E,E,7,[[[T]],[T]]],[11,r_Aa,E,E,7,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,7,[[[r_ea]],[U]]],[11,r_Ba,E,E,7,[[[r_ea]],[T]]],[11,r_Ca,E,E,7,[[[r_ea]],[T]]],[11,r_Da,E,E,7,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,8,[[[U]],[r_ya]]],[11,r_Fa,E,E,8,[[[T]],[T]]],[11,r_Aa,E,E,8,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,8,[[[r_ea]],[U]]],[11,r_Ba,E,E,8,[[[r_ea]],[T]]],[11,r_Ca,E,E,8,[[[r_ea]],[T]]],[11,r_Da,E,E,8,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,9,[[[U]],[r_ya]]],[11,r_Fa,E,E,9,[[[T]],[T]]],[11,r_Aa,E,E,9,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,9,[[[r_ea]],[U]]],[11,r_Ba,E,E,9,[[[r_ea]],[T]]],[11,r_Ca,E,E,9,[[[r_ea]],[T]]],[11,r_Da,E,E,9,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,10,[[[U]],[r_ya]]],[11,r_Fa,E,E,10,[[[T]],[T]]],[11,r_Aa,E,E,10,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,10,[[[r_ea]],[U]]],[11,r_Ba,E,E,10,[[[r_ea]],[T]]],[11,r_Ca,E,E,10,[[[r_ea]],[T]]],[11,r_Da,E,E,10,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,11,[[[U]],[r_ya]]],[11,r_Fa,E,E,11,[[[T]],[T]]],[11,r_Aa,E,E,11,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,11,[[[r_ea]],[U]]],[11,r_Ba,E,E,11,[[[r_ea]],[T]]],[11,r_Ca,E,E,11,[[[r_ea]],[T]]],[11,r_Da,E,E,11,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,12,[[[U]],[r_ya]]],[11,r_Fa,E,E,12,[[[T]],[T]]],[11,r_Aa,E,E,12,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,12,[[[r_ea]],[U]]],[11,r_Ba,E,E,12,[[[r_ea]],[T]]],[11,r_Ca,E,E,12,[[[r_ea]],[T]]],[11,r_Da,E,E,12,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,13,[[[U]],[r_ya]]],[11,r_Fa,E,E,13,[[[T]],[T]]],[11,r_Aa,E,E,13,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,13,[[[r_ea]],[U]]],[11,r_Ba,E,E,13,[[[r_ea]],[T]]],[11,r_Ca,E,E,13,[[[r_ea]],[T]]],[11,r_Da,E,E,13,[[[r_ea]],[r_Ea]]],[11,r_Ja,r_2d,E,2,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_4d,E,7,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,10,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,11,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,12,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,8,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,9,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,13,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_2d,E,3,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,4,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,5,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,15,[[[r_ea],[r_Ia]],[r_ya]]],[11,"eq",E,E,5,[[[r_ea],[r_5d]],[r_ja]]],[11,r_Ka,E,E,1,[[[r_ea]],[T]]],[11,r_ib,E,E,5,[[[r_ea]],[r_5d]]],[11,r_ib,E,E,0,[[[r_ea]],[r_8l]]]],"p":[[3,r_6d],[3,r_7d],[4,r_8d],[4,r_9d],[4,r_ae],[4,r_be],[3,r_ce],[3,r_de],[3,r_ee],[3,r_fe],[4,r_ge],[4,r_he],[4,r_ie],[4,r_je],[8,r_ke],[3,r_le]]};
searchIndex[r_Ae]={r_ac:"Complex numbers.","i":[[3,r_Ie,r_Ae,r_zg,N,N],[12,"re",E,r_Ag,0,N],[12,"im",E,r_Bg,0,N],[3,r_Je,E,E,N,N],[6,r_bi,E,E,N,N],[6,r_ci,E,E,N,N],[11,r_fc,E,r_di,0,[[[T],[T]],[r_Be]]],[11,"i",E,r_ei,0,[[],[r_Be]]],[11,r_fi,E,r_gi,0,[[[r_ea]],[T]]],[11,r_hi,E,r_ii,0,[[[r_ea],[T]],[r_Be]]],[11,r_ji,E,r_ki,0,[[[r_ea],[T]],[r_Be]]],[11,"conj",E,r_li,0,[[[r_ea]],[r_Be]]],[11,r_mi,E,r_ni,0,[[[r_ea]],[r_Be]]],[11,r_gf,E,r_oi,0,[[[r_ea]],[r_ja]]],[11,r_hf,E,r_pi,0,[[[r_ea]],[r_ja]]],[11,r_if,E,r_qi,0,[[[r_ea]],[r_ja]]],[11,r_jf,E,r_ri,0,[[[r_ea]],[r_ja]]],[11,r_za,E,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,1,[[[U]],[r_ya]]],[11,r_Fa,E,E,1,[[[T]],[T]]],[11,r_Aa,E,E,1,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,1,[[[r_ea]],[U]]],[11,r_Ba,E,E,1,[[[r_ea]],[T]]],[11,r_Ca,E,E,1,[[[r_ea]],[T]]],[11,r_Da,E,E,1,[[[r_ea]],[r_Ea]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,1,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,1,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ke,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Ke,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Ke,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Ke,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_If,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_If,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_If,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_If,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,"eq",E,E,0,[[[r_ea],[r_Be]],[r_ja]]],[11,"ne",E,E,0,[[[r_ea],[r_Be]],[r_ja]]],[11,"eq",E,E,1,[[[r_ea],[r_Ce]],[r_ja]]],[11,"ne",E,E,1,[[[r_ea],[r_Ce]],[r_ja]]],[11,r_gb,E,r_He,0,[[[r_4a]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[r_Be]]],[11,r_Fa,E,E,0,[[[T]],[r_Be]]],[11,r_hb,E,E,0,N],[11,r_Le,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Le,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Le,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Le,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Jf,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Jf,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Jf,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Jf,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Kf,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Kf,E,E,0,[[[r_ea],[r_Be]],[r_ea]]],[11,r_Kf,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Kf,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,"neg",E,E,0,[[[r_ea]],[r_Be]]],[11,r_0c,E,E,0,[[[r_ea],[r_Be]]]],[11,r_0c,E,E,0,[[[r_ea],[T]]]],[11,r_0c,E,E,0,[[[r_ea],[r_Be]]]],[11,r_0c,E,E,0,[[[r_ea],[T]]]],[11,r_1c,E,E,0,[[[r_ea],[r_Be]]]],[11,r_1c,E,E,0,[[[r_ea],[T]]]],[11,r_1c,E,E,0,[[[r_ea],[r_Be]]]],[11,r_1c,E,E,0,[[[r_ea],[T]]]],[11,r_De,E,E,0,[[[r_ea],[r_Be]]]],[11,r_De,E,E,0,[[[r_ea],[T]]]],[11,r_De,E,E,0,[[[r_ea],[r_Be]]]],[11,r_De,E,E,0,[[[r_ea],[T]]]],[11,r_Ee,E,E,0,[[[r_ea],[r_Be]]]],[11,r_Ee,E,E,0,[[[r_ea],[T]]]],[11,r_Ee,E,E,0,[[[r_ea],[r_Be]]]],[11,r_Ee,E,E,0,[[[r_ea],[T]]]],[11,r_Fe,E,E,0,[[[r_ea],[r_Be]]]],[11,r_Fe,E,E,0,[[[r_ea],[T]]]],[11,r_Fe,E,E,0,[[[r_ea],[r_Be]]]],[11,r_Fe,E,E,0,[[[r_ea],[T]]]],[11,r_si,E,E,0,[[["i"]],[r_ea]]],[11,r_si,E,E,0,[[["i"]],[r_ea]]],[11,r_Ge,E,E,0,[[["i"]],[r_ea]]],[11,r_Ge,E,E,0,[[["i"]],[r_ea]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_ib,E,E,0,[[[r_ea]],[r_Be]]],[11,r_Na,E,E,0,[[],[r_Be]]],[11,r_Te,E,E,0,[[[r_ea]],[r_va,[r_da]]]],[11,r_Me,E,E,0,[[[r_ea]],[r_va,[r_sb]]]],[11,r_Ue,E,E,0,[[[r_ea]],[r_va,["u8"]]]],[11,r_Ve,E,E,0,[[[r_ea]],[r_va,[r_pc]]]],[11,r_We,E,E,0,[[[r_ea]],[r_va,[r_vb]]]],[11,r_Xe,E,E,0,[[[r_ea]],[r_va,[r_Ud]]]],[11,r_Ne,E,E,0,[[[r_ea]],[r_va,["i8"]]]],[11,r_Oe,E,E,0,[[[r_ea]],[r_va,[r_Mf]]]],[11,r_Pe,E,E,0,[[[r_ea]],[r_va,[r_Lf]]]],[11,r_Qe,E,E,0,[[[r_ea]],[r_va,[r_Cf]]]],[11,r_Ye,E,E,0,[[[r_ea]],[r_va,[r_Ze]]]],[11,r_Re,E,E,0,[[[r_ea]],[r_va,[r_Se]]]],[11,r_0e,E,E,0,[[[r_ea]],[r_va,[r_Df]]]],[11,r_1e,E,E,0,[[[r_ea]],[r_va,[r_Ef]]]],[11,r_8e,E,E,0,[[[r_da]],[r_va]]],[11,r_2e,E,E,0,[[[r_sb]],[r_va]]],[11,r_9e,E,E,0,[[["u8"]],[r_va]]],[11,r_af,E,E,0,[[[r_pc]],[r_va]]],[11,r_bf,E,E,0,[[[r_vb]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_3e,E,E,0,[[["i8"]],[r_va]]],[11,r_4e,E,E,0,[[[r_Mf]],[r_va]]],[11,r_5e,E,E,0,[[[r_Lf]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_Fa,E,E,0,[[[U]],[r_va]]],[11,"as_",E,E,0,[[[r_ea]],[U]]],[11,r_mf,E,r_He,0,[[[r_4a],[r_vb]],[r_ya]]],[11,r_Vd,E,E,0,[[],[r_Be]]],[11,r_kf,E,E,0,[[[r_ea]],[r_ja]]],[11,r_9h,E,E,0,[[],[r_Be]]],[11,r_lf,E,E,0,[[[r_ea]],[r_ja]]],[11,r_mi,E,E,0,[[[r_ea]],[r_Be]]]],"p":[[3,r_Ie],[3,r_Je]]};
searchIndex[r_Qg]={r_ac:"A collection of numeric types and traits for Rust.","i":[[3,r_Ie,r_Qg,r_zg,N,N],[12,"re",E,r_Ag,0,N],[12,"im",E,r_Bg,0,N],[6,r_1h,E,r_2h,N,N],[8,r_ye,E,E,N,N],[10,r_re,E,r_Cg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,r_se,E,r_Dg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,"gcd",E,r_Eg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,"lcm",E,r_Fg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,r_Gg,E,r_Hg,1,[[[r_ea],[r_ea]],[r_ja]]],[10,r_Ig,E,r_Jg,1,[[[r_ea],[r_ea]],[r_ja]]],[10,r_Kg,E,r_Lg,1,[[[r_ea]],[r_ja]]],[10,r_Mg,E,r_Ng,1,[[[r_ea]],[r_ja]]],[10,r_te,E,r_Og,1,N],[11,r_ue,E,r_Pg,1,N],[5,r_fa,E,r_Rg,N,[[["a"],["a"]],[r_fa]]],[5,r_Sg,E,r_Tg,N,[[["a"],["a"]],[r_sf]]],[5,r_Ug,E,r_Vg,N,[[["a"],["a"],["a"]],[r_tf]]],[5,r_Wg,E,r_Xg,N,[[["a"],["a"],["a"]],[r_uf]]],[8,"Num",E,r_Wh,N,N],[16,r_Xh,E,E,2,N],[10,r_mf,E,r_Yh,2,[[[r_4a],[r_vb]],[r_ya]]],[8,r_ai,E,r_4g,N,N],[10,r_Vd,E,r_5g,3,[[],[r_ea]]],[10,r_kf,E,r_6g,3,[[[r_ea]],[r_ja]]],[8,"One",E,r_7g,N,N],[10,r_9h,E,r_8g,4,[[],[r_ea]]],[11,r_lf,E,r_9g,4,[[[r_ea]],[r_ja]]],[8,r_9b,E,r_Rh,N,N],[10,r_8h,E,r_Fb,5,[[[r_ea]],[r_ea]]],[10,r_Gb,E,r_Hb,5,[[[r_ea],[r_ea]],[r_ea]]],[10,r_Eb,E,r_Ib,5,[[[r_ea]],[r_ea]]],[10,r_Wf,E,r_Sh,5,[[[r_ea]],[r_ja]]],[10,r_Xf,E,r_Th,5,[[[r_ea]],[r_ja]]],[8,r_Uh,E,r_Vh,N,N],[8,r_Lb,E,r_Yg,N,N],[10,r_tb,E,r_Zg,6,[[],[r_ea]]],[10,r_ub,E,r_0g,6,[[],[r_ea]]],[5,r_9h,E,r_bh,N,[[],[T]]],[5,r_Vd,E,r_ah,N,[[],[T]]],[5,r_8h,E,r_Fb,N,[[[T]],[T]]],[5,r_Gb,E,r_Hb,N,[[[T],[T]],[T]]],[5,r_Eb,E,r_Ib,N,[[[T]],[T]]],[8,r_3b,E,r_Kh,N,N],[10,r_Lh,E,r_Mh,7,[[[r_ea],[r_ea]],[r_ea]]],[10,r_Nh,E,r_Oh,7,[[[r_ea],[r_ea]],[r_ea]]],[8,r_Tb,E,r_Bh,N,N],[10,r_Sf,E,r_Ch,8,[[[r_ea],[r_ea]],[r_va]]],[8,r_Ub,E,r_Dh,N,N],[10,r_Tf,E,r_Eh,9,[[[r_ea],[r_ea]],[r_va]]],[8,r_Vb,E,r_Fh,N,N],[10,r_Uf,E,r_Gh,10,[[[r_ea],[r_ea]],[r_va]]],[8,r_Wb,E,r_Hh,N,N],[10,r_Vf,E,r_Ih,11,[[[r_ea],[r_ea]],[r_va]]],[8,r_Sb,E,E,N,N],[10,r_ch,E,r_dh,12,[[[r_ea]],[r_vb]]],[10,r_eh,E,r_fh,12,[[[r_ea]],[r_vb]]],[10,r_gh,E,r_hh,12,[[[r_ea]],[r_vb]]],[10,r_ih,E,r_jh,12,[[[r_ea]],[r_vb]]],[10,r_kh,E,r_wb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_lh,E,r_xb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_mh,E,r_wb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_nh,E,r_xb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_oh,E,r_wb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_ph,E,r_xb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_qh,E,r_rh,12,[[[r_ea]],[r_ea]]],[10,r_sh,E,r_th,12,[[[r_ea]],[r_ea]]],[10,r_uh,E,r_vh,12,[[[r_ea]],[r_ea]]],[10,r_wh,E,r_xh,12,[[[r_ea]],[r_ea]]],[10,r_yh,E,r_zh,12,[[[r_ea]],[r_ea]]],[10,r_Ff,E,r_Ah,12,[[[r_ea],[r_vb]],[r_ea]]],[8,r_Mb,E,r_Yf,N,N],[11,r_Me,E,r_Zf,13,[[[r_ea]],[r_va,[r_sb]]]],[11,r_Ne,E,r_0f,13,[[[r_ea]],[r_va,["i8"]]]],[11,r_Oe,E,r_1f,13,[[[r_ea]],[r_va,[r_Mf]]]],[11,r_Pe,E,r_2f,13,[[[r_ea]],[r_va,[r_Lf]]]],[10,r_Qe,E,r_3f,13,[[[r_ea]],[r_va,[r_Cf]]]],[11,r_Re,E,r_4f,13,[[[r_ea]],[r_va,[r_Se]]]],[11,r_Te,E,r_5f,13,[[[r_ea]],[r_va,[r_da]]]],[11,r_Ue,E,r_6f,13,[[[r_ea]],[r_va,["u8"]]]],[11,r_Ve,E,r_7f,13,[[[r_ea]],[r_va,[r_pc]]]],[11,r_We,E,r_8f,13,[[[r_ea]],[r_va,[r_vb]]]],[10,r_Xe,E,r_9f,13,[[[r_ea]],[r_va,[r_Ud]]]],[11,r_Ye,E,r_ag,13,[[[r_ea]],[r_va,[r_Ze]]]],[11,r_0e,E,r_bg,13,[[[r_ea]],[r_va,[r_Df]]]],[11,r_1e,E,r_cg,13,[[[r_ea]],[r_va,[r_Ef]]]],[8,r_Nb,E,r_dg,N,N],[11,r_2e,E,r_eg,14,[[[r_sb]],[r_va]]],[11,r_3e,E,r_fg,14,[[["i8"]],[r_va]]],[11,r_4e,E,r_gg,14,[[[r_Mf]],[r_va]]],[11,r_5e,E,r_hg,14,[[[r_Lf]],[r_va]]],[10,r_6e,E,r_ig,14,[[[r_Cf]],[r_va]]],[11,r_7e,E,r_jg,14,[[[r_Se]],[r_va]]],[11,r_8e,E,r_kg,14,[[[r_da]],[r_va]]],[11,r_9e,E,r_lg,14,[[["u8"]],[r_va]]],[11,r_af,E,r_mg,14,[[[r_pc]],[r_va]]],[11,r_bf,E,r_ng,14,[[[r_vb]],[r_va]]],[10,r_cf,E,r_og,14,[[[r_Ud]],[r_va]]],[11,r_df,E,r_pg,14,[[[r_Ze]],[r_va]]],[11,r_ef,E,r_qg,14,[[[r_Df]],[r_va]]],[11,r_ff,E,r_rg,14,[[[r_Ef]],[r_va]]],[8,r_Ob,E,r_sg,N,N],[10,r_Fa,E,r_tg,15,[[[T]],[r_va]]],[0,r_ug,E,E,N,N],[8,r_Mb,"num::cast",r_Yf,N,N],[11,r_Me,E,r_Zf,13,[[[r_ea]],[r_va,[r_sb]]]],[11,r_Ne,E,r_0f,13,[[[r_ea]],[r_va,["i8"]]]],[11,r_Oe,E,r_1f,13,[[[r_ea]],[r_va,[r_Mf]]]],[11,r_Pe,E,r_2f,13,[[[r_ea]],[r_va,[r_Lf]]]],[10,r_Qe,E,r_3f,13,[[[r_ea]],[r_va,[r_Cf]]]],[11,r_Re,E,r_4f,13,[[[r_ea]],[r_va,[r_Se]]]],[11,r_Te,E,r_5f,13,[[[r_ea]],[r_va,[r_da]]]],[11,r_Ue,E,r_6f,13,[[[r_ea]],[r_va,["u8"]]]],[11,r_Ve,E,r_7f,13,[[[r_ea]],[r_va,[r_pc]]]],[11,r_We,E,r_8f,13,[[[r_ea]],[r_va,[r_vb]]]],[10,r_Xe,E,r_9f,13,[[[r_ea]],[r_va,[r_Ud]]]],[11,r_Ye,E,r_ag,13,[[[r_ea]],[r_va,[r_Ze]]]],[11,r_0e,E,r_bg,13,[[[r_ea]],[r_va,[r_Df]]]],[11,r_1e,E,r_cg,13,[[[r_ea]],[r_va,[r_Ef]]]],[8,r_Nb,E,r_dg,N,N],[11,r_2e,E,r_eg,14,[[[r_sb]],[r_va]]],[11,r_3e,E,r_fg,14,[[["i8"]],[r_va]]],[11,r_4e,E,r_gg,14,[[[r_Mf]],[r_va]]],[11,r_5e,E,r_hg,14,[[[r_Lf]],[r_va]]],[10,r_6e,E,r_ig,14,[[[r_Cf]],[r_va]]],[11,r_7e,E,r_jg,14,[[[r_Se]],[r_va]]],[11,r_8e,E,r_kg,14,[[[r_da]],[r_va]]],[11,r_9e,E,r_lg,14,[[["u8"]],[r_va]]],[11,r_af,E,r_mg,14,[[[r_pc]],[r_va]]],[11,r_bf,E,r_ng,14,[[[r_vb]],[r_va]]],[10,r_cf,E,r_og,14,[[[r_Ud]],[r_va]]],[11,r_df,E,r_pg,14,[[[r_Ze]],[r_va]]],[11,r_ef,E,r_qg,14,[[[r_Df]],[r_va]]],[11,r_ff,E,r_rg,14,[[[r_Ef]],[r_va]]],[5,r_ug,E,r_vg,N,[[[T]],[r_va]]],[8,r_Ob,E,r_sg,N,N],[10,r_Fa,E,r_tg,15,[[[T]],[r_va]]],[8,r_Pb,E,r_2g,N,N],[10,"as_",E,r_3g,16,[[[r_ea]],[T]]],[5,r_ug,r_Qg,r_vg,N,[[[T]],[r_va]]],[0,r_Ff,E,E,N,N],[8,"Pow","num::pow",r_Ph,N,N],[16,r_Ab,E,r_Db,17,N],[10,r_Ff,E,r_Qh,17,N],[5,r_Ff,E,r_wg,N,[[[T],[r_da]],[T]]],[5,r_xg,E,r_yg,N,[[[T],[r_da]],[r_va]]],[5,r_Ff,r_Qg,r_wg,N,[[[T],[r_da]],[T]]],[5,r_xg,E,r_yg,N,[[[T],[r_da]],[r_va]]],[5,r_Zh,E,r_0h,N,[[[T],[T],[T]],[T]]],[0,r_Be,E,E,N,N],[3,r_Ie,r_3h,r_zg,N,N],[12,"re",E,r_Ag,0,N],[12,"im",E,r_Bg,0,N],[6,r_bi,E,E,N,N],[6,r_ci,E,E,N,N],[3,r_Je,E,E,N,N],[0,"integer",r_Qg,E,N,N],[8,r_ye,r_4h,E,N,N],[10,r_re,E,r_Cg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,r_se,E,r_Dg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,"gcd",E,r_Eg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,"lcm",E,r_Fg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,r_Gg,E,r_Hg,1,[[[r_ea],[r_ea]],[r_ja]]],[10,r_Ig,E,r_Jg,1,[[[r_ea],[r_ea]],[r_ja]]],[10,r_Kg,E,r_Lg,1,[[[r_ea]],[r_ja]]],[10,r_Mg,E,r_Ng,1,[[[r_ea]],[r_ja]]],[10,r_te,E,r_Og,1,N],[11,r_ue,E,r_Pg,1,N],[5,r_te,E,r_ui,N,N],[5,r_re,E,r_vi,N,[[[T],[T]],[T]]],[5,r_se,E,r_wi,N,[[[T],[T]],[T]]],[5,r_ue,E,r_xi,N,N],[5,"gcd",E,r_yi,N,[[[T],[T]],[T]]],[5,"lcm",E,r_zi,N,[[[T],[T]],[T]]],[3,r_ze,E,r_ti,N,N],[5,r_Ai,E,r_Bi,N,[[[T],[T]],[T]]],[5,r_Ci,E,r_Di,N,N],[8,r_xe,E,r_Ei,N,N],[10,r_ne,E,r_oe,18,[[[r_ea],[r_vb]],[r_ea]]],[11,r_ve,E,r_pe,18,[[[r_ea]],[r_ea]]],[11,r_we,E,r_qe,18,[[[r_ea]],[r_ea]]],[5,r_ve,E,r_pe,N,[[[T]],[T]]],[5,r_ne,E,r_oe,N,[[[T],[r_vb]],[T]]],[5,r_we,E,r_qe,N,[[[T]],[T]]],[0,"iter",r_Qg,E,N,N],[3,r_vf,r_5h,r_Hi,N,N],[5,r_fa,E,r_Rg,N,[[["a"],["a"]],[r_fa]]],[3,r_wf,E,r_Ii,N,N],[5,r_Sg,E,r_Tg,N,[[["a"],["a"]],[r_sf]]],[3,r_xf,E,r_Ji,N,N],[5,r_Ug,E,r_Vg,N,[[["a"],["a"],["a"]],[r_tf]]],[3,r_yf,E,r_Ki,N,N],[5,r_Wg,E,r_Xg,N,[[["a"],["a"],["a"]],[r_uf]]],[0,"traits",r_Qg,E,N,N],[0,r_Ni,r_1g,E,N,N],[8,r_Lb,"num::traits::bounds",r_Yg,N,N],[10,r_tb,E,r_Zg,6,[[],[r_ea]]],[10,r_ub,E,r_0g,6,[[],[r_ea]]],[0,r_ug,r_1g,E,N,N],[8,r_Mb,"num::traits::cast",r_Yf,N,N],[11,r_Me,E,r_Zf,13,[[[r_ea]],[r_va,[r_sb]]]],[11,r_Ne,E,r_0f,13,[[[r_ea]],[r_va,["i8"]]]],[11,r_Oe,E,r_1f,13,[[[r_ea]],[r_va,[r_Mf]]]],[11,r_Pe,E,r_2f,13,[[[r_ea]],[r_va,[r_Lf]]]],[10,r_Qe,E,r_3f,13,[[[r_ea]],[r_va,[r_Cf]]]],[11,r_Re,E,r_4f,13,[[[r_ea]],[r_va,[r_Se]]]],[11,r_Te,E,r_5f,13,[[[r_ea]],[r_va,[r_da]]]],[11,r_Ue,E,r_6f,13,[[[r_ea]],[r_va,["u8"]]]],[11,r_Ve,E,r_7f,13,[[[r_ea]],[r_va,[r_pc]]]],[11,r_We,E,r_8f,13,[[[r_ea]],[r_va,[r_vb]]]],[10,r_Xe,E,r_9f,13,[[[r_ea]],[r_va,[r_Ud]]]],[11,r_Ye,E,r_ag,13,[[[r_ea]],[r_va,[r_Ze]]]],[11,r_0e,E,r_bg,13,[[[r_ea]],[r_va,[r_Df]]]],[11,r_1e,E,r_cg,13,[[[r_ea]],[r_va,[r_Ef]]]],[8,r_Nb,E,r_dg,N,N],[11,r_2e,E,r_eg,14,[[[r_sb]],[r_va]]],[11,r_3e,E,r_fg,14,[[["i8"]],[r_va]]],[11,r_4e,E,r_gg,14,[[[r_Mf]],[r_va]]],[11,r_5e,E,r_hg,14,[[[r_Lf]],[r_va]]],[10,r_6e,E,r_ig,14,[[[r_Cf]],[r_va]]],[11,r_7e,E,r_jg,14,[[[r_Se]],[r_va]]],[11,r_8e,E,r_kg,14,[[[r_da]],[r_va]]],[11,r_9e,E,r_lg,14,[[["u8"]],[r_va]]],[11,r_af,E,r_mg,14,[[[r_pc]],[r_va]]],[11,r_bf,E,r_ng,14,[[[r_vb]],[r_va]]],[10,r_cf,E,r_og,14,[[[r_Ud]],[r_va]]],[11,r_df,E,r_pg,14,[[[r_Ze]],[r_va]]],[11,r_ef,E,r_qg,14,[[[r_Df]],[r_va]]],[11,r_ff,E,r_rg,14,[[[r_Ef]],[r_va]]],[5,r_ug,E,r_vg,N,[[[T]],[r_va]]],[8,r_Ob,E,r_sg,N,N],[10,r_Fa,E,r_tg,15,[[[T]],[r_va]]],[8,r_Pb,E,r_2g,N,N],[10,"as_",E,r_3g,16,[[[r_ea]],[T]]],[0,r_Oi,r_1g,E,N,N],[8,r_Qb,"num::traits::float",r_Pi,N,N],[10,r_Qi,E,r_Ri,19,[[],[r_ea]]],[10,r_Si,E,r_Ti,19,[[],[r_ea]]],[10,"nan",E,r_Ui,19,[[],[r_ea]]],[10,r_Vi,E,r_Wi,19,[[],[r_ea]]],[10,r_tb,E,r_Xi,19,[[],[r_ea]]],[10,r_Yi,E,r_Zi,19,[[],[r_ea]]],[10,r_0i,E,r_1i,19,[[],[r_ea]]],[10,r_ub,E,r_2i,19,[[],[r_ea]]],[11,r_gf,E,r_3i,19,[[[r_ea]],[r_ja]]],[11,r_hf,E,r_4i,19,[[[r_ea]],[r_ja]]],[11,r_if,E,r_5i,19,[[[r_ea]],[r_ja]]],[11,r_jf,E,r_6i,19,[[[r_ea]],[r_ja]]],[10,r_7i,E,r_8i,19,[[[r_ea]],[r_9i]]],[11,r_Nf,E,r_aj,19,[[[r_ea]],[r_ea]]],[11,r_bj,E,r_cj,19,[[[r_ea]],[r_ea]]],[11,r_Of,E,r_dj,19,[[[r_ea]],[r_ea]]],[11,r_Pf,E,r_ej,19,[[[r_ea]],[r_ea]]],[11,r_Qf,E,r_fj,19,[[[r_ea]],[r_ea]]],[11,r_8h,E,r_gj,19,[[[r_ea]],[r_ea]]],[11,r_Eb,E,r_hj,19,[[[r_ea]],[r_ea]]],[11,r_ij,E,r_jj,19,[[[r_ea]],[r_ja]]],[11,r_kj,E,r_lj,19,[[[r_ea]],[r_ja]]],[11,"min",E,r_mj,19,[[[r_ea],[r_ea]],[r_ea]]],[11,"max",E,r_nj,19,[[[r_ea],[r_ea]],[r_ea]]],[11,r_Rf,E,r_oj,19,[[[r_ea]],[r_ea]]],[11,"powi",E,r_pj,19,[[[r_ea],[r_Lf]],[r_ea]]],[10,r_qj,E,r_rj,19,[[[r_ea]],[r_ea]]],[10,r_sj,E,r_tj,19,[[[r_ea]],[r_ea]]],[10,r_uj,E,r_vj,19,N],[8,r_Rb,E,E,N,N],[10,"E",E,r_wj,20,[[],[r_ea]]],[10,r_xj,E,r_yj,20,[[],[r_ea]]],[10,r_zj,E,r_Aj,20,[[],[r_ea]]],[10,r_Bj,E,r_Cj,20,[[],[r_ea]]],[10,r_Dj,E,r_Ej,20,[[],[r_ea]]],[10,r_Fj,E,r_Gj,20,[[],[r_ea]]],[10,r_Hj,E,r_Ij,20,[[],[r_ea]]],[10,r_Jj,E,r_Kj,20,[[],[r_ea]]],[10,r_Lj,E,r_Mj,20,[[],[r_ea]]],[10,r_Nj,E,r_Oj,20,[[],[r_ea]]],[10,r_Pj,E,r_Qj,20,[[],[r_ea]]],[10,"LN_2",E,r_Rj,20,[[],[r_ea]]],[10,r_Sj,E,r_Tj,20,[[],[r_ea]]],[10,r_Uj,E,r_Vj,20,[[],[r_ea]]],[10,"PI",E,r_Wj,20,[[],[r_ea]]],[10,r_Xj,E,r_Yj,20,[[],[r_ea]]],[0,r_Zj,r_1g,E,N,N],[8,r_ai,"num::traits::identities",r_4g,N,N],[10,r_Vd,E,r_5g,3,[[],[r_ea]]],[10,r_kf,E,r_6g,3,[[[r_ea]],[r_ja]]],[8,"One",E,r_7g,N,N],[10,r_9h,E,r_8g,4,[[],[r_ea]]],[11,r_lf,E,r_9g,4,[[[r_ea]],[r_ja]]],[5,r_Vd,E,r_ah,N,[[],[T]]],[5,r_9h,E,r_bh,N,[[],[T]]],[0,"int",r_1g,E,N,N],[8,r_Sb,"num::traits::int",E,N,N],[10,r_ch,E,r_dh,12,[[[r_ea]],[r_vb]]],[10,r_eh,E,r_fh,12,[[[r_ea]],[r_vb]]],[10,r_gh,E,r_hh,12,[[[r_ea]],[r_vb]]],[10,r_ih,E,r_jh,12,[[[r_ea]],[r_vb]]],[10,r_kh,E,r_wb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_lh,E,r_xb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_mh,E,r_wb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_nh,E,r_xb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_oh,E,r_wb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_ph,E,r_xb,12,[[[r_ea],[r_vb]],[r_ea]]],[10,r_qh,E,r_rh,12,[[[r_ea]],[r_ea]]],[10,r_sh,E,r_th,12,[[[r_ea]],[r_ea]]],[10,r_uh,E,r_vh,12,[[[r_ea]],[r_ea]]],[10,r_wh,E,r_xh,12,[[[r_ea]],[r_ea]]],[10,r_yh,E,r_zh,12,[[[r_ea]],[r_ea]]],[10,r_Ff,E,r_Ah,12,[[[r_ea],[r_vb]],[r_ea]]],[0,"ops",r_1g,E,N,N],[0,r_0j,r_Jh,E,N,N],[8,r_Tb,"num::traits::ops::checked",r_Bh,N,N],[10,r_Sf,E,r_Ch,8,[[[r_ea],[r_ea]],[r_va]]],[8,r_Ub,E,r_Dh,N,N],[10,r_Tf,E,r_Eh,9,[[[r_ea],[r_ea]],[r_va]]],[8,r_Vb,E,r_Fh,N,N],[10,r_Uf,E,r_Gh,10,[[[r_ea],[r_ea]],[r_va]]],[8,r_Wb,E,r_Hh,N,N],[10,r_Vf,E,r_Ih,11,[[[r_ea],[r_ea]],[r_va]]],[8,r_Xb,E,r_1j,N,N],[10,r_2j,E,r_3j,21,[[[r_ea],[r_ea]],[r_va]]],[8,r_Yb,E,r_4j,N,N],[10,r_5j,E,r_6j,22,[[[r_ea]],[r_va]]],[8,r_Zb,E,r_7j,N,N],[10,r_8j,E,r_yb,23,[[[r_ea],[r_vb]],[r_va]]],[8,r_0b,E,r_9j,N,N],[10,r_ak,E,r_yb,24,[[[r_ea],[r_vb]],[r_va]]],[0,r_mi,r_Jh,E,N,N],[8,"Inv","num::traits::ops::inv",r_bk,N,N],[16,r_Ab,E,r_Db,25,N],[10,r_mi,E,r_ck,25,N],[0,r_Bb,r_Jh,E,N,N],[8,r_1b,"num::traits::ops::mul_add",r_dk,N,N],[16,r_Ab,E,r_ek,26,N],[10,r_Bb,E,r_Cb,26,N],[8,r_2b,E,r_fk,N,N],[10,r_gk,E,r_Cb,27,N],[0,r_hk,r_Jh,E,N,N],[8,r_3b,"num::traits::ops::saturating",r_Kh,N,N],[10,r_Lh,E,r_Mh,7,[[[r_ea],[r_ea]],[r_ea]]],[10,r_Nh,E,r_Oh,7,[[[r_ea],[r_ea]],[r_ea]]],[0,r_ik,r_Jh,E,N,N],[8,r_4b,"num::traits::ops::wrapping",r_jk,N,N],[10,r_kk,E,r_lk,28,[[[r_ea],[r_ea]],[r_ea]]],[8,r_5b,E,r_mk,N,N],[10,r_nk,E,r_ok,29,[[[r_ea],[r_ea]],[r_ea]]],[8,r_6b,E,r_pk,N,N],[10,r_qk,E,r_rk,30,[[[r_ea],[r_ea]],[r_ea]]],[8,r_7b,E,r_sk,N,N],[10,r_tk,E,r_uk,31,[[[r_ea],[r_vb]],[r_ea]]],[8,r_8b,E,r_vk,N,N],[10,r_wk,E,r_xk,32,[[[r_ea],[r_vb]],[r_ea]]],[0,r_Ff,r_1g,E,N,N],[8,"Pow","num::traits::pow",r_Ph,N,N],[16,r_Ab,E,r_Db,17,N],[10,r_Ff,E,r_Qh,17,N],[5,r_Ff,E,r_wg,N,[[[T],[r_da]],[T]]],[5,r_xg,E,r_yg,N,[[[T],[r_da]],[r_va]]],[0,"sign",r_1g,E,N,N],[8,r_9b,"num::traits::sign",r_Rh,N,N],[10,r_8h,E,r_Fb,5,[[[r_ea]],[r_ea]]],[10,r_Gb,E,r_Hb,5,[[[r_ea],[r_ea]],[r_ea]]],[10,r_Eb,E,r_Ib,5,[[[r_ea]],[r_ea]]],[10,r_Wf,E,r_Sh,5,[[[r_ea]],[r_ja]]],[10,r_Xf,E,r_Th,5,[[[r_ea]],[r_ja]]],[5,r_8h,E,r_Fb,N,[[[T]],[T]]],[5,r_Gb,E,r_Hb,N,[[[T],[T]],[T]]],[5,r_Eb,E,r_Ib,N,[[[T]],[T]]],[8,r_Uh,E,r_Vh,N,N],[8,"Num",r_1g,r_Wh,N,N],[16,r_Xh,E,E,2,N],[10,r_mf,E,r_Yh,2,[[[r_4a],[r_vb]],[r_ya]]],[8,r_yk,E,r_zk,N,N],[8,r_Ak,E,r_Bk,N,N],[8,r_Ck,E,r_Dk,N,N],[8,r_Ek,E,r_Fk,N,N],[8,r_Gk,E,r_Hk,N,N],[8,r_Ik,E,r_Jk,N,N],[4,r_Kb,E,E,N,N],[13,r_Li,E,E,33,N],[13,r_Mi,E,E,33,N],[3,r_Jb,E,E,N,N],[12,"kind",E,E,34,N],[5,r_Zh,E,r_0h,N,[[[T],[T],[T]],[T]]],[0,"rational",r_Qg,E,N,N],[3,r_Gf,r_6h,r_Kk,N,N],[6,r_1h,E,r_2h,N,N],[6,r_Lk,E,r_Mk,N,N],[6,r_Nk,E,r_Ok,N,N],[3,r_Hf,E,E,N,N],[11,r_za,r_3h,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,35,[[[U]],[r_ya]]],[11,r_Fa,E,E,35,[[[T]],[T]]],[11,r_Aa,E,E,35,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,35,[[[r_ea]],[U]]],[11,r_Ba,E,E,35,[[[r_ea]],[T]]],[11,r_Ca,E,E,35,[[[r_ea]],[T]]],[11,r_Da,E,E,35,[[[r_ea]],[r_Ea]]],[11,r_za,r_4h,E,36,[[[U]],[r_ya]]],[11,r_Fa,E,E,36,[[[T]],[T]]],[11,r_of,E,E,36,[[[r_ea]],["i"]]],[11,r_Aa,E,E,36,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,36,[[[r_ea]],[U]]],[11,r_Ba,E,E,36,[[[r_ea]],[T]]],[11,r_Ca,E,E,36,[[[r_ea]],[T]]],[11,r_Da,E,E,36,[[[r_ea]],[r_Ea]]],[11,r_za,r_5h,E,37,[[[U]],[r_ya]]],[11,r_Fa,E,E,37,[[[T]],[T]]],[11,r_of,E,E,37,[[[r_ea]],["i"]]],[11,r_Aa,E,E,37,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,37,[[[r_ea]],[U]]],[11,r_Ba,E,E,37,[[[r_ea]],[T]]],[11,r_Ca,E,E,37,[[[r_ea]],[T]]],[11,r_Da,E,E,37,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,38,[[[U]],[r_ya]]],[11,r_Fa,E,E,38,[[[T]],[T]]],[11,r_of,E,E,38,[[[r_ea]],["i"]]],[11,r_Aa,E,E,38,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,38,[[[r_ea]],[U]]],[11,r_Ba,E,E,38,[[[r_ea]],[T]]],[11,r_Ca,E,E,38,[[[r_ea]],[T]]],[11,r_Da,E,E,38,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,39,[[[U]],[r_ya]]],[11,r_Fa,E,E,39,[[[T]],[T]]],[11,r_of,E,E,39,[[[r_ea]],["i"]]],[11,r_Aa,E,E,39,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,39,[[[r_ea]],[U]]],[11,r_Ba,E,E,39,[[[r_ea]],[T]]],[11,r_Ca,E,E,39,[[[r_ea]],[T]]],[11,r_Da,E,E,39,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,40,[[[U]],[r_ya]]],[11,r_Fa,E,E,40,[[[T]],[T]]],[11,r_of,E,E,40,[[[r_ea]],["i"]]],[11,r_Aa,E,E,40,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,40,[[[r_ea]],[U]]],[11,r_Ba,E,E,40,[[[r_ea]],[T]]],[11,r_Ca,E,E,40,[[[r_ea]],[T]]],[11,r_Da,E,E,40,[[[r_ea]],[r_Ea]]],[11,r_za,r_1g,E,33,[[[U]],[r_ya]]],[11,r_Fa,E,E,33,[[[T]],[T]]],[11,r_Aa,E,E,33,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,33,[[[r_ea]],[U]]],[11,r_Ba,E,E,33,[[[r_ea]],[T]]],[11,r_Ca,E,E,33,[[[r_ea]],[T]]],[11,r_Da,E,E,33,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,34,[[[U]],[r_ya]]],[11,r_Fa,E,E,34,[[[T]],[T]]],[11,r_Aa,E,E,34,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,34,[[[r_ea]],[U]]],[11,r_Ba,E,E,34,[[[r_ea]],[T]]],[11,r_Ca,E,E,34,[[[r_ea]],[T]]],[11,r_Da,E,E,34,[[[r_ea]],[r_Ea]]],[11,r_za,r_6h,E,41,[[[U]],[r_ya]]],[11,r_Fa,E,E,41,[[[T]],[T]]],[11,r_Aa,E,E,41,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,41,[[[r_ea]],[U]]],[11,r_Ba,E,E,41,[[[r_ea]],[T]]],[11,r_Ca,E,E,41,[[[r_ea]],[T]]],[11,r_Da,E,E,41,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,42,[[[U]],[r_ya]]],[11,r_Fa,E,E,42,[[[T]],[T]]],[11,r_Aa,E,E,42,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,42,[[[r_ea]],[U]]],[11,r_Ba,E,E,42,[[[r_ea]],[T]]],[11,r_Ca,E,E,42,[[[r_ea]],[T]]],[11,r_Da,E,E,42,[[[r_ea]],[r_Ea]]],[11,r_hb,r_3h,E,0,N],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ja,E,E,35,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ee,E,E,0,N],[11,r_Ee,E,E,0,N],[11,r_Ee,E,E,0,N],[11,r_Ee,E,E,0,N],[11,r_Te,E,E,0,[[[r_ea]],[r_va,[r_da]]]],[11,r_Me,E,E,0,[[[r_ea]],[r_va,[r_sb]]]],[11,r_Ue,E,E,0,[[[r_ea]],[r_va,["u8"]]]],[11,r_Ve,E,E,0,[[[r_ea]],[r_va,[r_pc]]]],[11,r_We,E,E,0,[[[r_ea]],[r_va,[r_vb]]]],[11,r_Xe,E,E,0,[[[r_ea]],[r_va,[r_Ud]]]],[11,r_Ne,E,E,0,[[[r_ea]],[r_va,["i8"]]]],[11,r_Oe,E,E,0,[[[r_ea]],[r_va,[r_Mf]]]],[11,r_Pe,E,E,0,[[[r_ea]],[r_va,[r_Lf]]]],[11,r_Qe,E,E,0,[[[r_ea]],[r_va,[r_Cf]]]],[11,r_Ye,E,E,0,[[[r_ea]],[r_va,[r_Ze]]]],[11,r_Re,E,E,0,[[[r_ea]],[r_va,[r_Se]]]],[11,r_0e,E,E,0,[[[r_ea]],[r_va,[r_Df]]]],[11,r_1e,E,E,0,[[[r_ea]],[r_va,[r_Ef]]]],[11,r_Kf,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Kf,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Kf,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Kf,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Vd,E,E,0,[[],[r_Be]]],[11,r_kf,E,E,0,[[[r_ea]],[r_ja]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ja,E,E,35,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Le,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Le,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Le,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Le,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_1c,E,E,0,N],[11,r_1c,E,E,0,N],[11,r_1c,E,E,0,N],[11,r_1c,E,E,0,N],[11,r_ib,E,E,0,[[[r_ea]],[r_Be]]],[11,r_De,E,E,0,N],[11,r_De,E,E,0,N],[11,r_De,E,E,0,N],[11,r_De,E,E,0,N],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_mi,E,E,0,[[[r_ea]],[r_Be]]],[11,r_mf,E,r_He,0,[[[r_4a],[r_vb]],[r_ya,[r_Be]]]],[11,r_0c,E,E,0,N],[11,r_0c,E,E,0,N],[11,r_0c,E,E,0,N],[11,r_0c,E,E,0,N],[11,r_Fa,E,E,0,[[[T]],[r_Be]]],[11,r_Fa,E,E,0,[[[T]],[r_Be]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_gb,E,r_He,0,[[[r_4a]],[r_ya,[r_Be]]]],[11,r_8e,E,E,0,[[[r_da]],[r_va,[r_Be]]]],[11,r_2e,E,E,0,[[[r_sb]],[r_va,[r_Be]]]],[11,r_9e,E,E,0,[[["u8"]],[r_va,[r_Be]]]],[11,r_af,E,E,0,[[[r_pc]],[r_va,[r_Be]]]],[11,r_bf,E,E,0,[[[r_vb]],[r_va,[r_Be]]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va,[r_Be]]]],[11,r_3e,E,E,0,[[["i8"]],[r_va,[r_Be]]]],[11,r_4e,E,E,0,[[[r_Mf]],[r_va,[r_Be]]]],[11,r_5e,E,E,0,[[[r_Lf]],[r_va,[r_Be]]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va,[r_Be]]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va,[r_Be]]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va,[r_Be]]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va,[r_Be]]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va,[r_Be]]]],[11,r_Fa,E,E,0,[[[U]],[r_va,[r_Be]]]],[11,r_Jf,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Jf,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Jf,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Jf,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Fe,E,E,0,N],[11,r_Fe,E,E,0,N],[11,r_Fe,E,E,0,N],[11,r_Fe,E,E,0,N],[11,"eq",E,E,35,[[[r_ea],[r_Ce]],[r_ja]]],[11,"ne",E,E,35,[[[r_ea],[r_Ce]],[r_ja]]],[11,"eq",E,E,0,[[[r_ea],[r_Be]],[r_ja]]],[11,"ne",E,E,0,[[[r_ea],[r_Be]],[r_ja]]],[11,r_Ke,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Ke,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_Ke,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Ke,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,"neg",E,E,0,[[[r_ea]],[r_Be]]],[11,r_9h,E,E,0,[[],[r_Be]]],[11,r_lf,E,E,0,[[[r_ea]],[r_ja]]],[11,r_si,E,E,0,[[["i"]],[r_Be]]],[11,r_si,E,E,0,[[["i"]],[r_Be]]],[11,r_Na,E,E,0,[[],[r_Be]]],[11,"as_",E,E,0,[[[r_ea]],[U]]],[11,r_Ge,E,E,0,[[["i"]],[r_Be]]],[11,r_Ge,E,E,0,[[["i"]],[r_Be]]],[11,r_If,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_If,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_If,E,E,0,[[[r_ea],[T]],[r_Be]]],[11,r_If,E,E,0,[[[r_ea],[r_Be]],[r_Be]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ja,r_1g,E,34,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ja,E,E,33,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ja,E,E,34,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_qf,r_4h,E,36,[[[r_ea]],[r_va]]],[11,r_qf,r_5h,E,39,[[[r_ea]],[r_va]]],[11,r_qf,E,E,37,[[[r_ea]],[r_va]]],[11,r_pf,E,E,37,N],[11,r_qf,E,E,38,[[[r_ea]],[r_va]]],[11,r_pf,E,E,38,N],[11,r_qf,E,E,40,[[[r_ea]],[r_va]]],[11,r_ib,E,E,39,[[[r_ea]],[r_tf]]],[11,r_ib,E,E,40,[[[r_ea]],[r_uf]]],[11,r_ib,E,E,38,[[[r_ea]],[r_sf]]],[11,r_ib,E,E,37,[[[r_ea]],[r_fa]]],[11,r_rf,E,E,37,[[[r_ea]],[r_va]]],[11,r_rf,E,E,38,[[[r_ea]],[r_va]]],[11,r_Ja,r_6h,E,42,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ja,E,E,41,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ee,E,E,41,N],[11,r_Ee,E,E,41,N],[11,r_Ee,E,E,41,N],[11,r_Ee,E,E,41,N],[11,r_Kf,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Kf,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_Kf,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Kf,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_Vf,E,E,41,[[[r_ea],[r_Af]],[r_va,[r_Af]]]],[11,r_Vd,E,E,41,[[],[r_Af]]],[11,r_kf,E,E,41,[[[r_ea]],[r_ja]]],[11,r_Td,E,E,41,[[[r_ea],[r_Af]],[r_eb]]],[11,r_Tf,E,E,41,[[[r_ea],[r_Af]],[r_va,[r_Af]]]],[11,r_Ja,E,r_cl,41,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Ja,E,E,42,[[[r_ea],[r_Ia]],[r_ya,[r_7h]]]],[11,r_Le,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Le,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Le,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_Le,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_1c,E,E,41,N],[11,r_1c,E,E,41,N],[11,r_1c,E,E,41,N],[11,r_1c,E,E,41,N],[11,r_ib,E,E,42,[[[r_ea]],[r_Bf]]],[11,r_ib,E,E,41,[[[r_ea]],[r_Af]]],[11,r_De,E,E,41,N],[11,r_De,E,E,41,N],[11,r_De,E,E,41,N],[11,r_De,E,E,41,N],[11,r_Ga,E,E,41,N],[11,r_Ff,E,E,41,[[[r_ea],["u8"]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_da]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_Mf]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_da]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_sb]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_pc]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_vb]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_Cf]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_sb]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_Ud]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_vb]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],["i8"]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_Cf]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_Ud]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_Lf]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],["u8"]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_Mf]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],["i8"]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_pc]],[r_Af]]],[11,r_Ff,E,E,41,[[[r_ea],[r_Lf]],[r_Af]]],[11,r_mi,E,E,41,[[[r_ea]],[r_Af]]],[11,r_mf,E,r_el,41,[[[r_4a],[r_vb]],[r_ya,[r_Af,r_Bf]]]],[11,r_fb,E,E,41,[[[r_ea],[r_Af]],[r_va,[r_eb]]]],[11,r_0c,E,E,41,N],[11,r_0c,E,E,41,N],[11,r_0c,E,E,41,N],[11,r_0c,E,E,41,N],[11,r_Fa,E,E,41,[[[T]],[r_Af]]],[11,r_Fa,E,E,41,N],[11,r_gb,E,r_dl,41,[[[r_4a]],[r_ya,[r_Af,r_Bf]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_6e,E,E,41,[[[r_Cf]],[r_va,[r_Af]]]],[11,r_7e,E,E,41,[[[r_Se]],[r_va,[r_Af]]]],[11,r_cf,E,E,41,[[[r_Ud]],[r_va,[r_Af]]]],[11,r_df,E,E,41,[[[r_Ze]],[r_va,[r_Af]]]],[11,r_ef,E,E,41,[[[r_Df]],[r_va,[r_Af]]]],[11,r_ff,E,E,41,[[[r_Ef]],[r_va,[r_Af]]]],[11,r_Sf,E,E,41,[[[r_ea],[r_Af]],[r_va,[r_Af]]]],[11,r_8h,E,E,41,[[[r_ea]],[r_Af]]],[11,r_Gb,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Eb,E,E,41,[[[r_ea]],[r_Af]]],[11,r_Wf,E,E,41,[[[r_ea]],[r_ja]]],[11,r_Xf,E,E,41,[[[r_ea]],[r_ja]]],[11,r_Jf,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Jf,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_Jf,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_Jf,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Fe,E,E,41,N],[11,r_Fe,E,E,41,N],[11,r_Fe,E,E,41,N],[11,r_Fe,E,E,41,N],[11,"eq",E,E,42,[[[r_ea],[r_Bf]],[r_ja]]],[11,"ne",E,E,42,[[[r_ea],[r_Bf]],[r_ja]]],[11,"eq",E,E,41,[[[r_ea],[r_Af]],[r_ja]]],[11,r_Ke,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_Ke,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Ke,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_Ke,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,"neg",E,E,41,[[[r_ea]],[r_Af]]],[11,r_9h,E,E,41,[[],[r_Af]]],[11,r_lf,E,E,41,[[[r_ea]],[r_ja]]],[11,r_si,E,E,41,[[["i"]],[r_Af]]],[11,r_si,E,E,41,[[["i"]],[r_Af]]],[11,r_Uf,E,E,41,[[[r_ea],[r_Af]],[r_va,[r_Af]]]],[11,r_Ge,E,E,41,[[["i"]],[r_Af]]],[11,r_Ge,E,E,41,[[["i"]],[r_Af]]],[11,r_If,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_If,E,E,41,[[[r_ea],[r_Af]],[r_Af]]],[11,r_If,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_If,E,E,41,[[[r_ea],[T]],[r_Af]]],[11,r_hb,E,E,41,N],[11,r_fc,r_3h,r_di,0,[[[T],[T]],[r_Be]]],[11,"i",E,r_ei,0,[[],[r_Be]]],[11,r_fi,E,r_gi,0,[[[r_ea]],[T]]],[11,r_hi,E,r_ii,0,[[[r_ea],[T]],[r_Be]]],[11,r_ji,E,r_ki,0,[[[r_ea],[T]],[r_Be]]],[11,"conj",E,r_li,0,[[[r_ea]],[r_Be]]],[11,r_mi,E,r_ni,0,[[[r_ea]],[r_Be]]],[11,r_gf,E,r_oi,0,[[[r_ea]],[r_ja]]],[11,r_hf,E,r_pi,0,[[[r_ea]],[r_ja]]],[11,r_if,E,r_qi,0,[[[r_ea]],[r_ja]]],[11,r_jf,E,r_ri,0,[[[r_ea]],[r_ja]]],[11,r_fc,r_4h,r_Fi,36,[[[T]],[r_Gi]]],[11,r_fc,r_6h,r_Pk,41,[[[T],[T]],[r_Af]]],[11,r_Qk,E,r_Rk,41,[[[T]],[r_Af]]],[11,r_Sk,E,r_Tk,41,[[[T],[T]],[r_Af]]],[11,r_Uk,E,r_Vk,41,[[[r_ea]],[T]]],[11,r_Wk,E,r_Xk,41,[[[r_ea]],[T]]],[11,r_Yk,E,r_Zk,41,[[[r_ea]],[T]]],[11,r_0k,E,r_1k,41,[[[r_ea]],[r_ja]]],[11,r_2k,E,r_3k,41,[[[r_ea]],[r_Af]]],[11,r_Rf,E,r_4k,41,[[[r_ea]],[r_Af]]],[11,r_Nf,E,r_5k,41,[[[r_ea]],[r_Af]]],[11,r_bj,E,r_6k,41,[[[r_ea]],[r_Af]]],[11,r_Of,E,r_7k,41,[[[r_ea]],[r_Af]]],[11,r_Pf,E,r_8k,41,[[[r_ea]],[r_Af]]],[11,r_Qf,E,r_9k,41,[[[r_ea]],[r_Af]]],[11,r_Ff,E,r_al,41,[[[r_ea],[r_Lf]],[r_Af]]],[11,r_bl,E,E,41,[[["f"]],[r_va,[r_Af]]]]],"p":[[3,r_Ie],[8,r_ye],[8,"Num"],[8,r_ai],[8,"One"],[8,r_9b],[8,r_Lb],[8,r_3b],[8,r_Tb],[8,r_Ub],[8,r_Vb],[8,r_Wb],[8,r_Sb],[8,r_Mb],[8,r_Nb],[8,r_Ob],[8,r_Pb],[8,"Pow"],[8,r_xe],[8,r_Qb],[8,r_Rb],[8,r_Xb],[8,r_Yb],[8,r_Zb],[8,r_0b],[8,"Inv"],[8,r_1b],[8,r_2b],[8,r_4b],[8,r_5b],[8,r_6b],[8,r_7b],[8,r_8b],[4,r_Kb],[3,r_Jb],[3,r_Je],[3,r_ze],[3,r_vf],[3,r_wf],[3,r_xf],[3,r_yf],[3,r_Gf],[3,r_Hf]]};
searchIndex[r_aa]={r_ac:"A macro for defining `#[cfg]` if-else statements.","i":[[14,r_aa,r_aa,E,N,N]],"p":[]};
searchIndex[r_ba]={r_ac:"A typesafe bitmask flag generator useful for sets of…","i":[[14,r_ba,r_ba,"The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex[r_bc]={r_ac:E,"i":[[0,"boot",r_bc,"TODO",N,N],[3,r_dd,r_Hc,E,N,N],[12,"area",E,E,0,N],[12,"memory_type",E,E,0,N],[3,r_ed,E,E,N,N],[12,"entry_point",E,E,1,N],[12,"page_table_address",E,"The physical address of the P4 frame of the process'…",1,N],[3,r_dc,E,"This structure is placed in memory by the bootloader and a…",N,N],[12,"magic",E,"This should be set to `BOOT_INFO_MAGIC` by the bootloader.",2,N],[12,"memory_map",E,E,2,N],[12,"num_memory_map_entries",E,E,2,N],[12,"rsdp_address",E,E,2,N],[12,"payload",E,E,2,N],[4,r_fd,E,E,N,N],[13,"UefiServices",E,"Memory used by the UEFI services. Cannot be used by the OS.",3,N],[13,"Conventional",E,"Conventional memory that can freely be used by the OS,",3,N],[13,"AcpiReclaimable",E,"Memory that contains ACPI tables. After the OS has parsed…",3,N],[13,"SleepPreserve",E,r_cc,3,N],[13,"NonVolatileSleepPreserve",E,r_cc,3,N],[13,"KernelImage",E,"Memory the bootloader has mapped the kernel image into.…",3,N],[13,"PayloadImage",E,"Memory the bootloader has mapped the payload image into.…",3,N],[13,"KernelPageTables",E,"Memory the bootloader has used for the page tables…",3,N],[13,"KernelHeap",E,"Memory the bootloader has mapped for use as the kernel…",3,N],[13,r_dc,E,"Memory used for storing the `BootInfo` by the bootloader.…",3,N],[17,"BOOT_INFO_MAGIC",E,E,N,N],[17,"MEMORY_MAP_NUM_ENTRIES",E,E,N,N],[11,"memory_entries",E,E,2,N],[0,"hw",r_bc,E,N,N],[3,r_gd,r_ic,E,N,N],[12,"limit",E,"`base + limit` is the last addressable byte of the…",4,N],[12,"base",E,"Virtual address of the start of the descriptor table.",4,N],[0,"gdt",E,E,N,N],[3,r_hd,r_Ic,"An index into the GDT, specifying a particular segment.…",N,N],[12,"0",E,E,5,N],[3,r_jd,E,E,N,N],[3,r_kd,E,E,N,N],[3,r_ld,E,E,N,N],[3,"Gdt",E,"A GDT suitable for the kernel to use. The order of the…",N,N],[4,r_id,E,E,N,N],[13,"Ring0",E,E,6,N],[13,"Ring1",E,E,6,N],[13,"Ring2",E,E,6,N],[13,"Ring3",E,E,6,N],[17,"KERNEL_CODE_SELECTOR",E,E,N,N],[17,"KERNEL_DATA_SELECTOR",E,E,N,N],[17,"USER_COMPAT_CODE_SELECTOR",E,E,N,N],[17,"USER_DATA_SELECTOR",E,E,N,N],[17,"USER_CODE64_SELECTOR",E,E,N,N],[17,"BOOTSTRAP_TSS_SELECTOR",E,E,N,N],[17,"NUM_STATIC_ENTRIES",E,E,N,N],[17,"MAX_CPUS",E,E,N,N],[11,r_fc,E,E,5,[[[r_pc],[r_ec]],[r_hc]]],[11,"table_offset",E,E,5,[[[r_ea]],[r_pc]]],[11,r_fc,E,E,7,[[[r_ec]],["codesegment"]]],[11,r_fc,E,E,8,[[[r_ec]],["datasegment"]]],[11,r_jc,E,E,9,[[],[r_gc]]],[11,r_fc,E,E,9,[[["pin"]],[r_gc]]],[11,r_fc,E,"Create a `Gdt` with pre-populated code and data segments,…",10,[[],["gdt"]]],[11,"add_tss",E,"Add a new TSS, if there's space for it. The first TSS…",10,[[[r_ea],[r_gc]],[r_hc]]],[11,"load",E,"Load the new GDT, switch to the new `kernel_code` code…",10,[[[r_ea]]]],[0,"tss",r_ic,E,N,N],[3,"Tss",r_Lc,"Hardware task switching isn't supported on x86_64, so the…",N,N],[12,"privilege_stack_table",E,E,11,N],[12,"interrupt_stack_table",E,E,11,N],[12,"iomap_base",E,E,11,N],[11,r_fc,E,E,11,[[],["pin",["box"]]]],[11,"set_kernel_stack",E,E,11,[[[r_ea],[r_qc]]]],[0,"idt",r_ic,E,N,N],[3,r_nd,r_Mc,E,N,N],[3,"Idt",E,E,N,N],[3,r_md,E,E,N,N],[12,r_9l,E,E,12,N],[12,"code_segment",E,E,12,N],[12,"cpu_flags",E,E,12,N],[12,r_am,E,E,12,N],[12,"stack_segment",E,E,12,N],[6,"HandlerFunc",E,"The type of a function that can be used as an interrupt…",N,N],[11,"missing",E,E,13,[[],[r_kc]]],[11,r_bm,E,E,13,[[[r_ea],["handlerfunc"],[r_hc]],[r_ea]]],[11,"set_ist_handler",E,E,13,[[[r_ea],["u8"]],[r_ea]]],[11,"set_privilege_level",E,E,13,[[[r_ea],[r_ec]],[r_ea]]],[11,r_jc,E,E,14,[[],["idt"]]],[11,"divide_error",E,E,14,[[[r_ea]],[r_kc]]],[11,"debug_exception",E,E,14,[[[r_ea]],[r_kc]]],[11,"nmi",E,E,14,[[[r_ea]],[r_kc]]],[11,"breakpoint",E,E,14,[[[r_ea]],[r_kc]]],[11,"overflow",E,E,14,[[[r_ea]],[r_kc]]],[11,"bound_range_exceeded",E,E,14,[[[r_ea]],[r_kc]]],[11,"invalid_opcode",E,E,14,[[[r_ea]],[r_kc]]],[11,"device_not_available",E,E,14,[[[r_ea]],[r_kc]]],[11,"double_fault",E,E,14,[[[r_ea]],[r_kc]]],[11,"invalid_tss",E,E,14,[[[r_ea]],[r_kc]]],[11,"segment_not_present",E,E,14,[[[r_ea]],[r_kc]]],[11,"stack_segment_fault",E,E,14,[[[r_ea]],[r_kc]]],[11,"general_protection_fault",E,E,14,[[[r_ea]],[r_kc]]],[11,"page_fault",E,E,14,[[[r_ea]],[r_kc]]],[11,"x87_fault",E,E,14,[[[r_ea]],[r_kc]]],[11,"alignment_check",E,E,14,[[[r_ea]],[r_kc]]],[11,"machine_check",E,E,14,[[[r_ea]],[r_kc]]],[11,"simd_exception",E,E,14,[[[r_ea]],[r_kc]]],[11,"virtualization_exception",E,E,14,[[[r_ea]],[r_kc]]],[11,"load",E,E,14,[[[r_ea]]]],[0,"i8259_pic",r_ic,E,N,N],[3,"Pic",r_Nc,E,N,N],[11,r_fc,E,E,15,[[],["pic"]]],[11,"remap_and_disable",E,"Remap and disable the PIC. It is necessary to remap the…",15,[[[r_ea],["u8"],["u8"]]]],[0,"local_apic",r_ic,E,N,N],[3,r_od,r_Oc,"Represents a register in the local APIC's configuration…",N,N],[3,r_pd,E,"Methods on this type operate on the local APIC of the…",N,N],[11,r_oc,E,"Read from this register. Unsafe because not all registers…",16,[[[r_ea]],[r_vb]]],[11,r_lc,E,"Write to this register. Unsafe because not all registers…",16,[[[r_ea],[r_vb]]]],[11,"enable",E,E,17,[[["u8"]]]],[11,"register",E,E,17,[[[r_da]],["localapicregister"]]],[11,"send_eoi",E,"Send an End Of Interrupt to the local APIC. This should be…",17,[[]]],[0,"cpu",r_ic,E,N,N],[3,r_qd,r_Pc,"Describes information we know about the system we're…",N,N],[12,"max_supported_standard_level",E,E,18,N],[12,r_Zc,E,E,18,N],[12,"model_info",E,E,18,N],[12,"hypervisor_info",E,"Information about the hypervisor we're running under, if…",18,N],[3,r_rd,E,E,N,N],[12,"family",E,E,19,N],[12,"model",E,E,19,N],[12,"stepping",E,E,19,N],[12,"extended_family",E,E,19,N],[12,"extended_model",E,E,19,N],[3,r_Ld,E,E,N,N],[4,r_sd,E,E,N,N],[13,r_mc,E,E,20,N],[13,"Intel",E,E,20,N],[13,"Amd",E,E,20,N],[4,r_td,E,"Intel and AMD microarchitectures we can expect processors…",N,N],[13,"Nehalem",E,E,21,N],[13,"Westmere",E,E,21,N],[13,"SandyBridge",E,E,21,N],[13,"IvyBridge",E,E,21,N],[13,"Haswell",E,E,21,N],[13,"Broadwell",E,E,21,N],[13,"Skylake",E,E,21,N],[13,"KabyLake",E,E,21,N],[13,"CoffeeLake",E,E,21,N],[13,"CannonLake",E,E,21,N],[13,"WhiskeyLake",E,E,21,N],[13,"AmberLake",E,E,21,N],[13,"Bulldozer",E,E,21,N],[13,"Jaguar",E,E,21,N],[13,"Zen",E,E,21,N],[4,r_ud,E,E,N,N],[13,r_mc,E,E,22,N],[13,"Kvm",E,E,22,N],[11,r_fc,E,E,18,[[],["cpuinfo"]]],[11,r_nc,E,E,18,[[[r_ea]],[r_va,[r_nc]]]],[11,"apic_frequency",E,"Get the frequency the APIC runs at (in Hz), if we can…",18,[[[r_ea]],[r_va,[r_vb]]]],[0,"port",r_ic,E,N,N],[3,"Port",r_Qc,"Represents an IO port that can be read and written to…",N,N],[8,r_vd,E,"Implemented by the types used to represent 8-bit, 16-bit,…",N,N],[10,"port_read",E,E,23,[[[r_pc]],[r_ea]]],[10,"port_write",E,E,23,[[[r_pc],[r_ea]]]],[11,r_fc,E,"Create a new `Port` at the specified I/O address. Unsafe…",24,[[[r_pc]],["port"]]],[11,r_oc,E,E,24,[[[r_ea]],[T]]],[11,r_lc,E,E,24,[[[r_ea],[T]]]],[0,"registers",r_ic,E,N,N],[3,r_wd,r_Rc,"A wrapper for the `RFLAGS` register, providing a nice…",N,N],[12,"0",E,E,25,N],[5,"read_msr",E,"Read from a model-specific register.",N,[[[r_vb]],[r_Ud]]],[5,"write_msr",E,"Write to a model-specific register. This is unsafe,…",N,[[[r_vb],[r_Ud]]]],[17,"EFER",E,E,N,N],[17,"IA32_STAR",E,"Contains the Ring 0 and Ring 3 code-segment selectors…",N,N],[17,"IA32_LSTAR",E,"Contains the virtual address of the handler to call upon…",N,N],[17,"IA32_FMASK",E,"Upon `syscall`, the value of this MSR is used to mask…",N,N],[11,r_oc,E,"Read the contents of `RFLAGS`, creating a `CpuFlags`.",25,[[],[r_cd]]],[11,"interrupts_enabled",E,E,25,[[[r_ea]],[r_ja]]],[0,"serial",r_ic,E,N,N],[3,r_xd,r_Sc,E,N,N],[17,"COM1",E,E,N,N],[11,r_fc,E,E,26,[[[r_pc]],["serialport"]]],[11,"initialise",E,E,26,[[[r_ea]]]],[11,r_oc,E,E,26,[[[r_ea]],["u8"]]],[11,r_lc,E,E,26,[[[r_ea],["u8"]]]],[0,"tlb",r_ic,E,N,N],[5,"invalidate_page","x86_64::hw::tlb",E,N,[[[r_qc]]]],[5,r_Sd,E,E,N,[[]]],[0,r_cm,r_bc,E,N,N],[3,r_Kd,r_rc,"Represents an address in the physical memory space. A…",N,N],[0,"kernel_map",E,"These constants define the layout of the memory map when…",N,N],[17,"RECURSIVE_ENTRY","x86_64::memory::kernel_map","We use the 510th entry of the PML4 (P4) to access the page…",N,N],[17,"KERNEL_P4_ENTRY",E,"The kernel is mapped into the 511th entry of the P4.",N,N],[17,"P4_TABLE_RECURSIVE_ADDRESS",E,"This address can be used to access the currently mapped P4…",N,N],[17,"KERNEL_BASE",E,"This is the base of the kernel address space. It starts at…",N,N],[17,r_dm,E,"This is the address of the start of the kernel heap. The…",N,N],[17,"HEAP_END",E,E,N,N],[17,"PHYSICAL_MAPPING_START",E,"This is the address of the start of the area in the kernel…",N,N],[17,"PHYSICAL_MAPPING_END",E,E,N,N],[17,"BOOT_INFO",E,E,N,N],[17,"KERNEL_P4_START",E,"This address can be used to access the kernel page table's…",N,N],[17,"LOCAL_APIC_CONFIG",E,"The virtual address that the configuration page of the…",N,N],[0,"paging",r_rc,E,N,N],[8,r_yd,r_uc,"Used for immutable dereferencing operations, like `*v`.",N,N],[16,"Target",E,"The resulting type after dereferencing.",27,N],[10,r_Ka,E,"Dereferences the value.",27,N],[8,r_zd,E,"Used for mutable dereferencing operations, like in `*v =…",N,N],[10,r_Ha,E,"Mutably dereferences the value.",28,N],[3,r_Ad,E,"Represents a set of page tables that are not currently…",N,N],[12,"p4_frame",E,E,29,N],[3,r_Jd,E,"Represents the set of page tables that are currently being…",N,N],[0,r_3c,E,E,N,N],[3,r_Cd,r_Tc,E,N,N],[3,r_Bd,E,E,N,N],[18,"PRESENT",E,E,30,N],[18,"WRITABLE",E,E,30,N],[18,"USER_ACCESSIBLE",E,E,30,N],[18,"WRITE_THROUGH",E,E,30,N],[18,"NO_CACHE",E,E,30,N],[18,"ACCESSED",E,E,30,N],[18,"DIRTY",E,E,30,N],[18,"HUGE_PAGE",E,E,30,N],[18,"GLOBAL",E,E,30,N],[18,"NO_EXECUTE",E,E,30,N],[11,r_jc,E,"Returns an empty set of flags.",30,[[],[r_sc]]],[11,"all",E,"Returns the set containing all flags.",30,[[],[r_sc]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",30,[[[r_ea]],[r_Ud]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",30,[[[r_Ud]],[r_va,[r_sc]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",30,[[[r_Ud]],[r_sc]]],[11,"is_empty",E,"Returns `true` if no flags are currently stored.",30,[[[r_ea]],[r_ja]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",30,[[[r_ea]],[r_ja]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",30,[[[r_ea],[r_sc]],[r_ja]]],[11,r_vc,E,"Returns `true` all of the flags in `other` are contained…",30,[[[r_ea],[r_sc]],[r_ja]]],[11,"insert",E,"Inserts the specified flags in-place.",30,[[[r_ea],[r_sc]]]],[11,"remove",E,"Removes the specified flags in-place.",30,[[[r_ea],[r_sc]]]],[11,"toggle",E,"Toggles the specified flags in-place.",30,[[[r_ea],[r_sc]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",30,[[[r_ea],[r_sc],[r_ja]]]],[11,"is_compatible",E,E,30,[[[r_ea],[r_sc]],[r_ja]]],[11,"is_unused",E,E,31,[[[r_ea]],[r_ja]]],[11,"set_unused",E,E,31,[[[r_ea]]]],[11,"flags",E,E,31,[[[r_ea]],[r_sc]]],[11,"pointed_frame",E,E,31,[[[r_ea]],[r_va,[r_tc]]]],[11,"set",E,E,31,[[[r_ea],[r_tc],[r_sc]]]],[0,r_tc,r_uc,E,N,N],[3,r_Dd,r_Uc,E,N,N],[11,r_vc,E,E,32,[[[r_wc]],[r_tc]]],[11,r_yc,E,E,32,[[[r_ea]],[r_wc]]],[0,r_em,r_uc,E,N,N],[8,r_Ed,"x86_64::memory::paging::frame_allocator","`FrameAllocator` represents the `x86_64` crate's interface…",N,N],[11,"allocate",E,"Allocate a `Frame`.",33,[[[r_ea]],[r_tc]]],[10,r_Hl,E,"Allocate `n` contiguous `Frame`s.",33,[[[r_ea],[r_da]],[r_fa,[r_tc]]]],[10,r_Il,E,"Free `n` frames that were previously allocated by this…",33,[[[r_ea],[r_tc],[r_da]]]],[0,r_Cc,r_uc,E,N,N],[3,r_Fd,r_Vc,"A `Mapper` allows you to change the virtual to physical…",N,N],[12,"p4",E,E,34,N],[11,"translate",E,"Get the `PhysicalAddress` a given `VirtualAddress` is…",34,[[[r_ea],[r_qc]],[r_va,[r_wc]]]],[11,"translate_page",E,"Get the physical `Frame` that a given virtual `Page` is…",34,[[[r_ea],[r_xc]],[r_va,[r_tc]]]],[11,"map",E,"Map the given `Page` somewhere in physical memory.…",34,[[[r_ea],[r_xc],[r_sc],["a"]]]],[11,"map_range",E,"Given a range of `n` pages to map, allocates `n` frames…",34,[[[r_ea],[r_fa,[r_xc]],[r_sc],["a"]]]],[11,"map_to",E,E,34,[[[r_ea],[r_xc],[r_tc],[r_sc],["a"]]]],[11,"unmap",E,E,34,[[[r_ea],[r_xc],["a"]]]],[0,r_xc,r_uc,E,N,N],[3,"Page",r_Wc,E,N,N],[11,r_vc,E,"Get the page that contains the given virtual address.",35,[[[r_qc]],[r_xc]]],[11,r_yc,E,E,35,[[[r_ea]],[r_qc]]],[11,"p4_index",E,E,35,[[[r_ea]],[r_pc]]],[11,"p3_index",E,E,35,[[[r_ea]],[r_pc]]],[11,"p2_index",E,E,35,[[[r_ea]],[r_pc]]],[11,"p1_index",E,E,35,[[[r_ea]],[r_pc]]],[0,r_Ac,r_uc,"This module contains types for representing raw page…",N,N],[3,r_Id,r_Xc,"Represents a page table, with 512 entries which are either…",N,N],[4,r_Md,E,E,N,N],[4,r_Nd,E,E,N,N],[4,r_Od,E,E,N,N],[4,r_Pd,E,E,N,N],[4,r_Qd,E,r_zc,N,N],[4,r_Rd,E,r_zc,N,N],[8,"TableLevel",E,E,N,N],[8,r_Gd,E,"Tables of levels that implement `HierarchicalLevel` are…",N,N],[16,"NextLevel",E,E,36,N],[8,r_Hd,E,"This trait specifies how we should access and modify a set…",N,N],[10,r_Yc,E,E,37,[[[r_Ac],[r_pc]],[r_va,[r_qc]]]],[11,r_Vd,E,E,38,[[[r_ea]]]],[11,"next_table",E,E,38,[[[r_ea],[r_pc]],[r_va,[r_Ac]]]],[11,"next_table_mut",E,E,38,[[[r_ea],[r_pc]],[r_va,[r_Ac]]]],[11,"next_table_create",E,E,38,[[[r_ea],[r_pc],[r_ja],["a"]],[r_Ac]]],[17,"FRAME_SIZE",r_uc,E,N,N],[17,"PAGE_SIZE",E,E,N,N],[11,r_fc,E,"Create a new set of page-tables. `frame` must be an…",29,[[[r_tc]],[r_Bc]]],[11,"new_with_recursive_mapping",E,"Create a new set of page-tables that should be accessed…",29,[[[r_tc],[r_pc]],[r_Bc,[r_Dc]]]],[11,r_Cc,E,E,29,[[[r_ea]],[r_Cc,[r_Dc]]]],[11,r_Ec,E,r_Fc,29,N],[11,r_Ec,E,r_Fc,29,N],[11,r_fc,E,"Create an `ActivePageTable` to represent an active set of…",39,[[[r_wc]],[r_Gc,[r_Dc]]]],[11,r_fc,E,"Create an `ActivePageTable` to represent the…",39,[[],[r_Gc,[r_fm]]]],[11,"with",E,"Alter the mappings of a `InactivePageTable` by temporarily…",39,[[[r_ea],[r_Bc],["a"],["f"]]]],[11,r_fc,r_rc,E,40,[[[r_da]],[r_va,[r_wc]]]],[11,"new_unchecked",E,E,40,[[[r_da]],[r_wc]]],[11,"offset_into_frame",E,E,40,[[[r_ea]],[r_da]]],[11,"is_frame_aligned",E,E,40,[[[r_ea]],[r_ja]]],[14,"getter",r_bc,E,N,N],[14,"read_control_reg",E,"Read a control register. The name of the control register…",N,N],[14,"write_control_reg",E,"Write to a control register. Calls to this macro will need…",N,N],[11,r_za,r_Hc,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,1,[[[U]],[r_ya]]],[11,r_Fa,E,E,1,[[[T]],[T]]],[11,r_Aa,E,E,1,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,1,[[[r_ea]],[U]]],[11,r_Ba,E,E,1,[[[r_ea]],[T]]],[11,r_Ca,E,E,1,[[[r_ea]],[T]]],[11,r_Da,E,E,1,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,2,[[[U]],[r_ya]]],[11,r_Fa,E,E,2,[[[T]],[T]]],[11,r_Aa,E,E,2,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,2,[[[r_ea]],[U]]],[11,r_Ba,E,E,2,[[[r_ea]],[T]]],[11,r_Ca,E,E,2,[[[r_ea]],[T]]],[11,r_Da,E,E,2,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,3,[[[U]],[r_ya]]],[11,r_Fa,E,E,3,[[[T]],[T]]],[11,r_Aa,E,E,3,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,3,[[[r_ea]],[U]]],[11,r_Ba,E,E,3,[[[r_ea]],[T]]],[11,r_Ca,E,E,3,[[[r_ea]],[T]]],[11,r_Da,E,E,3,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,3,[[[r_ea]],[T]]],[11,r_Kc,E,E,3,N],[11,r_za,r_ic,E,4,[[[U]],[r_ya]]],[11,r_Fa,E,E,4,[[[T]],[T]]],[11,r_Aa,E,E,4,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,4,[[[r_ea]],[U]]],[11,r_Ba,E,E,4,[[[r_ea]],[T]]],[11,r_Ca,E,E,4,[[[r_ea]],[T]]],[11,r_Da,E,E,4,[[[r_ea]],[r_Ea]]],[11,r_za,r_Ic,E,5,[[[U]],[r_ya]]],[11,r_Fa,E,E,5,[[[T]],[T]]],[11,r_Aa,E,E,5,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,5,[[[r_ea]],[U]]],[11,r_Ba,E,E,5,[[[r_ea]],[T]]],[11,r_Ca,E,E,5,[[[r_ea]],[T]]],[11,r_Da,E,E,5,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,5,[[[r_ea]],[T]]],[11,r_Kc,E,E,5,N],[11,r_za,E,E,7,[[[U]],[r_ya]]],[11,r_Fa,E,E,7,[[[T]],[T]]],[11,r_Aa,E,E,7,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,7,[[[r_ea]],[U]]],[11,r_Ba,E,E,7,[[[r_ea]],[T]]],[11,r_Ca,E,E,7,[[[r_ea]],[T]]],[11,r_Da,E,E,7,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,8,[[[U]],[r_ya]]],[11,r_Fa,E,E,8,[[[T]],[T]]],[11,r_Aa,E,E,8,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,8,[[[r_ea]],[U]]],[11,r_Ba,E,E,8,[[[r_ea]],[T]]],[11,r_Ca,E,E,8,[[[r_ea]],[T]]],[11,r_Da,E,E,8,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,9,[[[U]],[r_ya]]],[11,r_Fa,E,E,9,[[[T]],[T]]],[11,r_Aa,E,E,9,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,9,[[[r_ea]],[U]]],[11,r_Ba,E,E,9,[[[r_ea]],[T]]],[11,r_Ca,E,E,9,[[[r_ea]],[T]]],[11,r_Da,E,E,9,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,9,[[[r_ea]],[T]]],[11,r_Kc,E,E,9,N],[11,r_za,E,E,10,[[[U]],[r_ya]]],[11,r_Fa,E,E,10,[[[T]],[T]]],[11,r_Aa,E,E,10,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,10,[[[r_ea]],[U]]],[11,r_Ba,E,E,10,[[[r_ea]],[T]]],[11,r_Ca,E,E,10,[[[r_ea]],[T]]],[11,r_Da,E,E,10,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,6,[[[U]],[r_ya]]],[11,r_Fa,E,E,6,[[[T]],[T]]],[11,r_Aa,E,E,6,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,6,[[[r_ea]],[U]]],[11,r_Ba,E,E,6,[[[r_ea]],[T]]],[11,r_Ca,E,E,6,[[[r_ea]],[T]]],[11,r_Da,E,E,6,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,6,[[[r_ea]],[T]]],[11,r_Kc,E,E,6,N],[11,r_za,r_Lc,E,11,[[[U]],[r_ya]]],[11,r_Fa,E,E,11,[[[T]],[T]]],[11,r_Aa,E,E,11,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,11,[[[r_ea]],[U]]],[11,r_Ba,E,E,11,[[[r_ea]],[T]]],[11,r_Ca,E,E,11,[[[r_ea]],[T]]],[11,r_Da,E,E,11,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,11,[[[r_ea]],[T]]],[11,r_Kc,E,E,11,N],[11,r_za,r_Mc,E,13,[[[U]],[r_ya]]],[11,r_Fa,E,E,13,[[[T]],[T]]],[11,r_Aa,E,E,13,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,13,[[[r_ea]],[U]]],[11,r_Ba,E,E,13,[[[r_ea]],[T]]],[11,r_Ca,E,E,13,[[[r_ea]],[T]]],[11,r_Da,E,E,13,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,13,[[[r_ea]],[T]]],[11,r_Kc,E,E,13,N],[11,r_za,E,E,14,[[[U]],[r_ya]]],[11,r_Fa,E,E,14,[[[T]],[T]]],[11,r_Aa,E,E,14,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,14,[[[r_ea]],[U]]],[11,r_Ba,E,E,14,[[[r_ea]],[T]]],[11,r_Ca,E,E,14,[[[r_ea]],[T]]],[11,r_Da,E,E,14,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,12,[[[U]],[r_ya]]],[11,r_Fa,E,E,12,[[[T]],[T]]],[11,r_Aa,E,E,12,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,12,[[[r_ea]],[U]]],[11,r_Ba,E,E,12,[[[r_ea]],[T]]],[11,r_Ca,E,E,12,[[[r_ea]],[T]]],[11,r_Da,E,E,12,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,12,[[[r_ea]],[T]]],[11,r_Kc,E,E,12,N],[11,r_za,r_Nc,E,15,[[[U]],[r_ya]]],[11,r_Fa,E,E,15,[[[T]],[T]]],[11,r_Aa,E,E,15,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,15,[[[r_ea]],[U]]],[11,r_Ba,E,E,15,[[[r_ea]],[T]]],[11,r_Ca,E,E,15,[[[r_ea]],[T]]],[11,r_Da,E,E,15,[[[r_ea]],[r_Ea]]],[11,r_za,r_Oc,E,16,[[[U]],[r_ya]]],[11,r_Fa,E,E,16,[[[T]],[T]]],[11,r_Aa,E,E,16,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,16,[[[r_ea]],[U]]],[11,r_Ba,E,E,16,[[[r_ea]],[T]]],[11,r_Ca,E,E,16,[[[r_ea]],[T]]],[11,r_Da,E,E,16,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,17,[[[U]],[r_ya]]],[11,r_Fa,E,E,17,[[[T]],[T]]],[11,r_Aa,E,E,17,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,17,[[[r_ea]],[U]]],[11,r_Ba,E,E,17,[[[r_ea]],[T]]],[11,r_Ca,E,E,17,[[[r_ea]],[T]]],[11,r_Da,E,E,17,[[[r_ea]],[r_Ea]]],[11,r_za,r_Pc,E,18,[[[U]],[r_ya]]],[11,r_Fa,E,E,18,[[[T]],[T]]],[11,r_Aa,E,E,18,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,18,[[[r_ea]],[U]]],[11,r_Ba,E,E,18,[[[r_ea]],[T]]],[11,r_Ca,E,E,18,[[[r_ea]],[T]]],[11,r_Da,E,E,18,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,19,[[[U]],[r_ya]]],[11,r_Fa,E,E,19,[[[T]],[T]]],[11,r_Aa,E,E,19,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,19,[[[r_ea]],[U]]],[11,r_Ba,E,E,19,[[[r_ea]],[T]]],[11,r_Ca,E,E,19,[[[r_ea]],[T]]],[11,r_Da,E,E,19,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,41,[[[U]],[r_ya]]],[11,r_Fa,E,E,41,[[[T]],[T]]],[11,r_Aa,E,E,41,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,41,[[[r_ea]],[U]]],[11,r_Ba,E,E,41,[[[r_ea]],[T]]],[11,r_Ca,E,E,41,[[[r_ea]],[T]]],[11,r_Da,E,E,41,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,20,[[[U]],[r_ya]]],[11,r_Fa,E,E,20,[[[T]],[T]]],[11,r_Aa,E,E,20,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,20,[[[r_ea]],[U]]],[11,r_Ba,E,E,20,[[[r_ea]],[T]]],[11,r_Ca,E,E,20,[[[r_ea]],[T]]],[11,r_Da,E,E,20,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,21,[[[U]],[r_ya]]],[11,r_Fa,E,E,21,[[[T]],[T]]],[11,r_Aa,E,E,21,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,21,[[[r_ea]],[U]]],[11,r_Ba,E,E,21,[[[r_ea]],[T]]],[11,r_Ca,E,E,21,[[[r_ea]],[T]]],[11,r_Da,E,E,21,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,22,[[[U]],[r_ya]]],[11,r_Fa,E,E,22,[[[T]],[T]]],[11,r_Aa,E,E,22,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,22,[[[r_ea]],[U]]],[11,r_Ba,E,E,22,[[[r_ea]],[T]]],[11,r_Ca,E,E,22,[[[r_ea]],[T]]],[11,r_Da,E,E,22,[[[r_ea]],[r_Ea]]],[11,r_za,r_Qc,E,24,[[[U]],[r_ya]]],[11,r_Fa,E,E,24,[[[T]],[T]]],[11,r_Aa,E,E,24,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,24,[[[r_ea]],[U]]],[11,r_Ba,E,E,24,[[[r_ea]],[T]]],[11,r_Ca,E,E,24,[[[r_ea]],[T]]],[11,r_Da,E,E,24,[[[r_ea]],[r_Ea]]],[11,r_za,r_Rc,E,25,[[[U]],[r_ya]]],[11,r_Fa,E,E,25,[[[T]],[T]]],[11,r_Aa,E,E,25,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,25,[[[r_ea]],[U]]],[11,r_Ba,E,E,25,[[[r_ea]],[T]]],[11,r_Ca,E,E,25,[[[r_ea]],[T]]],[11,r_Da,E,E,25,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,25,[[[r_ea]],[T]]],[11,r_Kc,E,E,25,N],[11,r_za,r_Sc,E,26,[[[U]],[r_ya]]],[11,r_Fa,E,E,26,[[[T]],[T]]],[11,r_Aa,E,E,26,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,26,[[[r_ea]],[U]]],[11,r_Ba,E,E,26,[[[r_ea]],[T]]],[11,r_Ca,E,E,26,[[[r_ea]],[T]]],[11,r_Da,E,E,26,[[[r_ea]],[r_Ea]]],[11,r_za,r_rc,E,40,[[[U]],[r_ya]]],[11,r_Fa,E,E,40,[[[T]],[T]]],[11,r_Aa,E,E,40,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,40,[[[r_ea]],[U]]],[11,r_Ba,E,E,40,[[[r_ea]],[T]]],[11,r_Ca,E,E,40,[[[r_ea]],[T]]],[11,r_Da,E,E,40,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,40,[[[r_ea]],[T]]],[11,r_Kc,E,E,40,N],[11,r_za,r_uc,E,29,[[[U]],[r_ya]]],[11,r_Fa,E,E,29,[[[T]],[T]]],[11,r_Aa,E,E,29,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,29,[[[r_ea]],[U]]],[11,r_Ba,E,E,29,[[[r_ea]],[T]]],[11,r_Ca,E,E,29,[[[r_ea]],[T]]],[11,r_Da,E,E,29,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,39,[[[U]],[r_ya]]],[11,r_Fa,E,E,39,[[[T]],[T]]],[11,r_Aa,E,E,39,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,39,[[[r_ea]],[U]]],[11,r_Ba,E,E,39,[[[r_ea]],[T]]],[11,r_Ca,E,E,39,[[[r_ea]],[T]]],[11,r_Da,E,E,39,[[[r_ea]],[r_Ea]]],[11,r_za,r_Tc,E,31,[[[U]],[r_ya]]],[11,r_Fa,E,E,31,[[[T]],[T]]],[11,r_Aa,E,E,31,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,31,[[[r_ea]],[U]]],[11,r_Ba,E,E,31,[[[r_ea]],[T]]],[11,r_Ca,E,E,31,[[[r_ea]],[T]]],[11,r_Da,E,E,31,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,30,[[[U]],[r_ya]]],[11,r_Fa,E,E,30,[[[T]],[T]]],[11,r_Aa,E,E,30,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,30,[[[r_ea]],[U]]],[11,r_Ba,E,E,30,[[[r_ea]],[T]]],[11,r_Ca,E,E,30,[[[r_ea]],[T]]],[11,r_Da,E,E,30,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,30,[[[r_ea]],[T]]],[11,r_Kc,E,E,30,N],[11,r_za,r_Uc,E,32,[[[U]],[r_ya]]],[11,r_Fa,E,E,32,[[[T]],[T]]],[11,r_Aa,E,E,32,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,32,[[[r_ea]],[U]]],[11,r_Ba,E,E,32,[[[r_ea]],[T]]],[11,r_Ca,E,E,32,[[[r_ea]],[T]]],[11,r_Da,E,E,32,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,32,[[[r_ea]],[T]]],[11,r_Kc,E,E,32,N],[11,r_za,r_Vc,E,34,[[[U]],[r_ya]]],[11,r_Fa,E,E,34,[[[T]],[T]]],[11,r_Aa,E,E,34,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,34,[[[r_ea]],[U]]],[11,r_Ba,E,E,34,[[[r_ea]],[T]]],[11,r_Ca,E,E,34,[[[r_ea]],[T]]],[11,r_Da,E,E,34,[[[r_ea]],[r_Ea]]],[11,r_za,r_Wc,E,35,[[[U]],[r_ya]]],[11,r_Fa,E,E,35,[[[T]],[T]]],[11,r_Aa,E,E,35,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,35,[[[r_ea]],[U]]],[11,r_Ba,E,E,35,[[[r_ea]],[T]]],[11,r_Ca,E,E,35,[[[r_ea]],[T]]],[11,r_Da,E,E,35,[[[r_ea]],[r_Ea]]],[11,r_Jc,E,E,35,[[[r_ea]],[T]]],[11,r_Kc,E,E,35,N],[11,r_za,r_Xc,E,38,[[[U]],[r_ya]]],[11,r_Fa,E,E,38,[[[T]],[T]]],[11,r_Aa,E,E,38,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,38,[[[r_ea]],[U]]],[11,r_Ba,E,E,38,[[[r_ea]],[T]]],[11,r_Ca,E,E,38,[[[r_ea]],[T]]],[11,r_Da,E,E,38,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,42,[[[U]],[r_ya]]],[11,r_Fa,E,E,42,[[[T]],[T]]],[11,r_Aa,E,E,42,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,42,[[[r_ea]],[U]]],[11,r_Ba,E,E,42,[[[r_ea]],[T]]],[11,r_Ca,E,E,42,[[[r_ea]],[T]]],[11,r_Da,E,E,42,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,43,[[[U]],[r_ya]]],[11,r_Fa,E,E,43,[[[T]],[T]]],[11,r_Aa,E,E,43,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,43,[[[r_ea]],[U]]],[11,r_Ba,E,E,43,[[[r_ea]],[T]]],[11,r_Ca,E,E,43,[[[r_ea]],[T]]],[11,r_Da,E,E,43,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,44,[[[U]],[r_ya]]],[11,r_Fa,E,E,44,[[[T]],[T]]],[11,r_Aa,E,E,44,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,44,[[[r_ea]],[U]]],[11,r_Ba,E,E,44,[[[r_ea]],[T]]],[11,r_Ca,E,E,44,[[[r_ea]],[T]]],[11,r_Da,E,E,44,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,45,[[[U]],[r_ya]]],[11,r_Fa,E,E,45,[[[T]],[T]]],[11,r_Aa,E,E,45,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,45,[[[r_ea]],[U]]],[11,r_Ba,E,E,45,[[[r_ea]],[T]]],[11,r_Ca,E,E,45,[[[r_ea]],[T]]],[11,r_Da,E,E,45,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,46,[[[U]],[r_ya]]],[11,r_Fa,E,E,46,[[[T]],[T]]],[11,r_Aa,E,E,46,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,46,[[[r_ea]],[U]]],[11,r_Ba,E,E,46,[[[r_ea]],[T]]],[11,r_Ca,E,E,46,[[[r_ea]],[T]]],[11,r_Da,E,E,46,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,47,[[[U]],[r_ya]]],[11,r_Fa,E,E,47,[[[T]],[T]]],[11,r_Aa,E,E,47,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,47,[[[r_ea]],[U]]],[11,r_Ba,E,E,47,[[[r_ea]],[T]]],[11,r_Ca,E,E,47,[[[r_ea]],[T]]],[11,r_Da,E,E,47,[[[r_ea]],[r_Ea]]],[11,r_Yc,E,E,46,[[[r_Ac],[r_pc]],[r_va,[r_qc]]]],[11,r_Yc,E,E,47,[[[r_Ac],[r_pc]],[r_va,[r_qc]]]],[11,r_Ha,r_uc,E,39,N],[11,r_Ja,r_Hc,E,3,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Ic,E,5,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,7,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,8,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Lc,E,11,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Mc,E,12,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Pc,E,20,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,21,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,19,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,22,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,41,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Rc,E,25,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Tc,E,30,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Uc,E,32,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Wc,E,35,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_rc,E,40,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ke,r_Tc,"Returns the set difference of the two sets of flags.",30,[[[r_ea],[r_sc]],[r_sc]]],[11,r_Ke,r_rc,E,40,N],[11,"eq",r_Hc,E,3,[[[r_ea],[r_bd]],[r_ja]]],[11,"eq",r_Ic,E,6,[[[r_ea],[r_ec]],[r_ja]]],[11,"eq",r_Pc,E,20,[[[r_ea],[r_Zc]],[r_ja]]],[11,"eq",E,E,22,[[[r_ea],["hypervisorvendor"]],[r_ja]]],[11,"eq",r_Tc,E,30,[[[r_ea],[r_sc]],[r_ja]]],[11,"ne",E,E,30,[[[r_ea],[r_sc]],[r_ja]]],[11,"eq",r_Uc,E,32,[[[r_ea],[r_tc]],[r_ja]]],[11,"ne",E,E,32,[[[r_ea],[r_tc]],[r_ja]]],[11,"eq",r_Wc,E,35,[[[r_ea],[r_xc]],[r_ja]]],[11,"ne",E,E,35,[[[r_ea],[r_xc]],[r_ja]]],[11,"eq",r_rc,E,40,[[[r_ea],[r_wc]],[r_ja]]],[11,r_Td,r_Tc,E,30,[[[r_ea],[r_sc]],[r_eb]]],[11,r_Td,r_Uc,E,32,[[[r_ea],[r_tc]],[r_eb]]],[11,r_Td,r_Wc,E,35,[[[r_ea],[r_xc]],[r_eb]]],[11,r_Td,r_rc,E,40,[[[r_ea],[r_wc]],[r_eb]]],[11,r_fb,r_Tc,E,30,[[[r_ea],[r_sc]],[r_va,[r_eb]]]],[11,"lt",E,E,30,[[[r_ea],[r_sc]],[r_ja]]],[11,"le",E,E,30,[[[r_ea],[r_sc]],[r_ja]]],[11,"gt",E,E,30,[[[r_ea],[r_sc]],[r_ja]]],[11,"ge",E,E,30,[[[r_ea],[r_sc]],[r_ja]]],[11,r_fb,r_Uc,E,32,[[[r_ea],[r_tc]],[r_va,[r_eb]]]],[11,"lt",E,E,32,[[[r_ea],[r_tc]],[r_ja]]],[11,"le",E,E,32,[[[r_ea],[r_tc]],[r_ja]]],[11,"gt",E,E,32,[[[r_ea],[r_tc]],[r_ja]]],[11,"ge",E,E,32,[[[r_ea],[r_tc]],[r_ja]]],[11,r_fb,r_Wc,E,35,[[[r_ea],[r_xc]],[r_va,[r_eb]]]],[11,"lt",E,E,35,[[[r_ea],[r_xc]],[r_ja]]],[11,"le",E,E,35,[[[r_ea],[r_xc]],[r_ja]]],[11,"gt",E,E,35,[[[r_ea],[r_xc]],[r_ja]]],[11,"ge",E,E,35,[[[r_ea],[r_xc]],[r_ja]]],[11,r_fb,r_rc,E,40,[[[r_ea],[r_wc]],[r_va,[r_eb]]]],[11,"write_str",r_Sc,E,26,[[[r_ea],[r_4a]],[r_ya]]],[11,r_hb,r_Tc,E,30,N],[11,r_Le,r_Uc,E,32,N],[11,r_Le,r_Wc,E,35,N],[11,r_Le,r_rc,E,40,N],[11,r_0c,r_Uc,E,32,[[[r_ea],[r_da]]]],[11,r_0c,r_Wc,E,35,[[[r_ea],[r_da]]]],[11,r_0c,r_rc,E,40,[[[r_ea],[r_da]]]],[11,r_1c,r_Tc,"Disables all flags enabled in the set.",30,[[[r_ea],[r_sc]]]],[11,r_1c,r_rc,E,40,[[[r_ea],[r_da]]]],[11,"not",r_Tc,"Returns the complement of this set of flags.",30,[[[r_ea]],[r_sc]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",30,[[[r_ea],[r_sc]],[r_sc]]],[11,"bitor",E,"Returns the union of the two sets of flags.",30,[[[r_ea],[r_sc]],[r_sc]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",30,[[[r_ea],[r_sc]],[r_sc]]],[11,"bitand_assign",E,"Disables all flags disabled in the set.",30,[[[r_ea],[r_sc]]]],[11,"bitor_assign",E,"Adds the set of flags.",30,[[[r_ea],[r_sc]]]],[11,"bitxor_assign",E,"Toggles the set of flags.",30,[[[r_ea],[r_sc]]]],[11,r_Ka,r_uc,E,39,N],[11,r_2c,r_Mc,E,14,N],[11,r_2c,r_Xc,E,38,[[[r_ea],[r_pc]],[r_3c]]],[11,r_4c,r_Mc,E,14,N],[11,r_4c,r_Xc,E,38,[[[r_ea],[r_pc]],[r_3c]]],[11,"from_iter",r_Tc,E,30,[[[T]],[r_sc]]],[11,r_5c,r_Uc,E,32,[[[r_ea],[r_ea]],[r_va,[r_da]]]],[11,r_6c,E,E,32,[[[r_ea]],[r_ea]]],[11,r_7c,E,E,32,[[[r_ea]],[r_ea]]],[11,r_8c,E,E,32,[[[r_ea]],[r_ea]]],[11,r_9c,E,E,32,[[[r_ea]],[r_ea]]],[11,r_ad,E,E,32,[[[r_ea],[r_da]],[r_va]]],[11,r_5c,r_Wc,E,35,[[[r_ea],[r_ea]],[r_va,[r_da]]]],[11,r_6c,E,E,35,[[[r_ea]],[r_ea]]],[11,r_7c,E,E,35,[[[r_ea]],[r_ea]]],[11,r_8c,E,E,35,[[[r_ea]],[r_ea]]],[11,r_9c,E,E,35,[[[r_ea]],[r_ea]]],[11,r_ad,E,E,35,[[[r_ea],[r_da]],[r_va]]],[11,"extend",r_Tc,E,30,[[[r_ea],[T]]]],[11,r_Ja,E,E,30,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,30,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,30,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_rc,E,40,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_Tc,E,30,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,r_rc,E,40,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_ib,r_Hc,E,3,[[[r_ea]],[r_bd]]],[11,r_ib,r_Ic,E,6,[[[r_ea]],[r_ec]]],[11,r_ib,E,E,5,[[[r_ea]],[r_hc]]],[11,r_ib,E,E,9,[[[r_ea]],[r_gc]]],[11,r_ib,r_Lc,E,11,[[[r_ea]],["tss"]]],[11,r_ib,r_Mc,E,13,[[[r_ea]],[r_kc]]],[11,r_ib,E,E,12,[[[r_ea]],[r_kl]]],[11,r_ib,r_Rc,E,25,[[[r_ea]],[r_cd]]],[11,r_ib,r_Tc,E,30,[[[r_ea]],[r_sc]]],[11,r_ib,r_Uc,E,32,[[[r_ea]],[r_tc]]],[11,r_ib,r_Wc,E,35,[[[r_ea]],[r_xc]]],[11,r_ib,r_rc,E,40,[[[r_ea]],[r_wc]]],[11,r_Na,r_Hc,E,0,[[],[r_ea]]],[11,r_Na,r_Tc,E,30,[[],[r_sc]]],[11,r_Na,r_rc,E,40,[[],[r_wc]]]],"p":[[3,r_dd],[3,r_ed],[3,r_dc],[4,r_fd],[3,r_gd],[3,r_hd],[4,r_id],[3,r_jd],[3,r_kd],[3,r_ld],[3,"Gdt"],[3,"Tss"],[3,r_md],[3,r_nd],[3,"Idt"],[3,"Pic"],[3,r_od],[3,r_pd],[3,r_qd],[3,r_rd],[4,r_sd],[4,r_td],[4,r_ud],[8,r_vd],[3,"Port"],[3,r_wd],[3,r_xd],[8,r_yd],[8,r_zd],[3,r_Ad],[3,r_Bd],[3,r_Cd],[3,r_Dd],[8,r_Ed],[3,r_Fd],[3,"Page"],[8,r_Gd],[8,r_Hd],[3,r_Id],[3,r_Jd],[3,r_Kd],[3,r_Ld],[4,r_Md],[4,r_Nd],[4,r_Od],[4,r_Pd],[4,r_Qd],[4,r_Rd]]};
searchIndex[r_ca]={r_ac:"Provides the abstraction of a bit field, which allows for…","i":[[8,r_qa,r_ca,"A generic trait which provides methods for extracting and…",N,N],[10,r_ga,E,"Returns the length, eg number of bits, in this bit field.",0,[[],[r_da]]],[10,r_ha,E,r_ia,0,[[[r_ea],[r_da]],[r_ja]]],[10,r_ka,E,r_la,0,[[[r_ea],[r_fa,[r_da]]],[r_ea]]],[10,r_ma,E,r_na,0,[[[r_ea],[r_da],[r_ja]],[r_ea]]],[10,r_oa,E,r_pa,0,[[[r_ea],[r_fa,[r_da]],[r_ea]],[r_ea]]],[8,r_ra,E,E,N,N],[10,r_ga,E,"Returns the length, eg number of bits, in this bit array.",1,[[[r_ea]],[r_da]]],[10,r_ha,E,r_ia,1,[[[r_ea],[r_da]],[r_ja]]],[10,r_ka,E,r_la,1,[[[r_ea],[r_fa,[r_da]]],[T]]],[10,r_ma,E,r_na,1,[[[r_ea],[r_da],[r_ja]]]],[10,r_oa,E,r_pa,1,[[[r_ea],[r_fa,[r_da]],[T]]]]],"p":[[8,r_qa],[8,r_ra]]};
searchIndex[r_cb]={r_ac:"A lightweight logging facade.","i":[[3,r_lb,r_cb,"The \"payload\" of a log message.",N,N],[3,r_mb,E,"Builder for `Record`.",N,N],[3,r_nb,E,"Metadata about a log message.",N,N],[3,r_ob,E,"Builder for `Metadata`.",N,N],[3,r_pb,E,"The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,r_qb,E,"The type returned by [`from_str`] when the string doesn't…",N,N],[4,r_jb,E,"An enum representing the available verbosity levels of the…",N,N],[13,r_Ua,E,"The \"error\" level.",0,N],[13,"Warn",E,"The \"warn\" level.",0,N],[13,"Info",E,"The \"info\" level.",0,N],[13,r_Va,E,"The \"debug\" level.",0,N],[13,r_Wa,E,"The \"trace\" level.",0,N],[4,r_kb,E,"An enum representing the available verbosity level filters…",N,N],[13,"Off",E,"A level lower than all log levels.",1,N],[13,r_Ua,E,"Corresponds to the `Error` log level.",1,N],[13,"Warn",E,"Corresponds to the `Warn` log level.",1,N],[13,"Info",E,"Corresponds to the `Info` log level.",1,N],[13,r_Va,E,"Corresponds to the `Debug` log level.",1,N],[13,r_Wa,E,"Corresponds to the `Trace` log level.",1,N],[5,"set_max_level",E,"Sets the global maximum log level.",N,[[[r_Xa]]]],[5,"max_level",E,"Returns the current maximum log level.",N,[[],[r_Xa]]],[5,"set_logger",E,"Sets the global logger to a `&'static Log`.",N,[[[r_cb]],[r_ya,["setloggererror"]]]],[5,r_gm,E,"Returns a reference to the logger.",N,[[],[r_cb]]],[17,"STATIC_MAX_LEVEL",E,"The statically resolved maximum log level.",N,N],[8,"Log",E,"A trait encapsulating the operations required of a logger.",N,N],[10,r_hm,E,"Determines if a log message with the specified metadata…",2,[[[r_ea],[r_Za]],[r_ja]]],[10,r_cb,E,"Logs the `Record`.",2,[[[r_ea],[r_5a]]]],[10,r_Sd,E,"Flushes any buffered records.",2,[[[r_ea]]]],[11,"max",E,"Returns the most verbose logging level.",0,[[],[r_Ya]]],[11,"to_level_filter",E,"Converts the `Level` to the equivalent `LevelFilter`.",0,[[[r_ea]],[r_Xa]]],[11,"max",E,"Returns the most verbose logging level filter.",1,[[],[r_Xa]]],[11,"to_level",E,"Converts `self` to the equivalent `Level`.",1,[[[r_ea]],[r_va,[r_Ya]]]],[11,r_6a,E,r_7a,3,[[],[r_0a]]],[11,"args",E,"The message body.",3,[[[r_ea]],[r_1a]]],[11,r_Za,E,"Metadata about the log directive.",3,[[[r_ea]],[r_Za]]],[11,r_Ya,E,r_8a,3,[[[r_ea]],[r_Ya]]],[11,r_2a,E,r_9a,3,[[[r_ea]],[r_4a]]],[11,r_3a,E,"The module path of the message.",3,[[[r_ea]],[r_va,[r_4a]]]],[11,"file",E,"The source file containing the message.",3,[[[r_ea]],[r_va,[r_4a]]]],[11,"line",E,"The line containing the message.",3,[[[r_ea]],[r_va,[r_vb]]]],[11,r_fc,E,"Construct new `RecordBuilder`.",4,[[],[r_0a]]],[11,"args",E,"Set `args`.",4,[[[r_ea],[r_1a]],[r_0a]]],[11,r_Za,E,"Set `metadata`. Construct a `Metadata` object with…",4,[[[r_ea],[r_Za]],[r_0a]]],[11,r_Ya,E,"Set `Metadata::level`.",4,[[[r_ea],[r_Ya]],[r_0a]]],[11,r_2a,E,"Set `Metadata::target`",4,[[[r_ea],[r_4a]],[r_0a]]],[11,r_3a,E,"Set `module_path`",4,[[[r_ea],[r_va,[r_4a]]],[r_0a]]],[11,"file",E,"Set `file`",4,[[[r_ea],[r_va,[r_4a]]],[r_0a]]],[11,"line",E,"Set `line`",4,[[[r_ea],[r_va,[r_vb]]],[r_0a]]],[11,r_bb,E,"Invoke the builder and return a `Record`",4,[[[r_ea]],[r_5a]]],[11,r_6a,E,r_7a,5,[[],[r_ab]]],[11,r_Ya,E,r_8a,5,[[[r_ea]],[r_Ya]]],[11,r_2a,E,r_9a,5,[[[r_ea]],[r_4a]]],[11,r_fc,E,"Construct a new `MetadataBuilder`.",6,[[],[r_ab]]],[11,r_Ya,E,"Setter for `level`.",6,[[[r_ea],[r_Ya]],[r_ab]]],[11,r_2a,E,"Setter for `target`.",6,[[[r_ea],[r_4a]],[r_ab]]],[11,r_bb,E,"Returns a `Metadata` object.",6,[[[r_ea]],[r_Za]]],[14,r_cb,E,"The standard logging macro.",N,N],[14,r_7h,E,"Logs a message at the error level.",N,N],[14,"warn",E,"Logs a message at the warn level.",N,N],[14,r_im,E,"Logs a message at the info level.",N,N],[14,"debug",E,"Logs a message at the debug level.",N,N],[14,"trace",E,"Logs a message at the trace level.",N,N],[14,"log_enabled",E,"Determines if a message logged at the specified level in…",N,N],[11,r_za,E,E,3,[[[U]],[r_ya]]],[11,r_Fa,E,E,3,[[[T]],[T]]],[11,r_Aa,E,E,3,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,3,[[[r_ea]],[U]]],[11,r_Ba,E,E,3,[[[r_ea]],[T]]],[11,r_Ca,E,E,3,[[[r_ea]],[T]]],[11,r_Da,E,E,3,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,4,[[[U]],[r_ya]]],[11,r_Fa,E,E,4,[[[T]],[T]]],[11,r_Aa,E,E,4,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,4,[[[r_ea]],[U]]],[11,r_Ba,E,E,4,[[[r_ea]],[T]]],[11,r_Ca,E,E,4,[[[r_ea]],[T]]],[11,r_Da,E,E,4,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,5,[[[U]],[r_ya]]],[11,r_Fa,E,E,5,[[[T]],[T]]],[11,r_Aa,E,E,5,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,5,[[[r_ea]],[U]]],[11,r_Ba,E,E,5,[[[r_ea]],[T]]],[11,r_Ca,E,E,5,[[[r_ea]],[T]]],[11,r_Da,E,E,5,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,6,[[[U]],[r_ya]]],[11,r_Fa,E,E,6,[[[T]],[T]]],[11,r_Aa,E,E,6,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,6,[[[r_ea]],[U]]],[11,r_Ba,E,E,6,[[[r_ea]],[T]]],[11,r_Ca,E,E,6,[[[r_ea]],[T]]],[11,r_Da,E,E,6,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,7,[[[U]],[r_ya]]],[11,r_Fa,E,E,7,[[[T]],[T]]],[11,r_Aa,E,E,7,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,7,[[[r_ea]],[U]]],[11,r_Ba,E,E,7,[[[r_ea]],[T]]],[11,r_Ca,E,E,7,[[[r_ea]],[T]]],[11,r_Da,E,E,7,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,8,[[[U]],[r_ya]]],[11,r_Fa,E,E,8,[[[T]],[T]]],[11,r_Aa,E,E,8,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,8,[[[r_ea]],[U]]],[11,r_Ba,E,E,8,[[[r_ea]],[T]]],[11,r_Ca,E,E,8,[[[r_ea]],[T]]],[11,r_Da,E,E,8,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,1,[[[U]],[r_ya]]],[11,r_Fa,E,E,1,[[[T]],[T]]],[11,r_Aa,E,E,1,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,1,[[[r_ea]],[U]]],[11,r_Ba,E,E,1,[[[r_ea]],[T]]],[11,r_Ca,E,E,1,[[[r_ea]],[T]]],[11,r_Da,E,E,1,[[[r_ea]],[r_Ea]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,1,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,7,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,8,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,1,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,3,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,4,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,5,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,6,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,7,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,8,[[[r_ea],[r_Ia]],[r_ya]]],[11,"eq",E,E,0,[[[r_ea],[r_Ya]],[r_ja]]],[11,"eq",E,E,0,[[[r_ea],[r_Xa]],[r_ja]]],[11,"eq",E,E,1,[[[r_ea],[r_Xa]],[r_ja]]],[11,"eq",E,E,1,[[[r_ea],[r_Ya]],[r_ja]]],[11,"eq",E,E,5,[[[r_ea],[r_Za]],[r_ja]]],[11,"ne",E,E,5,[[[r_ea],[r_Za]],[r_ja]]],[11,"eq",E,E,6,[[[r_ea],[r_ab]],[r_ja]]],[11,"ne",E,E,6,[[[r_ea],[r_ab]],[r_ja]]],[11,"eq",E,E,8,[[[r_ea],[r_db]],[r_ja]]],[11,"ne",E,E,8,[[[r_ea],[r_db]],[r_ja]]],[11,r_Td,E,E,0,[[[r_ea],[r_Ya]],[r_eb]]],[11,r_Td,E,E,1,[[[r_ea],[r_Xa]],[r_eb]]],[11,r_Td,E,E,5,[[[r_ea],[r_Za]],[r_eb]]],[11,r_Td,E,E,6,[[[r_ea],[r_ab]],[r_eb]]],[11,r_fb,E,E,0,[[[r_ea],[r_Ya]],[r_va,[r_eb]]]],[11,"lt",E,E,0,[[[r_ea],[r_Ya]],[r_ja]]],[11,"le",E,E,0,[[[r_ea],[r_Ya]],[r_ja]]],[11,"gt",E,E,0,[[[r_ea],[r_Ya]],[r_ja]]],[11,"ge",E,E,0,[[[r_ea],[r_Ya]],[r_ja]]],[11,r_fb,E,E,0,[[[r_ea],[r_Xa]],[r_va,[r_eb]]]],[11,"lt",E,E,0,[[[r_ea],[r_Xa]],[r_ja]]],[11,"le",E,E,0,[[[r_ea],[r_Xa]],[r_ja]]],[11,"gt",E,E,0,[[[r_ea],[r_Xa]],[r_ja]]],[11,"ge",E,E,0,[[[r_ea],[r_Xa]],[r_ja]]],[11,r_fb,E,E,1,[[[r_ea],[r_Xa]],[r_va,[r_eb]]]],[11,"lt",E,E,1,[[[r_ea],[r_Xa]],[r_ja]]],[11,"le",E,E,1,[[[r_ea],[r_Xa]],[r_ja]]],[11,"gt",E,E,1,[[[r_ea],[r_Xa]],[r_ja]]],[11,"ge",E,E,1,[[[r_ea],[r_Xa]],[r_ja]]],[11,r_fb,E,E,1,[[[r_ea],[r_Ya]],[r_va,[r_eb]]]],[11,"lt",E,E,1,[[[r_ea],[r_Ya]],[r_ja]]],[11,"le",E,E,1,[[[r_ea],[r_Ya]],[r_ja]]],[11,"gt",E,E,1,[[[r_ea],[r_Ya]],[r_ja]]],[11,"ge",E,E,1,[[[r_ea],[r_Ya]],[r_ja]]],[11,r_fb,E,E,5,[[[r_ea],[r_Za]],[r_va,[r_eb]]]],[11,"lt",E,E,5,[[[r_ea],[r_Za]],[r_ja]]],[11,"le",E,E,5,[[[r_ea],[r_Za]],[r_ja]]],[11,"gt",E,E,5,[[[r_ea],[r_Za]],[r_ja]]],[11,"ge",E,E,5,[[[r_ea],[r_Za]],[r_ja]]],[11,r_fb,E,E,6,[[[r_ea],[r_ab]],[r_va,[r_eb]]]],[11,"lt",E,E,6,[[[r_ea],[r_ab]],[r_ja]]],[11,"le",E,E,6,[[[r_ea],[r_ab]],[r_ja]]],[11,"gt",E,E,6,[[[r_ea],[r_ab]],[r_ja]]],[11,"ge",E,E,6,[[[r_ea],[r_ab]],[r_ja]]],[11,r_gb,E,E,0,[[[r_4a]],[r_ya,[r_Ya]]]],[11,r_gb,E,E,1,[[[r_4a]],[r_ya,[r_Xa]]]],[11,r_hb,E,E,0,N],[11,r_hb,E,E,1,N],[11,r_hb,E,E,5,N],[11,r_hb,E,E,6,N],[11,r_ib,E,E,0,[[[r_ea]],[r_Ya]]],[11,r_ib,E,E,1,[[[r_ea]],[r_Xa]]],[11,r_ib,E,E,3,[[[r_ea]],[r_5a]]],[11,r_ib,E,E,5,[[[r_ea]],[r_Za]]]],"p":[[4,r_jb],[4,r_kb],[8,"Log"],[3,r_lb],[3,r_mb],[3,r_nb],[3,r_ob],[3,r_pb],[3,r_qb]]};
searchIndex[r_me]={r_ac:"Integer trait and functions.","i":[[3,r_ze,r_me,r_ti,N,N],[5,r_ve,E,r_pe,N,[[[T]],[T]]],[5,r_we,E,r_qe,N,[[[T]],[T]]],[5,r_ne,E,r_oe,N,[[[T],[r_vb]],[T]]],[5,r_te,E,r_ui,N,N],[5,r_re,E,r_vi,N,[[[T],[T]],[T]]],[5,r_se,E,r_wi,N,[[[T],[T]],[T]]],[5,r_ue,E,r_xi,N,N],[5,"gcd",E,r_yi,N,[[[T],[T]],[T]]],[5,"lcm",E,r_zi,N,[[[T],[T]],[T]]],[5,r_Ai,E,r_Bi,N,[[[T],[T]],[T]]],[5,r_Ci,E,r_Di,N,N],[8,r_xe,E,r_Ei,N,N],[10,r_ne,E,r_oe,0,[[[r_ea],[r_vb]],[r_ea]]],[11,r_ve,E,r_pe,0,[[[r_ea]],[r_ea]]],[11,r_we,E,r_qe,0,[[[r_ea]],[r_ea]]],[8,r_ye,E,E,N,N],[10,r_re,E,r_Cg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,r_se,E,r_Dg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,"gcd",E,r_Eg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,"lcm",E,r_Fg,1,[[[r_ea],[r_ea]],[r_ea]]],[10,r_Gg,E,r_Hg,1,[[[r_ea],[r_ea]],[r_ja]]],[10,r_Ig,E,r_Jg,1,[[[r_ea],[r_ea]],[r_ja]]],[10,r_Kg,E,r_Lg,1,[[[r_ea]],[r_ja]]],[10,r_Mg,E,r_Ng,1,[[[r_ea]],[r_ja]]],[10,r_te,E,r_Og,1,N],[11,r_ue,E,r_Pg,1,N],[11,r_fc,E,r_Fi,2,[[[T]],[r_Gi]]],[11,r_za,E,E,2,[[[U]],[r_ya]]],[11,r_Fa,E,E,2,[[[T]],[T]]],[11,r_of,E,E,2,[[[r_ea]],["i"]]],[11,r_Aa,E,E,2,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,2,[[[r_ea]],[U]]],[11,r_Ba,E,E,2,[[[r_ea]],[T]]],[11,r_Ca,E,E,2,[[[r_ea]],[T]]],[11,r_Da,E,E,2,[[[r_ea]],[r_Ea]]],[11,r_qf,E,E,2,[[[r_ea]],[r_va]]],[11,r_ve,E,r_pe,0,[[[r_ea]],[r_ea]]],[11,r_we,E,r_qe,0,[[[r_ea]],[r_ea]]]],"p":[[8,r_xe],[8,r_ye],[3,r_ze]]};
searchIndex[r_nf]={r_ac:"External iterators for generic mathematics","i":[[3,r_vf,r_nf,r_Hi,N,N],[3,r_wf,E,r_Ii,N,N],[3,r_xf,E,r_Ji,N,N],[3,r_yf,E,r_Ki,N,N],[5,r_fa,E,r_Rg,N,[[["a"],["a"]],[r_fa]]],[5,r_Sg,E,r_Tg,N,[[["a"],["a"]],[r_sf]]],[5,r_Ug,E,r_Vg,N,[[["a"],["a"],["a"]],[r_tf]]],[5,r_Wg,E,r_Xg,N,[[["a"],["a"],["a"]],[r_uf]]],[11,r_za,E,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_of,E,E,0,[[[r_ea]],["i"]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,1,[[[U]],[r_ya]]],[11,r_Fa,E,E,1,[[[T]],[T]]],[11,r_of,E,E,1,[[[r_ea]],["i"]]],[11,r_Aa,E,E,1,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,1,[[[r_ea]],[U]]],[11,r_Ba,E,E,1,[[[r_ea]],[T]]],[11,r_Ca,E,E,1,[[[r_ea]],[T]]],[11,r_Da,E,E,1,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,2,[[[U]],[r_ya]]],[11,r_Fa,E,E,2,[[[T]],[T]]],[11,r_of,E,E,2,[[[r_ea]],["i"]]],[11,r_Aa,E,E,2,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,2,[[[r_ea]],[U]]],[11,r_Ba,E,E,2,[[[r_ea]],[T]]],[11,r_Ca,E,E,2,[[[r_ea]],[T]]],[11,r_Da,E,E,2,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,3,[[[U]],[r_ya]]],[11,r_Fa,E,E,3,[[[T]],[T]]],[11,r_of,E,E,3,[[[r_ea]],["i"]]],[11,r_Aa,E,E,3,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,3,[[[r_ea]],[U]]],[11,r_Ba,E,E,3,[[[r_ea]],[T]]],[11,r_Ca,E,E,3,[[[r_ea]],[T]]],[11,r_Da,E,E,3,[[[r_ea]],[r_Ea]]],[11,r_qf,E,E,0,[[[r_ea]],[r_va]]],[11,r_pf,E,E,0,N],[11,r_qf,E,E,1,[[[r_ea]],[r_va]]],[11,r_pf,E,E,1,N],[11,r_qf,E,E,2,[[[r_ea]],[r_va]]],[11,r_qf,E,E,3,[[[r_ea]],[r_va]]],[11,r_rf,E,E,0,[[[r_ea]],[r_va]]],[11,r_rf,E,E,1,[[[r_ea]],[r_va]]],[11,r_ib,E,E,0,[[[r_ea]],[r_fa]]],[11,r_ib,E,E,1,[[[r_ea]],[r_sf]]],[11,r_ib,E,E,2,[[[r_ea]],[r_tf]]],[11,r_ib,E,E,3,[[[r_ea]],[r_uf]]]],"p":[[3,r_vf],[3,r_wf],[3,r_xf],[3,r_yf]]};
searchIndex[r_rb]={r_ac:"Numeric traits for generic mathematics","i":[[3,r_Jb,r_rb,E,N,N],[12,"kind",E,E,0,N],[4,r_Kb,E,E,N,N],[13,r_Li,E,E,1,N],[13,r_Mi,E,E,1,N],[5,r_Zh,E,r_0h,N,[[[T],[T],[T]],[T]]],[0,r_Ni,E,E,N,N],[8,r_Lb,"num_traits::bounds",r_Yg,N,N],[10,r_tb,E,r_Zg,2,[[],[r_ea]]],[10,r_ub,E,r_0g,2,[[],[r_ea]]],[0,r_ug,r_rb,E,N,N],[5,r_ug,"num_traits::cast",r_vg,N,[[[T]],[r_va]]],[8,r_Mb,E,r_Yf,N,N],[11,r_Me,E,r_Zf,3,[[[r_ea]],[r_va,[r_sb]]]],[11,r_Ne,E,r_0f,3,[[[r_ea]],[r_va,["i8"]]]],[11,r_Oe,E,r_1f,3,[[[r_ea]],[r_va,[r_Mf]]]],[11,r_Pe,E,r_2f,3,[[[r_ea]],[r_va,[r_Lf]]]],[10,r_Qe,E,r_3f,3,[[[r_ea]],[r_va,[r_Cf]]]],[11,r_Re,E,r_4f,3,[[[r_ea]],[r_va,[r_Se]]]],[11,r_Te,E,r_5f,3,[[[r_ea]],[r_va,[r_da]]]],[11,r_Ue,E,r_6f,3,[[[r_ea]],[r_va,["u8"]]]],[11,r_Ve,E,r_7f,3,[[[r_ea]],[r_va,[r_pc]]]],[11,r_We,E,r_8f,3,[[[r_ea]],[r_va,[r_vb]]]],[10,r_Xe,E,r_9f,3,[[[r_ea]],[r_va,[r_Ud]]]],[11,r_Ye,E,r_ag,3,[[[r_ea]],[r_va,[r_Ze]]]],[11,r_0e,E,r_bg,3,[[[r_ea]],[r_va,[r_Df]]]],[11,r_1e,E,r_cg,3,[[[r_ea]],[r_va,[r_Ef]]]],[8,r_Nb,E,r_dg,N,N],[11,r_2e,E,r_eg,4,[[[r_sb]],[r_va]]],[11,r_3e,E,r_fg,4,[[["i8"]],[r_va]]],[11,r_4e,E,r_gg,4,[[[r_Mf]],[r_va]]],[11,r_5e,E,r_hg,4,[[[r_Lf]],[r_va]]],[10,r_6e,E,r_ig,4,[[[r_Cf]],[r_va]]],[11,r_7e,E,r_jg,4,[[[r_Se]],[r_va]]],[11,r_8e,E,r_kg,4,[[[r_da]],[r_va]]],[11,r_9e,E,r_lg,4,[[["u8"]],[r_va]]],[11,r_af,E,r_mg,4,[[[r_pc]],[r_va]]],[11,r_bf,E,r_ng,4,[[[r_vb]],[r_va]]],[10,r_cf,E,r_og,4,[[[r_Ud]],[r_va]]],[11,r_df,E,r_pg,4,[[[r_Ze]],[r_va]]],[11,r_ef,E,r_qg,4,[[[r_Df]],[r_va]]],[11,r_ff,E,r_rg,4,[[[r_Ef]],[r_va]]],[8,r_Ob,E,r_sg,N,N],[10,r_Fa,E,r_tg,5,[[[T]],[r_va]]],[8,r_Pb,E,r_2g,N,N],[10,"as_",E,r_3g,6,[[[r_ea]],[T]]],[0,r_Oi,r_rb,E,N,N],[8,r_Qb,"num_traits::float",r_Pi,N,N],[10,r_Qi,E,r_Ri,7,[[],[r_ea]]],[10,r_Si,E,r_Ti,7,[[],[r_ea]]],[10,"nan",E,r_Ui,7,[[],[r_ea]]],[10,r_Vi,E,r_Wi,7,[[],[r_ea]]],[10,r_tb,E,r_Xi,7,[[],[r_ea]]],[10,r_Yi,E,r_Zi,7,[[],[r_ea]]],[10,r_0i,E,r_1i,7,[[],[r_ea]]],[10,r_ub,E,r_2i,7,[[],[r_ea]]],[11,r_gf,E,r_3i,7,[[[r_ea]],[r_ja]]],[11,r_hf,E,r_4i,7,[[[r_ea]],[r_ja]]],[11,r_if,E,r_5i,7,[[[r_ea]],[r_ja]]],[11,r_jf,E,r_6i,7,[[[r_ea]],[r_ja]]],[10,r_7i,E,r_8i,7,[[[r_ea]],[r_9i]]],[11,r_Nf,E,r_aj,7,[[[r_ea]],[r_ea]]],[11,r_bj,E,r_cj,7,[[[r_ea]],[r_ea]]],[11,r_Of,E,r_dj,7,[[[r_ea]],[r_ea]]],[11,r_Pf,E,r_ej,7,[[[r_ea]],[r_ea]]],[11,r_Qf,E,r_fj,7,[[[r_ea]],[r_ea]]],[11,r_8h,E,r_gj,7,[[[r_ea]],[r_ea]]],[11,r_Eb,E,r_hj,7,[[[r_ea]],[r_ea]]],[11,r_ij,E,r_jj,7,[[[r_ea]],[r_ja]]],[11,r_kj,E,r_lj,7,[[[r_ea]],[r_ja]]],[11,"min",E,r_mj,7,[[[r_ea],[r_ea]],[r_ea]]],[11,"max",E,r_nj,7,[[[r_ea],[r_ea]],[r_ea]]],[11,r_Rf,E,r_oj,7,[[[r_ea]],[r_ea]]],[11,"powi",E,r_pj,7,[[[r_ea],[r_Lf]],[r_ea]]],[10,r_qj,E,r_rj,7,[[[r_ea]],[r_ea]]],[10,r_sj,E,r_tj,7,[[[r_ea]],[r_ea]]],[10,r_uj,E,r_vj,7,N],[8,r_Rb,E,E,N,N],[10,"E",E,r_wj,8,[[],[r_ea]]],[10,r_xj,E,r_yj,8,[[],[r_ea]]],[10,r_zj,E,r_Aj,8,[[],[r_ea]]],[10,r_Bj,E,r_Cj,8,[[],[r_ea]]],[10,r_Dj,E,r_Ej,8,[[],[r_ea]]],[10,r_Fj,E,r_Gj,8,[[],[r_ea]]],[10,r_Hj,E,r_Ij,8,[[],[r_ea]]],[10,r_Jj,E,r_Kj,8,[[],[r_ea]]],[10,r_Lj,E,r_Mj,8,[[],[r_ea]]],[10,r_Nj,E,r_Oj,8,[[],[r_ea]]],[10,r_Pj,E,r_Qj,8,[[],[r_ea]]],[10,"LN_2",E,r_Rj,8,[[],[r_ea]]],[10,r_Sj,E,r_Tj,8,[[],[r_ea]]],[10,r_Uj,E,r_Vj,8,[[],[r_ea]]],[10,"PI",E,r_Wj,8,[[],[r_ea]]],[10,r_Xj,E,r_Yj,8,[[],[r_ea]]],[0,r_Zj,r_rb,E,N,N],[5,r_Vd,"num_traits::identities",r_ah,N,[[],[T]]],[5,r_9h,E,r_bh,N,[[],[T]]],[8,r_ai,E,r_4g,N,N],[10,r_Vd,E,r_5g,9,[[],[r_ea]]],[10,r_kf,E,r_6g,9,[[[r_ea]],[r_ja]]],[8,"One",E,r_7g,N,N],[10,r_9h,E,r_8g,10,[[],[r_ea]]],[11,r_lf,E,r_9g,10,[[[r_ea]],[r_ja]]],[0,"int",r_rb,E,N,N],[8,r_Sb,"num_traits::int",E,N,N],[10,r_ch,E,r_dh,11,[[[r_ea]],[r_vb]]],[10,r_eh,E,r_fh,11,[[[r_ea]],[r_vb]]],[10,r_gh,E,r_hh,11,[[[r_ea]],[r_vb]]],[10,r_ih,E,r_jh,11,[[[r_ea]],[r_vb]]],[10,r_kh,E,r_wb,11,[[[r_ea],[r_vb]],[r_ea]]],[10,r_lh,E,r_xb,11,[[[r_ea],[r_vb]],[r_ea]]],[10,r_mh,E,r_wb,11,[[[r_ea],[r_vb]],[r_ea]]],[10,r_nh,E,r_xb,11,[[[r_ea],[r_vb]],[r_ea]]],[10,r_oh,E,r_wb,11,[[[r_ea],[r_vb]],[r_ea]]],[10,r_ph,E,r_xb,11,[[[r_ea],[r_vb]],[r_ea]]],[10,r_qh,E,r_rh,11,[[[r_ea]],[r_ea]]],[10,r_sh,E,r_th,11,[[[r_ea]],[r_ea]]],[10,r_uh,E,r_vh,11,[[[r_ea]],[r_ea]]],[10,r_wh,E,r_xh,11,[[[r_ea]],[r_ea]]],[10,r_yh,E,r_zh,11,[[[r_ea]],[r_ea]]],[10,r_Ff,E,r_Ah,11,[[[r_ea],[r_vb]],[r_ea]]],[0,"ops",r_rb,E,N,N],[0,r_0j,r_zb,E,N,N],[8,r_Tb,"num_traits::ops::checked",r_Bh,N,N],[10,r_Sf,E,r_Ch,12,[[[r_ea],[r_ea]],[r_va]]],[8,r_Ub,E,r_Dh,N,N],[10,r_Tf,E,r_Eh,13,[[[r_ea],[r_ea]],[r_va]]],[8,r_Vb,E,r_Fh,N,N],[10,r_Uf,E,r_Gh,14,[[[r_ea],[r_ea]],[r_va]]],[8,r_Wb,E,r_Hh,N,N],[10,r_Vf,E,r_Ih,15,[[[r_ea],[r_ea]],[r_va]]],[8,r_Xb,E,r_1j,N,N],[10,r_2j,E,r_3j,16,[[[r_ea],[r_ea]],[r_va]]],[8,r_Yb,E,r_4j,N,N],[10,r_5j,E,r_6j,17,[[[r_ea]],[r_va]]],[8,r_Zb,E,r_7j,N,N],[10,r_8j,E,r_yb,18,[[[r_ea],[r_vb]],[r_va]]],[8,r_0b,E,r_9j,N,N],[10,r_ak,E,r_yb,19,[[[r_ea],[r_vb]],[r_va]]],[0,r_mi,r_zb,E,N,N],[8,"Inv","num_traits::ops::inv",r_bk,N,N],[16,r_Ab,E,r_Db,20,N],[10,r_mi,E,r_ck,20,N],[0,r_Bb,r_zb,E,N,N],[8,r_1b,"num_traits::ops::mul_add",r_dk,N,N],[16,r_Ab,E,r_ek,21,N],[10,r_Bb,E,r_Cb,21,N],[8,r_2b,E,r_fk,N,N],[10,r_gk,E,r_Cb,22,[[[r_ea],["a"],["b"]]]],[0,r_hk,r_zb,E,N,N],[8,r_3b,"num_traits::ops::saturating",r_Kh,N,N],[10,r_Lh,E,r_Mh,23,[[[r_ea],[r_ea]],[r_ea]]],[10,r_Nh,E,r_Oh,23,[[[r_ea],[r_ea]],[r_ea]]],[0,r_ik,r_zb,E,N,N],[8,r_4b,"num_traits::ops::wrapping",r_jk,N,N],[10,r_kk,E,r_lk,24,[[[r_ea],[r_ea]],[r_ea]]],[8,r_5b,E,r_mk,N,N],[10,r_nk,E,r_ok,25,[[[r_ea],[r_ea]],[r_ea]]],[8,r_6b,E,r_pk,N,N],[10,r_qk,E,r_rk,26,[[[r_ea],[r_ea]],[r_ea]]],[8,r_7b,E,r_sk,N,N],[10,r_tk,E,r_uk,27,[[[r_ea],[r_vb]],[r_ea]]],[8,r_8b,E,r_vk,N,N],[10,r_wk,E,r_xk,28,[[[r_ea],[r_vb]],[r_ea]]],[0,r_Ff,r_rb,E,N,N],[5,r_Ff,"num_traits::pow",r_wg,N,[[[T],[r_da]],[T]]],[5,r_xg,E,r_yg,N,[[[T],[r_da]],[r_va]]],[8,"Pow",E,r_Ph,N,N],[16,r_Ab,E,r_Db,29,N],[10,r_Ff,E,r_Qh,29,N],[0,"sign",r_rb,E,N,N],[5,r_8h,"num_traits::sign",r_Fb,N,[[[T]],[T]]],[5,r_Gb,E,r_Hb,N,[[[T],[T]],[T]]],[5,r_Eb,E,r_Ib,N,[[[T]],[T]]],[8,r_9b,E,r_Rh,N,N],[10,r_8h,E,r_Fb,30,[[[r_ea]],[r_ea]]],[10,r_Gb,E,r_Hb,30,[[[r_ea],[r_ea]],[r_ea]]],[10,r_Eb,E,r_Ib,30,[[[r_ea]],[r_ea]]],[10,r_Wf,E,r_Sh,30,[[[r_ea]],[r_ja]]],[10,r_Xf,E,r_Th,30,[[[r_ea]],[r_ja]]],[8,r_Uh,E,r_Vh,N,N],[8,"Num",r_rb,r_Wh,N,N],[16,r_Xh,E,E,31,N],[10,r_mf,E,r_Yh,31,[[[r_4a],[r_vb]],[r_ya]]],[8,r_yk,E,r_zk,N,N],[8,r_Ak,E,r_Bk,N,N],[8,r_Ck,E,r_Dk,N,N],[8,r_Ek,E,r_Fk,N,N],[8,r_Gk,E,r_Hk,N,N],[8,r_Ik,E,r_Jk,N,N],[11,r_za,E,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,1,[[[U]],[r_ya]]],[11,r_Fa,E,E,1,[[[T]],[T]]],[11,r_Aa,E,E,1,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,1,[[[r_ea]],[U]]],[11,r_Ba,E,E,1,[[[r_ea]],[T]]],[11,r_Ca,E,E,1,[[[r_ea]],[T]]],[11,r_Da,E,E,1,[[[r_ea]],[r_Ea]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,1,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]]],"p":[[3,r_Jb],[4,r_Kb],[8,r_Lb],[8,r_Mb],[8,r_Nb],[8,r_Ob],[8,r_Pb],[8,r_Qb],[8,r_Rb],[8,r_ai],[8,"One"],[8,r_Sb],[8,r_Tb],[8,r_Ub],[8,r_Vb],[8,r_Wb],[8,r_Xb],[8,r_Yb],[8,r_Zb],[8,r_0b],[8,"Inv"],[8,r_1b],[8,r_2b],[8,r_3b],[8,r_4b],[8,r_5b],[8,r_6b],[8,r_7b],[8,r_8b],[8,"Pow"],[8,r_9b],[8,"Num"]]};
searchIndex[r_zf]={r_ac:"Rational numbers","i":[[3,r_Gf,r_zf,r_Kk,N,N],[3,r_Hf,E,E,N,N],[6,r_1h,E,r_2h,N,N],[6,r_Lk,E,r_Mk,N,N],[6,r_Nk,E,r_Ok,N,N],[11,r_fc,E,r_Pk,0,[[[T],[T]],[r_Af]]],[11,r_Qk,E,r_Rk,0,[[[T]],[r_Af]]],[11,r_Sk,E,r_Tk,0,[[[T],[T]],[r_Af]]],[11,r_Uk,E,r_Vk,0,[[[r_ea]],[T]]],[11,r_Wk,E,r_Xk,0,[[[r_ea]],[T]]],[11,r_Yk,E,r_Zk,0,[[[r_ea]],[T]]],[11,r_0k,E,r_1k,0,[[[r_ea]],[r_ja]]],[11,r_2k,E,r_3k,0,[[[r_ea]],[r_Af]]],[11,r_Rf,E,r_4k,0,[[[r_ea]],[r_Af]]],[11,r_Nf,E,r_5k,0,[[[r_ea]],[r_Af]]],[11,r_bj,E,r_6k,0,[[[r_ea]],[r_Af]]],[11,r_Of,E,r_7k,0,[[[r_ea]],[r_Af]]],[11,r_Pf,E,r_8k,0,[[[r_ea]],[r_Af]]],[11,r_Qf,E,r_9k,0,[[[r_ea]],[r_Af]]],[11,r_Ff,E,r_al,0,[[[r_ea],[r_Lf]],[r_Af]]],[11,r_bl,E,E,0,[[["f"]],[r_va,[r_Af]]]],[11,r_za,E,E,0,[[[U]],[r_ya]]],[11,r_Fa,E,E,0,[[[T]],[T]]],[11,r_Aa,E,E,0,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,0,[[[r_ea]],[U]]],[11,r_Ba,E,E,0,[[[r_ea]],[T]]],[11,r_Ca,E,E,0,[[[r_ea]],[T]]],[11,r_Da,E,E,0,[[[r_ea]],[r_Ea]]],[11,r_za,E,E,1,[[[U]],[r_ya]]],[11,r_Fa,E,E,1,[[[T]],[T]]],[11,r_Aa,E,E,1,[[[r_ea]],[r_ya]]],[11,r_Ga,E,E,1,[[[r_ea]],[U]]],[11,r_Ba,E,E,1,[[[r_ea]],[T]]],[11,r_Ca,E,E,1,[[[r_ea]],[T]]],[11,r_Da,E,E,1,[[[r_ea]],[r_Ea]]],[11,r_Ja,E,r_cl,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,1,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,0,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ja,E,E,1,[[[r_ea],[r_Ia]],[r_ya]]],[11,r_Ke,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Ke,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,r_Ke,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Ke,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,r_If,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_If,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,r_If,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_If,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,"eq",E,E,0,[[[r_ea],[r_ea]],[r_ja]]],[11,"eq",E,E,1,[[[r_ea],[r_Bf]],[r_ja]]],[11,"ne",E,E,1,[[[r_ea],[r_Bf]],[r_ja]]],[11,r_Td,E,E,0,[[[r_ea],[r_ea]],[r_eb]]],[11,r_fb,E,E,0,[[[r_ea],[r_ea]],[r_va,[r_eb]]]],[11,r_gb,E,r_dl,0,[[[r_4a]],[r_ya,[r_Af,r_Bf]]]],[11,r_Fa,E,E,0,[[[T]],[r_Af]]],[11,r_Fa,E,E,0,N],[11,r_hb,E,E,0,[[[r_ea],["h"]]]],[11,r_Le,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Le,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,r_Le,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Le,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,r_Jf,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Jf,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,r_Jf,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Jf,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,r_Kf,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Kf,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,r_Kf,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Kf,E,E,0,[[[r_ea],[T]],[r_Af]]],[11,"neg",E,E,0,[[[r_ea]],[r_Af]]],[11,r_0c,E,E,0,[[[r_ea],[r_Af]]]],[11,r_0c,E,E,0,[[[r_ea],[T]]]],[11,r_0c,E,E,0,[[[r_ea],[r_Af]]]],[11,r_0c,E,E,0,[[[r_ea],[T]]]],[11,r_1c,E,E,0,[[[r_ea],[r_Af]]]],[11,r_1c,E,E,0,[[[r_ea],[T]]]],[11,r_1c,E,E,0,[[[r_ea],[r_Af]]]],[11,r_1c,E,E,0,[[[r_ea],[T]]]],[11,r_De,E,E,0,[[[r_ea],[r_Af]]]],[11,r_De,E,E,0,[[[r_ea],[T]]]],[11,r_De,E,E,0,[[[r_ea],[r_Af]]]],[11,r_De,E,E,0,[[[r_ea],[T]]]],[11,r_Ee,E,E,0,[[[r_ea],[r_Af]]]],[11,r_Ee,E,E,0,[[[r_ea],[T]]]],[11,r_Ee,E,E,0,[[[r_ea],[r_Af]]]],[11,r_Ee,E,E,0,[[[r_ea],[T]]]],[11,r_Fe,E,E,0,[[[r_ea],[r_Af]]]],[11,r_Fe,E,E,0,[[[r_ea],[T]]]],[11,r_Fe,E,E,0,[[[r_ea],[r_Af]]]],[11,r_Fe,E,E,0,[[[r_ea],[T]]]],[11,r_si,E,E,0,[[["i"]],[r_ea]]],[11,r_si,E,E,0,[[["i"]],[r_ea]]],[11,r_Ge,E,E,0,[[["i"]],[r_ea]]],[11,r_Ge,E,E,0,[[["i"]],[r_ea]]],[11,r_ib,E,E,0,[[[r_ea]],[r_Af]]],[11,r_ib,E,E,1,[[[r_ea]],[r_Bf]]],[11,r_Ga,E,E,0,N],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_6e,E,E,0,[[[r_Cf]],[r_va]]],[11,r_7e,E,E,0,[[[r_Se]],[r_va]]],[11,r_cf,E,E,0,[[[r_Ud]],[r_va]]],[11,r_df,E,E,0,[[[r_Ze]],[r_va]]],[11,r_ef,E,E,0,[[[r_Df]],[r_va]]],[11,r_ff,E,E,0,[[[r_Ef]],[r_va]]],[11,r_mf,E,r_el,0,[[[r_4a],[r_vb]],[r_ya,[r_Af,r_Bf]]]],[11,r_Vd,E,E,0,[[],[r_Af]]],[11,r_kf,E,E,0,[[[r_ea]],[r_ja]]],[11,r_9h,E,E,0,[[],[r_Af]]],[11,r_lf,E,E,0,[[[r_ea]],[r_ja]]],[11,r_Uf,E,E,0,[[[r_ea],[r_Af]],[r_va,[r_Af]]]],[11,r_Vf,E,E,0,[[[r_ea],[r_Af]],[r_va,[r_Af]]]],[11,r_Tf,E,E,0,[[[r_ea],[r_Af]],[r_va,[r_Af]]]],[11,r_Sf,E,E,0,[[[r_ea],[r_Af]],[r_va,[r_Af]]]],[11,r_mi,E,E,0,[[[r_ea]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],["i8"]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],["i8"]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_Mf]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_Mf]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_Lf]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_Lf]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_Cf]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_Cf]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_sb]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_sb]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],["u8"]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],["u8"]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_pc]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_pc]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_vb]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_vb]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_Ud]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_Ud]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_da]],[r_Af]]],[11,r_Ff,E,E,0,[[[r_ea],[r_da]],[r_Af]]],[11,r_8h,E,E,0,[[[r_ea]],[r_Af]]],[11,r_Gb,E,E,0,[[[r_ea],[r_Af]],[r_Af]]],[11,r_Eb,E,E,0,[[[r_ea]],[r_Af]]],[11,r_Wf,E,E,0,[[[r_ea]],[r_ja]]],[11,r_Xf,E,E,0,[[[r_ea]],[r_ja]]]],"p":[[3,r_Gf],[3,r_Hf]]};
initSearch(searchIndex);addSearchOptions(searchIndex);