var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","usize","bit_length","get_bit","Obtains the bit at the index `bit`; note that index 0 is…","get_bits","Obtains the range of bits specified by `range`; note that…","set_bit","Sets the bit at the index `bit` to the value `value`…","set_bits","Sets the range of bits defined by the range `range` to the…","BitField","BitArray","rangebounds","bitflags","mutexguard","Creates a new spinlock wrapping the supplied data.","into_inner","rwlockreadguard","rwlockwriteguard","option","try_from","try_into","borrow_mut","result","type_id","borrow","typeid","deref_mut","formatter","MutexGuard","RwLockReadGuard","RwLockWriteGuard","levelfilter","setloggererror","metadata","recordbuilder","arguments","module_path","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","metadatabuilder","parselevelerror","ordering","partial_cmp","from_str","LevelFilter","RecordBuilder","Metadata","MetadataBuilder","SetLoggerError","ParseLevelError","libpebble","kernelobjectid","requestsystemobjecterror","mapmemoryobjecterror","libpebble::syscall","libpebble::caps","libpebble::object","capability","systemobjectid","Capability","KernelObjectId","SystemObjectId","RequestSystemObjectError","MapMemoryObjectError","partialord","num_traits","min_value","max_value","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","Shifts a number to the left, checking for overflow. If…","num_traits::ops","Performs the fused multiply-add operation.","checkedmul","The result after applying the operator.","signed","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","FloatCore","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedRem","CheckedNeg","CheckedShl","CheckedShr","MulAddAssign","Saturating","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","A potential output from `Cmp`, this is the type equivalent…","Instantiates a singleton representing this bit.","Instantiates a singleton representing this unsigned integer.","Instantiates a singleton representing this strictly…","to_isize","typenum","This function isn't used in this crate, but may be useful…","The type representing either `True` or `False`","Method returning `True` or `False`.","typenum::bit","is_greater","is_less_or_equal","is_not_equal","is_greater_or_equal","is_equal","typenum::uint","partial_div","typenum::int","is_less","typenum::array","to_ordering","to_usize","default","Unsigned","PartialDiv","IsGreater","IsLessOrEqual","IsNotEqual","IsGreaterOrEqual","namespace","amlhandle","amlerror","amlvalue","amlname","aml::value","aml::value::AmlValue","Processor","fieldaccesstype","fieldupdaterule","sync_level","clone_into","to_owned","regionspace","fieldflags","methodflags","AmlContext","Namespace","RegionSpace","FieldAccessType","FieldUpdateRule","FieldFlags","MethodFlags","AmlHandle","ObjectDoesNotExist","is_normal","integer","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_floor","mod_floor","div_mod_floor","IterBinomial","Integer","complex","parsecomplexerror","add_assign","sub_assign","mul_assign","div_assign","rem_assign","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…","ParseComplexError","from_isize","from_i128","from_usize","from_u128","toprimitive","is_infinite","is_finite","from_str_radix","acpierror","physicalmapping","global_system_interrupt","trigger_mode","SameAsBus","acpi::handler","acpi::interrupt","processor","processorstate","MadtError","AcpiError","ProcessorState","PhysicalMapping","AcpiHandler","InterruptSourceOverride","NmiSource","LocalInterruptLine","TriggerMode","InterruptModel","PciConfigRegions","into_iter","size_hint","next_back","rangeinclusive","rangestep","rangestepinclusive","RangeInclusive","RangeStep","RangeStepInclusive","parseratioerror","from_i64","from_u64","from_f32","from_f64","ParseRatioError","checked_add","checked_sub","checked_mul","checked_div","is_positive","is_negative","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`.","Converts the value of `self` to an `i8`.","Converts the value of `self` to an `i16`.","Converts the value of `self` to an `i32`.","Converts the value of `self` to an `i64`.","Converts the value of `self` to an `i128`.","Converts the value of `self` to a `usize`.","Converts the value of `self` to an `u8`.","Converts the value of `self` to an `u16`.","Converts the value of `self` to an `u32`.","Converts the value of `self` to an `u64`.","Converts the value of `self` to an `u128`.","Converts the value of `self` to an `f32`.","Converts the value of `self` to an `f64`.","A generic trait for converting a number to a value.","Convert an `isize` to return an optional value of this…","Convert an `i8` to return an optional value of this type.…","Convert an `i16` to return an optional value of this type.…","Convert an `i32` to return an optional value of this type.…","Convert an `i64` to return an optional value of this type.…","Convert an `i128` to return an optional value of this…","Convert a `usize` to return an optional value of this…","Convert an `u8` to return an optional value of this type.…","Convert an `u16` to return an optional value of this type.…","Convert an `u32` to return an optional value of this type.…","Convert an `u64` to return an optional value of this type.…","Convert an `u128` to return an optional value of this…","Convert a `f32` to return an optional value of this type.…","Convert a `f64` to return an optional value of this type.…","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","Floored integer division.","Floored integer modulo, satisfying:","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Deprecated, use `is_multiple_of` instead.","is_multiple_of","Returns `true` if `self` is a multiple of `other`.","Returns `true` if the number is even.","Returns `true` if the number is odd.","Simultaneous truncated integer division and modulus.…","Simultaneous floored integer division and modulus. Returns…","Returns an iterator over the given range [start, stop)…","range_inclusive","Return an iterator over the range [start, stop]","range_step","Return an iterator over the range [start, stop) by `step`.…","range_step_inclusive","Return an iterator over the range [start, stop] by `step`.…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","num::traits","from_i16","from_i32","from_u16","from_u32","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Returns `true` if `self` is equal to the multiplicative…","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","count_ones","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","Divides two numbers, checking for underflow, overflow and…","num::traits::ops","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","Binary operator for raising a value to a power.","Returns `self` to the power `rhs`.","Useful functions for signed numbers (i.e. numbers that can…","Returns true if the number is positive and false if the…","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","Convert from a string and radix <= 36.","A value bounded by a minimum and a maximum","Alias for a `Ratio` of machine-sized integers.","num::complex","num::integer","num::iter","num::rational","Complex32","Complex64","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since `T` doesn't…","Multiplies `self` by the scalar `t`.","Divides `self` by the scalar `t`.","Returns the complex conjugate. i.e. `re - i im`","Returns `1/self`","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal","product","An iterator over binomial coefficients.","nth_root","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Calculates the Greatest Common Divisor (GCD) of the number…","Calculates the Lowest Common Multiple (LCM) of the number…","Calculate the binomial coefficient.","multinomial","Calculate the multinomial coefficient.","Provides methods to compute an integer's square root, cube…","For a given n, iterate over all binomial coefficients…","iterbinomial","An iterator over the range [start, stop)","An iterator over the range [start, stop]","An iterator over the range [start, stop) by `step`. It…","An iterator over the range [start, stop] by `step`. It…","Represents the ratio between two numbers.","Rational","Rational32","Alias for a `Ratio` of 32-bit-sized integers.","Rational64","Alias for a `Ratio` of 64-bit-sized integers.","Creates a new `Ratio`. Fails if `denom` is zero.","from_integer","Creates a `Ratio` representing the integer `t`.","Creates a `Ratio` without checking for `denom == 0` or…","to_integer","Converts to an integer, rounding towards zero.","Gets an immutable reference to the numerator.","Gets an immutable reference to the denominator.","is_integer","Returns true if the rational number is an integer…","Returns a reduced copy of self.","Returns the reciprocal.","Rounds towards minus infinity.","Rounds towards plus infinity.","Rounds to the nearest integer. Rounds half-way cases away…","Rounds towards zero.","Returns the fractional part of a number, with division…","Raises the `Ratio` to the power of an exponent.","approximate_float","Renders as `numer/denom`. If denom=1, renders as numer.","Parses `numer/denom` or just `numer`.","Parses `numer/denom` where the numbers are in base `radix`.","is_zero","abs_sub","to_i128","to_u128","from_i8","from_u8","Generic trait for floating point numbers that works with…","Returns positive infinity.","neg_infinity","Returns negative infinity.","Returns NaN.","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","Returns `true` if the number is NaN.","Returns `true` if the number is infinite.","Returns `true` if the number is neither infinite or NaN.","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","Returns `true` if `self` is positive, including `+0.0` and…","is_sign_negative","Returns `true` if `self` is negative, including `-0.0` and…","Returns the minimum of the two numbers.","Returns the maximum of the two numbers.","Returns the reciprocal (multiplicative inverse) of the…","Raise a number to an integer power.","to_degrees","Converts to degrees, assuming the number is in radians.","to_radians","Converts to radians, assuming the number is in degrees.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Return Euler’s number.","FRAC_1_PI","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","FRAC_2_PI","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","FRAC_PI_2","Return `π / 2.0`.","FRAC_PI_3","Return `π / 3.0`.","FRAC_PI_4","Return `π / 4.0`.","FRAC_PI_6","Return `π / 6.0`.","FRAC_PI_8","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","identities","Performs an integral remainder that returns `None` instead…","checked_rem","Finds the remainder of dividing two numbers, checking for…","Performs negation that returns `None` if the result can't…","checked_neg","Negates a number, returning `None` for results that can't…","Performs a left shift that returns `None` on overflow.","checked_shl","Performs a right shift that returns `None` on overflow.","checked_shr","Unary operator for retrieving the multiplicative inverse,…","Returns the multiplicative inverse of `self`.","Fused multiply-add. Computes `(self * a) + b` with only…","The resulting type after applying the fused multiply-add.","The fused multiply-add assignment operation.","mul_add_assign","saturating","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","Performs a left shift that does not panic.","wrapping_shl","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…","Performs a right shift that does not panic.","wrapping_shr","Panic-free bitwise shift-right; yields `self >>…","The trait for types implementing basic numeric operations","The trait for `Num` types which also implement numeric…","The trait for references which implement numeric…","NumAssignOps","The trait for types implementing numeric assignment…","NumAssign","The trait for `Num` types which also implement assignment…","NumAssignRef","The trait for `NumAssign` types which also implement…","NumCast","Find `n` consecutive unset bits, set them and return the…","pebble_util","Get a reference to the data, if this guard has been…","BinaryPrettyPrint","BitmapArray","InitGuard","physical_address","This marks memory that the OS should preserve in the…","Each pixel is represented by 4 bytes, with the following…","This should only be called from the bootloader.","privilegelevel","tsssegment","segmentselector","x86_64::hw","idtentry","microarch","virtualaddress","physicaladdress","x86_64::memory","start_address","starts_with","entryflags","contains","pagetable","maperror","size4kib","size2mib","align_down","virtual_address","new_unchecked","Create a new `VirtualAddress` from the given address,…","align_up","x86_64::boot","x86_64::hw::gdt","x86_64::hw::tss","x86_64::hw::idt","x86_64::hw::i8259_pic","x86_64::hw::local_apic","x86_64::hw::cpu","x86_64::hw::port","x86_64::hw::registers","x86_64::hw::serial","x86_64::memory::frame","x86_64::memory::page","x86_64::memory::page_table","x86_64::memory::physical_address","x86_64::memory::virtual_address","index_mut","steps_between","replace_one","replace_zero","add_usize","intoiterator","memorytype","memoryobjectinfo","imageinfo","MemoryEntry","MemoryObjectInfo","ImageInfo","VideoInfo","BootInfo","MemoryType","PixelFormat","DescriptorTablePointer","SegmentSelector","PrivilegeLevel","CodeSegment","DataSegment","TssSegment","InterruptStackFrame","LocalApicRegister","LocalApic","SupportedFeatures","ModelInfo","Microarch","HypervisorVendor","SerialPort","FrameAllocator","TranslationResult","HierarchicalLevel","EntryFlags","PageTable","PhysicalAddress","VirtualAddress","FrameSize","HypervisorInfo","This is the entry point for the kernel on x86_64. It is…","kernel::x86_64","memoryobjectmappingerror","processor_uid","local_apic_id","interruptstackframe","kernel::x86_64::interrupts","buddy_allocator","kernel::x86_64::memory","memoryobject","commonpercpu","current_task_kernel_rsp","address_space","wrappedkernelobject","taskcreationerror","AddressSpace","MemoryObject","allocation","new_uninitialized","allocate_first_fit","allocerr","kernel::object","kernel::object::map","kernel::object::map::Entry","kernelobject","objectmap","memory_object","scheduler","running_task","scheduleerror","drop_to_userspace","map_memory_object","kernel::x86_64::acpi_handler","kernel::x86_64::address_space","kernel::x86_64::cpu","kernel::x86_64::logger","kernel::x86_64::memory::buddy_allocator","kernel::x86_64::memory_object","kernel::x86_64::per_cpu","kernel::x86_64::task","kernel::heap_allocator","kernel::object::common","kernel::per_cpu","kernel::scheduler","taskstate","assert_receiver_is_total_eq","holeinfo","allocate_n","map_physical_region","unmap_physical_region","acpiphysicalmapping","InterruptController","PhysicalMemoryManager","LockedPhysicalMemoryManager","BuddyAllocator","GuardedPerCpu","ContextSwitchFrame","TaskCreationError","Architecture","HoleAllocator","LockedHoleAllocator","Allocation","WrappedKernelObject","KernelObject","TaskState","MemoryObjectMappingError","CommonTask","ObjectMap","CommonPerCpu","Scheduler","ScheduleError","PebbleAcpiHandler","KernelLogger","generation","NotAnAddressSpace","early_log","request_system_object","my_address_space","num_pages","set_handler","kernel_stack_area_base","HEAP_START","switch_to","videoinfo"];
searchIndex["acpi"]={"doc":"A library for parsing ACPI tables. This crate can be used…","i":[[3,"HpetInfo","acpi","Information about the High Precision Event Timer",N,N],[3,R[204],E,"Describes a set of regions of physical memory used to…",N,N],[3,R[140],E,E,N,N],[12,R[612],E,E,0,N],[12,R[613],E,E,0,N],[12,"state",E,"The state of this processor. Always check that the…",0,N],[12,"is_ap",E,"Whether this processor is the Bootstrap Processor (BSP),…",0,N],[3,"AmlTable",E,E,N,N],[12,"address",E,"Physical address of the start of the AML stream (excluding…",1,N],[12,"length",E,"Length (in bytes) of the AML stream.",1,N],[3,"Acpi",E,E,N,N],[12,"acpi_revision",E,E,2,N],[12,"boot_processor",E,"The boot processor. Until you bring up any APs, this is…",2,N],[12,"application_processors",E,"Application processes. These are not brought up until you…",2,N],[12,"interrupt_model",E,"ACPI theoretically allows for more than one interrupt…",2,N],[12,"hpet",E,E,2,N],[12,"dsdt",E,"Info about the DSDT, if we find it.",2,N],[12,"ssdts",E,"Info about any SSDTs, if there are any.",2,N],[12,"pci_config_regions",E,"Info about the PCI-E configuration memory regions,…",2,N],[4,R[194],E,E,N,N],[13,"UnexpectedEntry",E,E,3,N],[13,"InterruptOverrideEntryHasInvalidBus",E,E,3,N],[13,"InvalidLocalNmiLine",E,E,3,N],[13,"NoLocalNmiLineSpecified",E,E,3,N],[13,"MpsIntiInvalidPolarity",E,E,3,N],[13,"MpsIntiInvalidTriggerMode",E,E,3,N],[4,R[195],E,E,N,N],[13,"RsdpIncorrectSignature",E,E,4,N],[13,"RsdpInvalidOemId",E,E,4,N],[13,"RsdpInvalidChecksum",E,E,4,N],[13,"NoValidRsdp",E,E,4,N],[13,"SdtInvalidSignature",E,E,4,N],[13,"SdtInvalidOemId",E,E,4,N],[13,"SdtInvalidTableId",E,E,4,N],[13,"SdtInvalidChecksum",E,E,4,N],[13,"InvalidMadt",E,E,4,N],[4,R[196],E,E,N,N],[13,"Disabled",E,"A processor in this state is unusable, and you must not…",5,N],[13,"WaitingForSipi",E,"A processor waiting for a SIPI (Startup Inter-processor…",5,N],[13,"Running",E,"A Running processor is currently brought up and running…",5,N],[5,"search_for_rsdp_bios",E,"This is the entry point of `acpi` if you have no…",N,[[["h"]],[["acpi"],[R[185]],[R[24],["acpi",R[185]]]]]],[5,"parse_rsdp",E,"This is the entry point of `acpi` if you have the physical…",N,[[["h"],[R[1]]],[["acpi"],[R[185]],[R[24],["acpi",R[185]]]]]],[5,"parse_rsdt",E,"This is the entry point of `acpi` if you already have the…",N,[[["h"],[R[1]],["u8"]],[["acpi"],[R[185]],[R[24],["acpi",R[185]]]]]],[0,"handler",E,E,N,N],[3,R[197],R[190],"Describes a physical mapping created by…",N,N],[12,"physical_start",E,E,6,N],[12,"virtual_start",E,E,6,N],[12,"region_length",E,E,6,N],[12,"mapped_length",E,E,6,N],[8,R[198],E,"An implementation of this trait must be provided to allow…",N,N],[10,R[657],E,"Given a starting physical address and a size, map a region…",7,[[["self"],[R[1]]],[R[186]]]],[10,R[658],E,"Unmap the given physical mapping. Safe because we consume…",7,[[["self"],[R[186]]]]],[0,"interrupt","acpi",E,N,N],[3,"IoApic",R[191],E,N,N],[12,"id",E,E,8,N],[12,"address",E,E,8,N],[12,"global_system_interrupt_base",E,E,8,N],[3,R[199],E,"Describes a difference in the mapping of an ISA interrupt…",N,N],[12,"isa_source",E,E,9,N],[12,R[187],E,E,9,N],[12,"polarity",E,E,9,N],[12,R[188],E,E,9,N],[3,R[200],E,"Describes a Global System Interrupt that should be enabled…",N,N],[12,R[187],E,E,10,N],[12,"polarity",E,E,10,N],[12,R[188],E,E,10,N],[4,R[201],E,E,N,N],[13,"Lint0",E,E,11,N],[13,"Lint1",E,E,11,N],[4,"Polarity",E,E,N,N],[13,R[189],E,E,12,N],[13,"ActiveHigh",E,E,12,N],[13,"ActiveLow",E,E,12,N],[4,R[202],E,E,N,N],[13,R[189],E,E,13,N],[13,"Edge",E,E,13,N],[13,"Level",E,E,13,N],[4,R[203],E,E,N,N],[13,"Pic",E,"This model is only chosen when a newer one can not be…",14,N],[13,"Apic",E,"Describes an interrupt controller based around the…",14,N],[12,"local_apic_address","acpi::interrupt::InterruptModel",E,14,N],[12,"io_apics",E,E,14,N],[12,"local_apic_nmi_line",E,E,14,N],[12,"interrupt_source_overrides",E,E,14,N],[12,"nmi_sources",E,E,14,N],[12,"also_has_legacy_pics",E,"If this field is set, you must remap and mask all the…",14,N],[11,R[529],"acpi","Get the physical address of the start of the configuration…",15,[[["self"],["u16"],["u8"]],[[R[20],["u64"]],["u64"]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[21],E,E,16,[[[U]],[R[24]]]],[11,"into",E,E,16,[[],[U]]],[11,R[22],E,E,16,[[],[R[24]]]],[11,R[26],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"]],[R[27]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[21],E,E,15,[[[U]],[R[24]]]],[11,"into",E,E,15,[[],[U]]],[11,R[22],E,E,15,[[],[R[24]]]],[11,R[26],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"]],[R[27]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,R[145],E,E,0,[[["self"]],[T]]],[11,R[144],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[21],E,E,2,[[[U]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[],[R[24]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[27]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[[U]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[],[R[24]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[27]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[21],E,E,5,[[[U]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,R[22],E,E,5,[[],[R[24]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"]],[R[27]]]],[11,R[145],E,E,5,[[["self"]],[T]]],[11,R[144],E,E,5,[[["self"],[T]]]],[11,"from",R[190],E,6,[[[T]],[T]]],[11,R[21],E,E,6,[[[U]],[R[24]]]],[11,"into",E,E,6,[[],[U]]],[11,R[22],E,E,6,[[],[R[24]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"]],[R[27]]]],[11,"from",R[191],E,8,[[[T]],[T]]],[11,R[21],E,E,8,[[[U]],[R[24]]]],[11,"into",E,E,8,[[],[U]]],[11,R[22],E,E,8,[[],[R[24]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"]],[R[27]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[21],E,E,9,[[[U]],[R[24]]]],[11,"into",E,E,9,[[],[U]]],[11,R[22],E,E,9,[[],[R[24]]]],[11,R[26],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"]],[R[27]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[21],E,E,10,[[[U]],[R[24]]]],[11,"into",E,E,10,[[],[U]]],[11,R[22],E,E,10,[[],[R[24]]]],[11,R[26],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"]],[R[27]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[21],E,E,11,[[[U]],[R[24]]]],[11,"into",E,E,11,[[],[U]]],[11,R[22],E,E,11,[[],[R[24]]]],[11,R[26],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"]],[R[27]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[21],E,E,12,[[[U]],[R[24]]]],[11,"into",E,E,12,[[],[U]]],[11,R[22],E,E,12,[[],[R[24]]]],[11,R[26],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"]],[R[27]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[21],E,E,13,[[[U]],[R[24]]]],[11,"into",E,E,13,[[],[U]]],[11,R[22],E,E,13,[[],[R[24]]]],[11,R[26],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"]],[R[27]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[21],E,E,14,[[[U]],[R[24]]]],[11,"into",E,E,14,[[],[U]]],[11,R[22],E,E,14,[[],[R[24]]]],[11,R[26],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"]],[R[27]]]],[11,"eq","acpi",E,5,[[["self"],[R[193]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[192]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[192]]],["bool"]]],[11,"deref",R[190],E,6,[[["self"]],[T]]],[11,"fmt","acpi",E,16,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[191],E,8,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,12,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,13,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,9,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,10,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,14,[[["self"],[R[29]]],[R[24]]]],[11,"fmt","acpi",E,3,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,15,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[24]]]],[11,"clone",E,E,5,[[["self"]],[R[193]]]],[11,"clone",E,E,0,[[["self"]],[R[192]]]]],"p":[[3,R[140]],[3,"AmlTable"],[3,"Acpi"],[4,R[194]],[4,R[195]],[4,R[196]],[3,R[197]],[8,R[198]],[3,"IoApic"],[3,R[199]],[3,R[200]],[4,R[201]],[4,"Polarity"],[4,R[202]],[4,R[203]],[3,R[204]],[3,"HpetInfo"]]};
searchIndex["aml"]={"doc":"`aml` is a pure-Rust AML (ACPI Machine Language) parser,…","i":[[3,R[156],"aml","A handle is used to refer to an AML value without actually…",N,N],[3,"AmlName",E,E,N,N],[3,R[150],E,E,N,N],[3,R[149],E,E,N,N],[12,R[133],E,E,0,N],[4,"AmlError",E,E,N,N],[13,"UnexpectedEndOfStream",E,E,1,N],[13,"UnexpectedByte",E,E,1,N],[13,"InvalidNameSeg",E,E,1,N],[13,"InvalidFieldFlags",E,E,1,N],[13,"IncompatibleValueConversion",E,E,1,N],[13,"UnterminatedStringConstant",E,E,1,N],[13,"InvalidStringConstant",E,E,1,N],[13,"InvalidRegionSpace",E,E,1,N],[13,"WrongParser",E,"Emitted by a parser when it's clear that the stream…",1,N],[13,"InvalidNormalizedName",E,"Produced when trying to normalize a path that does not…",1,N],[13,"RootHasNoParent",E,E,1,N],[13,R[157],E,"Produced when a path is given that does not point to an…",1,N],[13,"HandleDoesNotExist",E,E,1,N],[13,"NameCollision",E,"Produced when two values with the same name are added to…",1,N],[13,"InvalidArgumentAccess",E,"Produced when a method accesses an argument it does not…",1,N],[13,"InvalidLocalAccess",E,E,1,N],[13,"Return",E,"This is not a real error, but is used to propagate return…",1,N],[11,"new",E,E,2,[[],[R[133]]]],[11,"add",E,"Add a value to the namespace at the given path, which must…",2,[[["self"],[R[137]],[R[136]]],[[R[134]],[R[24],[R[134],R[135]]],[R[135]]]]],[11,"add_at_resolved_path",E,"Helper method for adding a value to the namespace at a…",2,[[["self"],[R[137]],[R[137]],[R[136]]],[[R[134]],[R[24],[R[134],R[135]]],[R[135]]]]],[11,"get",E,E,2,[[["self"],[R[134]]],[[R[24],[R[136],R[135]]],[R[136]],[R[135]]]]],[11,"get_by_path",E,E,2,[[["self"],[R[137]]],[[R[24],[R[136],R[135]]],[R[136]],[R[135]]]]],[11,"get_mut",E,E,2,[[["self"],[R[134]]],[[R[135]],[R[136]],[R[24],[R[136],R[135]]]]]],[11,"get_by_path_mut",E,E,2,[[["self"],[R[137]]],[[R[135]],[R[136]],[R[24],[R[136],R[135]]]]]],[11,"search",E,"Search for an object at the given path of the namespace,…",2,[[["self"],[R[137]]],[[R[134]],[R[24],[R[134],R[135]]],[R[135]]]]],[11,"root",E,E,3,[[],[R[137]]]],[11,"from_name_seg",E,E,3,[[["nameseg"]],[R[137]]]],[11,R[46],E,"Convert a string representation of an AML name into an…",3,[[["str"]],[[R[20],[R[137]]],[R[137]]]]],[11,"as_string",E,E,3,[[["self"]],["string"]]],[11,R[158],E,"An AML path is normal if it does not contain any prefix…",3,[[["self"]],["bool"]]],[11,"is_absolute",E,E,3,[[["self"]],["bool"]]],[11,"search_rules_apply",E,"Special rules apply when searching for certain paths…",3,[[["self"]],["bool"]]],[11,"normalize",E,"Normalize an AML path, resolving prefix chars. Returns…",3,[[],[[R[135]],[R[24],[R[137],R[135]]],[R[137]]]]],[11,"parent",E,"Get the parent of this `AmlName`. For example, the parent…",3,[[["self"]],[[R[135]],[R[24],[R[137],R[135]]],[R[137]]]]],[11,"resolve",E,"Resolve this path against a given scope, making it…",3,[[["self"],[R[137]]],[[R[135]],[R[24],[R[137],R[135]]],[R[137]]]]],[0,"value",E,E,N,N],[3,R[154],R[138],E,N,N],[3,R[155],E,E,N,N],[3,"Args",E,"A control method can take up to 7 arguments, each of which…",N,N],[12,"arg_0",E,E,4,N],[12,"arg_1",E,E,4,N],[12,"arg_2",E,E,4,N],[12,"arg_3",E,E,4,N],[12,"arg_4",E,E,4,N],[12,"arg_5",E,E,4,N],[12,"arg_6",E,E,4,N],[4,R[151],E,E,N,N],[13,"SystemMemory",E,E,5,N],[13,"SystemIo",E,E,5,N],[13,"PciConfig",E,E,5,N],[13,"EmbeddedControl",E,E,5,N],[13,"SMBus",E,E,5,N],[13,"SystemCmos",E,E,5,N],[13,"PciBarTarget",E,E,5,N],[13,"IPMI",E,E,5,N],[13,"GeneralPurposeIo",E,E,5,N],[13,"GenericSerialBus",E,E,5,N],[13,"OemDefined",E,E,5,N],[4,R[152],E,E,N,N],[13,"Any",E,E,6,N],[13,"Byte",E,E,6,N],[13,"Word",E,E,6,N],[13,"DWord",E,E,6,N],[13,"QWord",E,E,6,N],[13,"Buffer",E,E,6,N],[13,"Reserved",E,E,6,N],[4,R[153],E,E,N,N],[13,"Preserve",E,E,7,N],[13,"WriteAsOnes",E,E,7,N],[13,"WriteAsZeros",E,E,7,N],[4,"AmlType",E,E,N,N],[13,"Uninitialized",E,E,8,N],[13,"Buffer",E,E,8,N],[13,"BufferField",E,E,8,N],[13,"DdbHandle",E,"Handle to a definition block handle. Returned by the…",8,N],[13,"DebugObject",E,E,8,N],[13,"Device",E,E,8,N],[13,"Event",E,E,8,N],[13,"FieldUnit",E,E,8,N],[13,R[167],E,E,8,N],[13,"Method",E,E,8,N],[13,"Mutex",E,E,8,N],[13,"ObjReference",E,E,8,N],[13,"OpRegion",E,E,8,N],[13,"Package",E,E,8,N],[13,"PowerResource",E,E,8,N],[13,R[140],E,E,8,N],[13,"RawDataBuffer",E,E,8,N],[13,"String",E,E,8,N],[13,"ThermalZone",E,E,8,N],[4,"AmlValue",E,E,N,N],[13,"Boolean",E,E,9,N],[13,R[167],E,E,9,N],[13,"String",E,E,9,N],[13,"Name",E,E,9,N],[13,"OpRegion",E,E,9,N],[12,"region",R[139],E,9,N],[12,"offset",E,E,9,N],[12,"length",E,E,9,N],[13,"Field",R[138],E,9,N],[12,"region",R[139],E,9,N],[12,"flags",E,E,9,N],[12,"offset",E,E,9,N],[12,"length",E,E,9,N],[13,"Device",R[138],E,9,N],[13,"Method",E,E,9,N],[12,"flags",R[139],E,9,N],[12,"code",E,E,9,N],[13,"Buffer",R[138],E,9,N],[12,"bytes",R[139],E,9,N],[12,"size",E,E,9,N],[13,R[140],R[138],E,9,N],[12,"id",R[139],E,9,N],[12,"pblk_address",E,E,9,N],[12,"pblk_len",E,E,9,N],[13,"Mutex",R[138],E,9,N],[12,R[143],R[139],E,9,N],[13,"Package",R[138],E,9,N],[11,"new",E,E,10,[[["u8"]],[R[147]]]],[11,"access_type",E,E,10,[[["self"]],[[R[24],[R[141],R[135]]],[R[135]],[R[141]]]]],[11,"lock_rule",E,E,10,[[["self"]],["bool"]]],[11,"field_update_rule",E,E,10,[[["self"]],[[R[142]],[R[135]],[R[24],[R[142],R[135]]]]]],[11,"new",E,E,11,[[["u8"]],[R[148]]]],[11,"arg_count",E,E,11,[[["self"]],["u8"]]],[11,"serialize",E,E,11,[[["self"]],["bool"]]],[11,R[143],E,E,11,[[["self"]],["u8"]]],[11,"type_of",E,"Returns the AML type of this value. For `Name`, this…",9,[[["self"]],["amltype"]]],[11,"as_bool",E,E,9,[[["self"]],[[R[135]],[R[24],["bool",R[135]]],["bool"]]]],[11,"as_integer",E,E,9,[[["self"]],[[R[24],["u64",R[135]]],["u64"],[R[135]]]]],[11,"as_type",E,"Convert this value to a value of the same data, but with…",9,[[["self"],["amltype"]],[[R[24],[R[136],R[135]]],[R[136]],[R[135]]]]],[11,"arg",E,"Get an argument by its `ArgNum`.",4,[[["self"],["u8"]],[[R[24],[R[136],R[135]]],[R[136]],[R[135]]]]],[17,"AML_INTERPRETER_REVISION","aml","AML has a `RevisionOp` operator that returns the \"AML…",N,N],[11,"new",E,E,0,[[],["amlcontext"]]],[11,"parse_table",E,E,0,[[["self"]],[[R[24],[R[135]]],[R[135]]]]],[11,"invoke_method",E,"Invoke a method referred to by its path in the namespace,…",0,[[["self"],[R[137]],["args"]],[[R[24],[R[136],R[135]]],[R[136]],[R[135]]]]],[14,"choice",E,"Takes a number of parsers, and tries to apply each one to…",N,N],[14,"make_parser_concrete",E,"This encapsulates an unfortunate hack we sometimes need to…",N,N],[14,"try_with_context",E,"Helper macro for use within `map_with_context` as an…",N,N],[11,"from",E,E,12,[[[T]],[T]]],[11,R[21],E,E,12,[[[U]],[R[24]]]],[11,"into",E,E,12,[[],[U]]],[11,R[22],E,E,12,[[],[R[24]]]],[11,R[26],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"]],[R[27]]]],[11,R[145],E,E,12,[[["self"]],[T]]],[11,R[144],E,E,12,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,R[145],E,E,3,[[["self"]],[T]]],[11,R[144],E,E,3,[[["self"],[T]]]],[11,"to_string",E,E,3,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[21],E,E,2,[[[U]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[],[R[24]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[27]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,R[145],E,E,1,[[["self"]],[T]]],[11,R[144],E,E,1,[[["self"],[T]]]],[11,"from",R[138],E,10,[[[T]],[T]]],[11,R[21],E,E,10,[[[U]],[R[24]]]],[11,"into",E,E,10,[[],[U]]],[11,R[22],E,E,10,[[],[R[24]]]],[11,R[26],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"]],[R[27]]]],[11,R[145],E,E,10,[[["self"]],[T]]],[11,R[144],E,E,10,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[21],E,E,11,[[[U]],[R[24]]]],[11,"into",E,E,11,[[],[U]]],[11,R[22],E,E,11,[[],[R[24]]]],[11,R[26],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"]],[R[27]]]],[11,R[145],E,E,11,[[["self"]],[T]]],[11,R[144],E,E,11,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[[U]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[],[R[24]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[27]]]],[11,R[145],E,E,4,[[["self"]],[T]]],[11,R[144],E,E,4,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[21],E,E,5,[[[U]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,R[22],E,E,5,[[],[R[24]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"]],[R[27]]]],[11,R[145],E,E,5,[[["self"]],[T]]],[11,R[144],E,E,5,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[21],E,E,6,[[[U]],[R[24]]]],[11,"into",E,E,6,[[],[U]]],[11,R[22],E,E,6,[[],[R[24]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"]],[R[27]]]],[11,R[145],E,E,6,[[["self"]],[T]]],[11,R[144],E,E,6,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[21],E,E,7,[[[U]],[R[24]]]],[11,"into",E,E,7,[[],[U]]],[11,R[22],E,E,7,[[],[R[24]]]],[11,R[26],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"]],[R[27]]]],[11,R[145],E,E,7,[[["self"]],[T]]],[11,R[144],E,E,7,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[21],E,E,8,[[[U]],[R[24]]]],[11,"into",E,E,8,[[],[U]]],[11,R[22],E,E,8,[[],[R[24]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"]],[R[27]]]],[11,R[145],E,E,8,[[["self"]],[T]]],[11,R[144],E,E,8,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[21],E,E,9,[[[U]],[R[24]]]],[11,"into",E,E,9,[[],[U]]],[11,R[22],E,E,9,[[],[R[24]]]],[11,R[26],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"]],[R[27]]]],[11,R[145],E,E,9,[[["self"]],[T]]],[11,R[144],E,E,9,[[["self"],[T]]]],[11,"eq","aml",E,12,[[["self"],[R[134]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[134]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[137]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[137]]],["bool"]]],[11,"eq",R[138],E,5,[[["self"],[R[146]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[146]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[141]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[142]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[147]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[147]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[148]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[148]]],["bool"]]],[11,"eq",E,E,8,[[["self"],["amltype"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[136]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[136]]],["bool"]]],[11,"eq","aml",E,1,[[["self"],[R[135]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[135]]],["bool"]]],[11,"cmp",E,E,12,[[["self"],[R[134]]],[R[44]]]],[11,"cmp",E,E,3,[[["self"],[R[137]]],[R[44]]]],[11,R[45],E,E,12,[[["self"],[R[134]]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,12,[[["self"],[R[134]]],["bool"]]],[11,"le",E,E,12,[[["self"],[R[134]]],["bool"]]],[11,"gt",E,E,12,[[["self"],[R[134]]],["bool"]]],[11,"ge",E,E,12,[[["self"],[R[134]]],["bool"]]],[11,R[45],E,E,3,[[["self"],[R[137]]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,3,[[["self"],[R[137]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[137]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[137]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[137]]],["bool"]]],[11,"fmt",E,E,12,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[138],E,5,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,10,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,9,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[24]]]],[11,"fmt","aml",E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[24]]]],[11,"clone",E,E,12,[[["self"]],[R[134]]]],[11,"clone",E,E,3,[[["self"]],[R[137]]]],[11,"clone",R[138],E,5,[[["self"]],[R[146]]]],[11,"clone",E,E,6,[[["self"]],[R[141]]]],[11,"clone",E,E,7,[[["self"]],[R[142]]]],[11,"clone",E,E,10,[[["self"]],[R[147]]]],[11,"clone",E,E,11,[[["self"]],[R[148]]]],[11,"clone",E,E,8,[[["self"]],["amltype"]]],[11,"clone",E,E,9,[[["self"]],[R[136]]]],[11,"clone",E,E,4,[[["self"]],["args"]]],[11,"clone","aml",E,1,[[["self"]],[R[135]]]],[11,R[126],R[138],E,4,[[],["args"]]]],"p":[[3,R[149]],[4,"AmlError"],[3,R[150]],[3,"AmlName"],[3,"Args"],[4,R[151]],[4,R[152]],[4,R[153]],[4,"AmlType"],[4,"AmlValue"],[3,R[154]],[3,R[155]],[3,R[156]]]};
searchIndex["bit_field"]={"doc":"Provides the abstraction of a bit field, which allows for…","i":[[8,R[11],"bit_field","A generic trait which provides methods for extracting and…",N,N],[18,"BIT_LENGTH",E,"The number of bits in this bit field.",0,N],[10,R[3],E,R[4],0,[[["self"],[R[1]]],["bool"]]],[10,R[5],E,R[6],0,[[["self"],[R[1]],[R[13],[R[1]]]],["self"]]],[10,R[7],E,R[8],0,[[["self"],[R[1]],["bool"]],["self"]]],[10,R[9],E,R[10],0,[[["self"],[R[1]],[R[13],[R[1]]]],["self"]]],[8,R[12],E,E,N,N],[10,R[2],E,"Returns the length, eg number of bits, in this bit array.",1,[[["self"]],[R[1]]]],[10,R[3],E,R[4],1,[[["self"],[R[1]]],["bool"]]],[10,R[5],E,R[6],1,[[["self"],[R[1]],[R[13],[R[1]]]],[T]]],[10,R[7],E,R[8],1,[[["self"],[R[1]],["bool"]]]],[10,R[9],E,R[10],1,[[["self"],[R[1]],[T],[R[13],[R[1]]]]]]],"p":[[8,R[11]],[8,R[12]]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,R[14],R[14],"The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],E,N,N]],"p":[]};
searchIndex["kernel"]={"doc":"This module probably looks rather sparse! Check the root…","i":[[3,"Common","kernel","This is a collection of stuff we need to access from…",N,N],[12,"object_map",E,E,0,N],[12,"backup_framebuffer_object",E,"If the bootloader switched to a graphics mode that enables…",0,N],[5,"kmain",E,R[609],N,[[]]],[5,"panic",E,E,N,[[["panicinfo"]]]],[0,"x86_64",E,"This module defines the kernel entry-point on x86_64.",N,N],[3,"Arch",R[610],E,N,N],[12,"cpu_info",E,E,1,N],[12,"acpi_info",E,E,1,N],[12,"aml_context",E,E,1,N],[12,"physical_memory_manager",E,E,1,N],[12,"kernel_stack_bitmap",E,"Each bit in this bitmap corresponds to a slot for an…",1,N],[12,"kernel_page_table",E,E,1,N],[5,"kmain",E,R[609],N,[[]]],[5,"create_framebuffer",E,E,N,[[[R[692]]]]],[5,"load_task",E,E,N,[[[R[636]],[R[578]],["arch"]]]],[5,"check_support",E,"We rely on certain processor features to be present for…",N,[[["cpuinfo"]]]],[0,"acpi_handler",E,E,N,N],[3,R[680],R[641],E,N,N],[0,R[621],R[610],E,N,N],[3,R[624],R[642],E,N,N],[12,"table",E,E,2,N],[12,"state",E,E,2,N],[12,"memory_objects",E,E,2,N],[12,"stack_bitmap",E,"Bitmap of allocated stacks in this address space. Each bit…",2,N],[12,R[689],E,"This is the area of the kernel address space that this…",2,N],[3,"StackSet",E,"A pair of stacks - one for the kernel and one for…",N,N],[12,"kernel_slot_top",E,E,3,N],[12,"kernel_slot_bottom",E,E,3,N],[12,"kernel_stack_bottom",E,E,3,N],[12,"user_slot_top",E,E,3,N],[12,"user_slot_bottom",E,E,3,N],[12,"user_stack_bottom",E,E,3,N],[4,"State",E,E,N,N],[13,"NotActive",E,E,4,N],[13,"Active",E,E,4,N],[11,"new",E,E,2,[[["arch"]],["addressspace"]]],[11,R[640],E,E,2,[[["self"],[R[622],["arch"]],["arch"]],[[R[24],[R[611]]],[R[611]]]]],[11,R[691],E,E,2,[[["self"]]]],[11,"switch_away_from",E,"Tell the address space that we are switching to another…",2,[[["self"]]]],[11,"add_stack_set",E,E,2,[[["self"],[R[1]],["a"]],[[R[20],["stackset"]],["stackset"]]]],[0,"cpu",R[610],E,N,N],[3,"Cpu",R[643],E,N,N],[12,R[612],E,E,5,N],[12,R[613],E,E,5,N],[12,"is_ap",E,E,5,N],[11,"from_acpi",E,E,5,[[[R[192]]],["cpu"]]],[0,"interrupts",R[610],E,N,N],[3,R[660],R[615],E,N,N],[5,"local_apic_timer_handler",E,E,N,[[[R[614]]]]],[5,"spurious_handler",E,E,N,[[[R[614]]]]],[5,"syscall_handler",E,E,N,N],[0,"exception",E,"This module contains all the interrupt handlers used to…",N,N],[5,"nmi_handler","kernel::x86_64::interrupts::exception",E,N,[[[R[614]]]]],[5,"breakpoint_handler",E,E,N,[[[R[614]]]]],[5,"invalid_opcode_handler",E,E,N,[[[R[614]]]]],[5,"general_protection_fault_handler",E,E,N,[[[R[614]],["u64"]]]],[5,"page_fault_handler",E,E,N,[[[R[614]],["u64"]]]],[5,"double_fault_handler",E,E,N,[[[R[614]],["u64"]]]],[7,"IDT",R[615],"This should only be accessed directly by the bootstrap…",N,N],[17,"LEGACY_PIC_VECTOR",E,E,N,N],[17,"FREE_VECTORS_START",E,E,N,N],[17,"APIC_TIMER_VECTOR",E,E,N,N],[17,"APIC_SPURIOUS_VECTOR",E,E,N,N],[11,"init",E,E,6,[[["arch"]],["interruptcontroller"]]],[11,"enable_local_timer",E,"Enable the per-CPU timer on the local APIC, so that it…",6,[[["self"],["duration"],["arch"]]]],[11,"install_exception_handlers",E,E,6,[[]]],[11,"install_syscall_handler",E,E,6,[[]]],[0,"logger",R[610],E,N,N],[3,R[681],R[644],"This handles calls to the log macros throughout the…",N,N],[7,"COM1",E,"The COM1 serial port, accessed through the UART 16550…",N,N],[0,"memory",R[610],"This module contains the physical memory manager Pebble…",N,N],[3,R[661],R[617],"The main physical memory manager. It tracks all…",N,N],[12,R[616],E,"A buddy allocator used to track all conventional memory.…",7,N],[3,R[662],E,E,N,N],[12,"0",E,E,8,N],[0,R[616],E,"This module implements a buddy allocator, an efficient…",N,N],[3,R[663],R[645],E,N,N],[12,"bins",E,"The bins of free blocks, where bin `i` contains blocks of…",9,N],[11,"new",E,"Create a new `BuddyAllocator`, with a maximum block size…",9,[[[R[1]]],["buddyallocator"]]],[11,"add_range",E,"Add a range of `Frame`s to this allocator, marking them…",9,[[["self"],["range",["frame"]],["frame"]]]],[11,R[656],E,"Allocate (at least) `n` contiguous frames from this…",9,[[["self"],[R[1]]],[["frame"],[R[20],["frame"]]]]],[11,"free_n",E,"Free the given block (starting at `start` and of size `n`…",9,[[["self"],["frame"],[R[1]]]]],[11,"allocate_block",E,"Tries to allocate a block of the given order. If no blocks…",9,[[["self"],[R[1]]],[["frame"],[R[20],["frame"]]]]],[11,"buddy_of",E,"Finds the starting frame of the block that is the buddy of…",9,[[["frame"],[R[1]]],["frame"]]],[11,"max_order",E,"Get the order of the largest block this allocator can track.",9,[[["self"]],[R[1]]]],[0,"userspace_map",R[617],E,N,N],[17,"KERNEL_SPACE_START","kernel::x86_64::memory::userspace_map",E,N,N],[17,"KERNEL_SPACE_END",E,E,N,N],[17,"INITIAL_STACK_SIZE",E,"The initial size of a task's user and kernel stacks. Must…",N,N],[17,"MAX_STACK_SIZE",E,"The maximum size of each task's usermode stack. This is…",N,N],[17,"MEMORY_OBJECTS_START",E,E,N,N],[17,"RECEIVE_BUFFERS_START",E,E,N,N],[17,"SEND_BUFFERS_START",E,E,N,N],[17,"USER_STACKS_START",E,E,N,N],[17,R[690],E,E,N,N],[17,"IMAGE_START",E,E,N,N],[17,"BUDDY_ALLOCATOR_MAX_ORDER",R[617],E,N,N],[11,"new",E,E,8,[[["bootinfo"]],["lockedphysicalmemorymanager"]]],[0,R[635],R[610],E,N,N],[3,R[625],R[646],E,N,N],[12,R[551],E,E,10,N],[12,R[529],E,E,10,N],[12,R[687],E,"Number of 4KiB pages this memory object covers.",10,N],[12,"flags",E,E,10,N],[11,"new",E,E,10,[[[R[1]],[R[540]],[R[539]],[R[544]]],[R[618]]]],[11,"from_boot_info",E,E,10,[[[R[577]]],[R[618]]]],[0,"per_cpu",R[610],E,N,N],[3,"PerCpu",R[647],E,N,N],[12,"_self_pointer",E,"The first field of this structure must be a pointer to…",11,N],[12,"_pin",E,"This structure must be pinned in memory for two reasons: -…",11,N],[12,R[620],E,"This holds the kernel `rsp` of the current task, and makes…",11,N],[12,"common",E,E,11,N],[12,"tss",E,E,11,N],[12,"tss_selector",E,E,11,N],[3,R[664],E,"This guards a `PerCpu` instance, preventing it from being…",N,N],[12,"0",E,E,12,N],[5,"common_per_cpu_data",E,"Access the common per-CPU data. This is exported from the…",N,[[],[R[619]]]],[5,"common_per_cpu_data_mut",E,"Get a mutable reference to the common per-CPU data.…",N,[[],[R[619]]]],[5,"per_cpu_data",E,"Access the per-CPU data. Unsafe because this must not be…",N,[[],[["percpu"],["pin",["percpu"]]]]],[5,"per_cpu_data_mut",E,"Get a mutable reference to the per-cpu data. This is…",N,[[],[["pin",["percpu"]],["percpu"]]]],[11,"tss",E,E,11,[[["self"],["pin"]],[["tss"],["pin",["tss"]]]]],[11,"tss_mut",E,E,11,[[["pin"],["self"]],[["tss"],["pin",["tss"]]]]],[11,R[620],E,E,11,[[["self"],["pin"]],[R[539]]]],[11,"current_task_kernel_rsp_mut",E,E,11,[[["pin"],["self"]],[["pin",[R[539]]],[R[539]]]]],[11,"common",E,E,11,[[["self"],["pin"]],[R[619]]]],[11,"common_mut",E,E,11,[[["pin"],["self"]],[R[619]]]],[11,"new",E,"Create a new `GuardedPerCpu`, but does not install the…",12,[[]]],[11,"install",E,E,12,[[["self"]]]],[0,"task",R[610],E,N,N],[3,R[665],R[648],"This is the layout of the stack that we expect to be…",N,N],[12,"r15",E,E,13,N],[12,"r14",E,E,13,N],[12,"r13",E,E,13,N],[12,"r12",E,E,13,N],[12,"rbp",E,E,13,N],[12,"rbx",E,E,13,N],[12,"return_address",E,"When we construct an initial stack frame, we set this to…",13,N],[3,"Task",E,"This is the representation of a task on x86_64. It's…",N,N],[12,"name",E,E,14,N],[12,R[621],E,E,14,N],[12,"state",E,E,14,N],[12,"capabilities",E,E,14,N],[12,"user_stack_top",E,E,14,N],[12,"kernel_stack_top",E,E,14,N],[12,"stack_size",E,E,14,N],[12,"kernel_stack_pointer",E,E,14,N],[4,R[666],E,E,N,N],[13,R[683],E,"The kernel object that should be the AddressSpace that…",15,N],[13,"NotEnoughStackSlots",E,"The AddressSpace has run out of stack slots",15,N],[13,"InvalidCapabilityEncoding",E,"The task image has an invalid capability encoding",15,N],[13,"InitialNameTooLong",E,"Initial tasks (from images loaded by the bootloader) can…",15,N],[13,"InvalidName",E,"The task's name is not valid UTF-8.",15,N],[5,"context_switch",E,"Perform a context-switch between the currently running…",N,[[[R[622],["arch"]],["arch"]]]],[5,"drop_to_usermode",E,"Drop into usermode into the given task. This permanently…",N,[[[R[622],["arch"]],["arch"]]]],[5,"decode_capabilities",E,"Decode a capability stream (as found in a task's image)…",N,[[],[[R[24],["vec",R[623]]],[R[623]],["vec",[R[60]]]]]],[5,"task_entry_trampoline",E,E,N,N],[5,"do_context_switch",E,"Do the actual context switch: save the context of the old…",N,N],[11,"from_image_info",E,"Create a new task in a given address space, which will…",14,[[[R[578]],["arch"],[R[622],["arch"]],["arch"]],[[R[24],["task",R[623]]],["task"],[R[623]]]]],[11,"initialize_kernel_stack",E,"Before a task can be started, either by it being scheduled…",14,[[["self"],[R[539]]]]],[7,"GDT",R[610],E,N,N],[7,"ARCH",E,E,N,N],[0,"arch","kernel",E,N,N],[8,R[667],"kernel::arch","Trait that is implemented by a type in each architecture…",N,N],[16,R[624],E,E,16,N],[16,"Task",E,E,16,N],[16,R[625],E,E,16,N],[10,R[639],E,"Performs the initial kernel -> userspace transistion.…",16,[[["self"],[R[622]]]]],[0,"heap_allocator","kernel",E,N,N],[3,R[668],R[649],E,N,N],[12,"heap_bottom",E,E,17,N],[12,"heap_size",E,E,17,N],[12,"holes",E,E,17,N],[3,R[669],E,E,N,N],[12,"0",E,E,18,N],[3,"HoleInfo",E,E,N,N],[12,"addr",E,E,19,N],[12,"size",E,E,19,N],[3,"Hole",E,E,N,N],[12,"size",E,E,20,N],[12,"next",E,E,20,N],[3,"HoleList",E,E,N,N],[12,"first",E,E,21,N],[3,R[670],E,E,N,N],[12,"info",E,E,22,N],[12,"front_padding",E,E,22,N],[12,"back_padding",E,E,22,N],[5,"split_hole",E,"Split the given hole into…",N,[[[R[655]],["layout"]],[[R[20],[R[626]]],[R[626]]]]],[5,R[628],E,E,N,[[["hole"],["layout"]],[[R[626]],[R[629]],[R[24],[R[626],R[629]]]]]],[5,"free",E,"Walk the list, starting at `hole` and free the allocation…",N,[[["hole"],[R[539]],[R[1]]]]],[5,"handle_alloc_error",E,E,N,[[["layout"]]]],[11,R[627],E,"Create a new, uninitialized `HoleAllocator`. Before heap…",17,[[],["holeallocator"]]],[11,"init",E,"Initialise the `HoleAllocator`. This should only be called…",17,[[["self"],[R[539]]]]],[11,R[627],E,E,18,[[],["lockedholeallocator"]]],[11,"info",E,E,20,[[["self"]],[R[655]]]],[11,"new",E,"Create a new `HoleList` that contains the given hole.…",21,[[[R[539]],[R[1]]],["holelist"]]],[11,R[628],E,"Search for a big enough hole for the given `Layout` with…",21,[[["self"],["layout"]],[[R[24],[R[629]]],[R[629]]]]],[11,"free",E,"Free an allocation defined by `ptr` and `layout`. Unsafe…",21,[[["self"],["layout"]]]],[11,"get_min_size",E,E,21,[[],[R[1]]]],[0,"object","kernel",E,N,N],[3,R[671],R[630],E,N,N],[12,"id",E,E,23,N],[12,"object",E,E,23,N],[4,R[672],E,E,N,N],[13,R[624],E,E,24,N],[13,R[625],E,E,24,N],[13,"Task",E,E,24,N],[0,"common",E,"This module contains types that can be re-used between…",N,N],[4,R[673],R[650],E,N,N],[13,"Ready",E,E,25,N],[13,"Running",E,E,25,N],[4,R[674],E,"These are the errors that can occur when trying to map a…",N,N],[13,"SpaceAlreadyOccupied",E,"All or part of the portion of virtual address space is…",26,N],[8,R[675],E,"Implemented by each of the structures that provide the…",N,N],[10,"state",E,E,27,[[["self"]],[R[653]]]],[10,"name",E,E,27,[[["self"]],["str"]]],[0,"map",R[630],E,N,N],[3,R[676],R[631],"Stores all the `KernelObject`s against their generational…",N,N],[12,"entries",E,E,28,N],[12,"free_list_head",E,E,28,N],[4,"Entry",E,E,N,N],[13,"Free",E,E,29,N],[12,"next_generation",R[632],E,29,N],[12,"next_free",E,E,29,N],[13,"Occupied",R[631],E,29,N],[12,R[682],R[632],E,29,N],[12,"object",E,E,29,N],[17,"INITIAL_OBJECT_CAPACITY",R[631],E,N,N],[11,"new",E,E,28,[[[R[1]]],[R[634]]]],[11,"insert",E,"Insert a new object into the map, assigning it a…",28,[[["self"],["arc",[R[633]]],[R[633]]],[R[54]]]],[11,"insert_into",E,E,28,[[["self"],[R[1]],[R[633]],["arc",[R[633]]]],[R[54]]]],[11,"reserve",E,E,28,[[["self"],[R[1]]]]],[11,"get",E,E,28,[[["self"],[R[54]]],[[R[622]],[R[20],[R[622]]]]]],[11,"remove",E,E,28,[[["self"],[R[54]]],[[R[20],["arc"]],["arc",[R[633]]]]]],[11,R[545],E,E,28,[[["self"],[R[54]]],["bool"]]],[11,"len",E,E,28,[[["self"]],[R[1]]]],[11,"add_to_map",R[630],E,24,[[[R[634]]],[R[622]]]],[11,R[621],E,E,24,[[["self"]],[[R[20],["rwlock"]],["rwlock"]]]],[11,R[635],E,E,24,[[["self"]],[[R[20],["rwlock"]],["rwlock"]]]],[11,"task",E,E,24,[[["self"]],[[R[20],["rwlock"]],["rwlock"]]]],[0,"per_cpu","kernel",E,N,N],[3,R[677],R[651],"Per-cpu data that needs to be accessed from the…",N,N],[12,R[636],E,E,30,N],[11,"new",E,E,30,[[],[R[619]]]],[11,R[637],E,"Helper method to get the currently running task. Panics if…",30,[[["self"]],[R[622]]]],[0,R[636],"kernel",E,N,N],[3,R[678],R[652],E,N,N],[12,R[637],E,E,31,N],[12,"ready_queue",E,"List of Tasks ready to be scheduled. Every kernel object…",31,N],[4,R[679],E,E,N,N],[13,"KernelObjectNotATask",E,"Returned by `add_task` if you try to schedule a kernel…",32,N],[11,"new",E,E,31,[[],[R[636]]]],[11,"add_task",E,E,31,[[["self"],[R[622],["arch"]],["arch"]],[[R[24],[R[638]]],[R[638]]]]],[11,R[639],E,"Performs the first transistion from the kernel into…",31,[[["self"],["arch"]]]],[11,"switch_to_next",E,"Switch to the next scheduled task. This is called when a…",31,[[["self"]]]],[0,"syscall","kernel",E,N,N],[5,"rust_syscall_handler","kernel::syscall","This is the architecture-independent syscall handler. It…",N,[[[R[1]]],[R[1]]]],[5,"yield_syscall",E,E,N,[[],[R[1]]]],[5,R[684],E,E,N,[[[R[1]]],[R[1]]]],[5,R[685],E,E,N,[[[R[1]]],[R[1]]]],[5,R[686],E,E,N,[[],[R[1]]]],[5,R[640],E,E,N,[[[R[1]]],[R[1]]]],[7,"ALLOCATOR","kernel",E,N,N],[7,"COMMON",E,"We need to make various bits of data accessible on a…",N,N],[17,"_",E,E,N,N],[11,"new",E,E,0,[[],["common"]]],[14,R[688],E,E,N,N],[14,"set_handler_with_error_code",E,E,N,N],[14,"save_regs",E,"Macro to save the scratch registers. In System-V, `rbx`,…",N,N],[14,"restore_regs",E,"Restore the saved scratch registers.",N,N],[14,"wrap_handler",E,E,N,N],[14,"wrap_handler_with_error_code",E,E,N,N],[14,"kernel_object_table",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",R[610],E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"from",R[641],E,33,[[[T]],[T]]],[11,R[21],E,E,33,[[[U]],[R[24]]]],[11,"into",E,E,33,[[],[U]]],[11,R[22],E,E,33,[[],[R[24]]]],[11,R[26],E,E,33,[[["self"]],[T]]],[11,R[23],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"]],[R[27]]]],[11,"from",R[642],E,2,[[[T]],[T]]],[11,R[21],E,E,2,[[[U]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[],[R[24]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[27]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[[U]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[],[R[24]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[27]]]],[11,"from",R[643],E,5,[[[T]],[T]]],[11,R[21],E,E,5,[[[U]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,R[22],E,E,5,[[],[R[24]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"]],[R[27]]]],[11,"from",R[615],E,6,[[[T]],[T]]],[11,R[21],E,E,6,[[[U]],[R[24]]]],[11,"into",E,E,6,[[],[U]]],[11,R[22],E,E,6,[[],[R[24]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"]],[R[27]]]],[11,"from",R[644],E,34,[[[T]],[T]]],[11,R[21],E,E,34,[[[U]],[R[24]]]],[11,"into",E,E,34,[[],[U]]],[11,R[22],E,E,34,[[],[R[24]]]],[11,R[26],E,E,34,[[["self"]],[T]]],[11,R[23],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"]],[R[27]]]],[11,"from",R[617],E,7,[[[T]],[T]]],[11,R[21],E,E,7,[[[U]],[R[24]]]],[11,"into",E,E,7,[[],[U]]],[11,R[22],E,E,7,[[],[R[24]]]],[11,R[26],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"]],[R[27]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[21],E,E,8,[[[U]],[R[24]]]],[11,"into",E,E,8,[[],[U]]],[11,R[22],E,E,8,[[],[R[24]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"]],[R[27]]]],[11,"from",R[645],E,9,[[[T]],[T]]],[11,R[21],E,E,9,[[[U]],[R[24]]]],[11,"into",E,E,9,[[],[U]]],[11,R[22],E,E,9,[[],[R[24]]]],[11,R[26],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"]],[R[27]]]],[11,"from",R[646],E,10,[[[T]],[T]]],[11,R[21],E,E,10,[[[U]],[R[24]]]],[11,"into",E,E,10,[[],[U]]],[11,R[22],E,E,10,[[],[R[24]]]],[11,R[26],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"]],[R[27]]]],[11,"from",R[647],E,11,[[[T]],[T]]],[11,R[21],E,E,11,[[[U]],[R[24]]]],[11,"into",E,E,11,[[],[U]]],[11,R[22],E,E,11,[[],[R[24]]]],[11,R[26],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"]],[R[27]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[21],E,E,12,[[[U]],[R[24]]]],[11,"into",E,E,12,[[],[U]]],[11,R[22],E,E,12,[[],[R[24]]]],[11,R[26],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"]],[R[27]]]],[11,"from",R[648],E,13,[[[T]],[T]]],[11,R[21],E,E,13,[[[U]],[R[24]]]],[11,"into",E,E,13,[[],[U]]],[11,R[22],E,E,13,[[],[R[24]]]],[11,R[26],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"]],[R[27]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[21],E,E,14,[[[U]],[R[24]]]],[11,"into",E,E,14,[[],[U]]],[11,R[22],E,E,14,[[],[R[24]]]],[11,R[26],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"]],[R[27]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[21],E,E,15,[[[U]],[R[24]]]],[11,"into",E,E,15,[[],[U]]],[11,R[22],E,E,15,[[],[R[24]]]],[11,R[26],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"]],[R[27]]]],[11,"from",R[649],E,17,[[[T]],[T]]],[11,R[21],E,E,17,[[[U]],[R[24]]]],[11,"into",E,E,17,[[],[U]]],[11,R[22],E,E,17,[[],[R[24]]]],[11,R[26],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"]],[R[27]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[21],E,E,18,[[[U]],[R[24]]]],[11,"into",E,E,18,[[],[U]]],[11,R[22],E,E,18,[[],[R[24]]]],[11,R[26],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"]],[R[27]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[21],E,E,19,[[[U]],[R[24]]]],[11,"into",E,E,19,[[],[U]]],[11,R[22],E,E,19,[[],[R[24]]]],[11,R[26],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"]],[R[27]]]],[11,R[145],E,E,19,[[["self"]],[T]]],[11,R[144],E,E,19,[[["self"],[T]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[21],E,E,20,[[[U]],[R[24]]]],[11,"into",E,E,20,[[],[U]]],[11,R[22],E,E,20,[[],[R[24]]]],[11,R[26],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"]],[R[27]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[21],E,E,21,[[[U]],[R[24]]]],[11,"into",E,E,21,[[],[U]]],[11,R[22],E,E,21,[[],[R[24]]]],[11,R[26],E,E,21,[[["self"]],[T]]],[11,R[23],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"]],[R[27]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[21],E,E,22,[[[U]],[R[24]]]],[11,"into",E,E,22,[[],[U]]],[11,R[22],E,E,22,[[],[R[24]]]],[11,R[26],E,E,22,[[["self"]],[T]]],[11,R[23],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"]],[R[27]]]],[11,R[145],E,E,22,[[["self"]],[T]]],[11,R[144],E,E,22,[[["self"],[T]]]],[11,"from",R[630],E,23,[[[T]],[T]]],[11,R[21],E,E,23,[[[U]],[R[24]]]],[11,"into",E,E,23,[[],[U]]],[11,R[22],E,E,23,[[],[R[24]]]],[11,R[26],E,E,23,[[["self"]],[T]]],[11,R[23],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"]],[R[27]]]],[11,R[145],E,E,23,[[["self"]],[T]]],[11,R[144],E,E,23,[[["self"],[T]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[21],E,E,24,[[[U]],[R[24]]]],[11,"into",E,E,24,[[],[U]]],[11,R[22],E,E,24,[[],[R[24]]]],[11,R[26],E,E,24,[[["self"]],[T]]],[11,R[23],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"]],[R[27]]]],[11,"from",R[650],E,25,[[[T]],[T]]],[11,R[21],E,E,25,[[[U]],[R[24]]]],[11,"into",E,E,25,[[],[U]]],[11,R[22],E,E,25,[[],[R[24]]]],[11,R[26],E,E,25,[[["self"]],[T]]],[11,R[23],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"]],[R[27]]]],[11,R[145],E,E,25,[[["self"]],[T]]],[11,R[144],E,E,25,[[["self"],[T]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[21],E,E,26,[[[U]],[R[24]]]],[11,"into",E,E,26,[[],[U]]],[11,R[22],E,E,26,[[],[R[24]]]],[11,R[26],E,E,26,[[["self"]],[T]]],[11,R[23],E,E,26,[[["self"]],[T]]],[11,R[25],E,E,26,[[["self"]],[R[27]]]],[11,R[145],E,E,26,[[["self"]],[T]]],[11,R[144],E,E,26,[[["self"],[T]]]],[11,"from",R[631],E,28,[[[T]],[T]]],[11,R[21],E,E,28,[[[U]],[R[24]]]],[11,"into",E,E,28,[[],[U]]],[11,R[22],E,E,28,[[],[R[24]]]],[11,R[26],E,E,28,[[["self"]],[T]]],[11,R[23],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"]],[R[27]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[21],E,E,29,[[[U]],[R[24]]]],[11,"into",E,E,29,[[],[U]]],[11,R[22],E,E,29,[[],[R[24]]]],[11,R[26],E,E,29,[[["self"]],[T]]],[11,R[23],E,E,29,[[["self"]],[T]]],[11,R[25],E,E,29,[[["self"]],[R[27]]]],[11,"from",R[651],E,30,[[[T]],[T]]],[11,R[21],E,E,30,[[[U]],[R[24]]]],[11,"into",E,E,30,[[],[U]]],[11,R[22],E,E,30,[[],[R[24]]]],[11,R[26],E,E,30,[[["self"]],[T]]],[11,R[23],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"]],[R[27]]]],[11,"from",R[652],E,31,[[[T]],[T]]],[11,R[21],E,E,31,[[[U]],[R[24]]]],[11,"into",E,E,31,[[],[U]]],[11,R[22],E,E,31,[[],[R[24]]]],[11,R[26],E,E,31,[[["self"]],[T]]],[11,R[23],E,E,31,[[["self"]],[T]]],[11,R[25],E,E,31,[[["self"]],[R[27]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[21],E,E,32,[[[U]],[R[24]]]],[11,"into",E,E,32,[[],[U]]],[11,R[22],E,E,32,[[],[R[24]]]],[11,R[26],E,E,32,[[["self"]],[T]]],[11,R[23],E,E,32,[[["self"]],[T]]],[11,R[25],E,E,32,[[["self"]],[R[27]]]],[11,R[639],R[610],E,1,[[["self"],[R[622],["arch"]],["arch"]]]],[11,"state",R[648],E,14,[[["self"]],[R[653]]]],[11,"name",E,E,14,[[["self"]],["str"]]],[11,"eq",R[642],E,4,[[["self"],["state"]],["bool"]]],[11,"eq",R[650],E,25,[[["self"],[R[653]]],["bool"]]],[11,R[654],R[642],E,4,[[["self"]]]],[11,R[654],R[650],E,25,[[["self"]]]],[11,"deref",R[649],E,18,[[["self"]],["mutex"]]],[11,"drop",R[647],E,12,[[["self"]]]],[11,"drop",R[610],E,1,[[["self"]]]],[11,"fmt",R[642],E,4,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[647],E,11,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[648],E,13,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,15,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[649],E,19,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,22,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[650],E,25,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,26,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[630],E,23,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,24,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[651],E,30,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[652],E,32,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,31,[[["self"],[R[29]]],[R[24]]]],[11,"clone",R[649],E,19,[[["self"]],[R[655]]]],[11,"clone",E,E,22,[[["self"]],[R[626]]]],[11,"clone",R[650],E,25,[[["self"]],[R[653]]]],[11,"clone",E,E,26,[[["self"]],[R[611]]]],[11,"clone",R[630],E,23,[[["self"]],["self"]]],[11,R[126],R[648],E,13,[[],["contextswitchframe"]]],[11,"alloc",R[649],E,18,[[["self"],["layout"]]]],[11,"dealloc",E,E,18,[[["self"],["layout"]]]],[11,R[656],R[617],E,8,[[["self"],[R[1]]],[["range",["frame"]],["frame"]]]],[11,"free_n",E,E,8,[[["self"],["frame"],[R[1]]]]],[11,"enabled",R[644],E,34,[[["self"],[R[35]]],["bool"]]],[11,"log",E,E,34,[[["self"],["record"]]]],[11,"flush",E,E,34,[[["self"]]]],[11,R[657],R[641],E,33,[[["self"],[R[1]]],[R[659]]]],[11,R[658],E,E,33,[[["self"],[R[659]]]]]],"p":[[3,"Common"],[3,"Arch"],[3,R[624]],[3,"StackSet"],[4,"State"],[3,"Cpu"],[3,R[660]],[3,R[661]],[3,R[662]],[3,R[663]],[3,R[625]],[3,"PerCpu"],[3,R[664]],[3,R[665]],[3,"Task"],[4,R[666]],[8,R[667]],[3,R[668]],[3,R[669]],[3,"HoleInfo"],[3,"Hole"],[3,"HoleList"],[3,R[670]],[3,R[671]],[4,R[672]],[4,R[673]],[4,R[674]],[8,R[675]],[3,R[676]],[4,"Entry"],[3,R[677]],[3,R[678]],[4,R[679]],[3,R[680]],[3,R[681]]]};
searchIndex["libpebble"]={"doc":E,"i":[[0,"caps",R[53],E,N,N],[4,R[62],R[58],E,N,N],[13,"CreateAddressSpace",E,E,0,N],[13,"CreateMemoryObject",E,E,0,N],[13,"CreateTask",E,E,0,N],[13,"X86_64AccessIoPort",E,E,0,N],[13,"AccessBackupFramebuffer",E,E,0,N],[13,"EarlyLogging",E,E,0,N],[0,"object",R[53],E,N,N],[3,R[63],R[59],E,N,N],[12,"index",E,E,1,N],[12,R[682],E,E,1,N],[6,"Index",E,E,N,N],[6,"Generation",E,E,N,N],[11,"from_syscall_repr",E,"Used to convert between the form the kernel represents…",1,[[[R[1]]],[R[54]]]],[11,"to_syscall_repr",E,"Convert this `KernelObjectId` to the form used in the…",1,[[["self"]],[R[1]]]],[0,"syscall",R[53],E,N,N],[4,R[64],R[57],E,N,N],[13,"BackupFramebuffer",E,E,2,N],[4,R[65],E,E,N,N],[13,R[157],E,"The requested object ID does point to a valid system…",3,N],[13,"NotAValidId",E,"The requested object ID does not correspond to a valid…",3,N],[13,"AccessDenied",E,"The requested object ID is valid, but the requesting task…",3,N],[4,R[66],E,E,N,N],[13,"AddressRangeNotFree",E,"The MemoryObject could not be mapped, because there is…",4,N],[13,"AccessDeniedToMemoryObject",E,E,4,N],[13,"AccessDeniedToAddressSpace",E,E,4,N],[13,"NotAMemoryObject",E,E,4,N],[13,R[683],E,E,4,N],[5,"yield_to_kernel",E,E,N,[[]]],[5,R[684],E,E,N,[[["str"]],[R[24]]]],[5,R[685],E,E,N,[[[R[61]]],[[R[54]],[R[24],[R[54],R[55]]],[R[55]]]]],[5,R[686],E,E,N,[[],[R[54]]]],[5,R[640],E,E,N,[[[R[54]]],[[R[56]],[R[24],[R[56]]]]]],[0,"raw_x86_64",E,E,N,N],[5,"syscall0","libpebble::syscall::raw_x86_64",E,N,[[[R[1]]],[R[1]]]],[5,"syscall1",E,E,N,[[[R[1]]],[R[1]]]],[5,"syscall2",E,E,N,[[[R[1]]],[R[1]]]],[5,"syscall3",E,E,N,[[[R[1]]],[R[1]]]],[5,"syscall4",E,E,N,[[[R[1]]],[R[1]]]],[5,"syscall5",E,E,N,[[[R[1]]],[R[1]]]],[17,"SYSCALL_YIELD",R[57],E,N,N],[17,"SYSCALL_EARLY_LOG",E,E,N,N],[17,"SYSCALL_REQUEST_SYSTEM_OBJECT",E,E,N,N],[17,"SYSCALL_MY_ADDRESS_SPACE",E,E,N,N],[17,"SYSCALL_MAP_MEMORY_OBJECT",E,E,N,N],[11,"from",R[58],E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",R[59],E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"from",R[57],E,2,[[[T]],[T]]],[11,R[21],E,E,2,[[[U]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[],[R[24]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[27]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[[U]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[],[R[24]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[27]]]],[11,"eq",R[58],E,0,[[["self"],[R[60]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[60]]],["bool"]]],[11,"eq",R[59],E,1,[[["self"],[R[54]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[54]]],["bool"]]],[11,"fmt",R[58],E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[59],E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[57],E,2,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[24]]]],[11,"clone",R[58],E,0,[[["self"]],[R[60]]]],[11,"clone",R[59],E,1,[[["self"]],[R[54]]]],[11,"clone",R[57],E,2,[[["self"]],[R[61]]]],[11,"clone",E,E,3,[[["self"]],[R[55]]]],[11,"clone",E,E,4,[[["self"]],[R[56]]]]],"p":[[4,R[62]],[3,R[63]],[4,R[64]],[4,R[65]],[4,R[66]]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,R[48],E,"Builder for `Record`.",N,N],[3,R[49],E,"Metadata about a log message.",N,N],[3,R[50],E,"Builder for `Metadata`.",N,N],[3,R[51],E,"The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,R[52],E,"The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level",E,"An enum representing the available verbosity levels of the…",N,N],[13,"Error",E,"The \"error\" level.",0,N],[13,"Warn",E,"The \"warn\" level.",0,N],[13,"Info",E,"The \"info\" level.",0,N],[13,"Debug",E,"The \"debug\" level.",0,N],[13,"Trace",E,"The \"trace\" level.",0,N],[4,R[47],E,"An enum representing the available verbosity level filters…",N,N],[13,"Off",E,"A level lower than all log levels.",1,N],[13,"Error",E,"Corresponds to the `Error` log level.",1,N],[13,"Warn",E,"Corresponds to the `Warn` log level.",1,N],[13,"Info",E,"Corresponds to the `Info` log level.",1,N],[13,"Debug",E,"Corresponds to the `Debug` log level.",1,N],[13,"Trace",E,"Corresponds to the `Trace` log level.",1,N],[5,"set_max_level",E,"Sets the global maximum log level.",N,[[[R[33]]]]],[5,"max_level",E,"Returns the current maximum log level.",N,[[],[R[33]]]],[5,"set_logger",E,"Sets the global logger to a `&'static Log`.",N,[[["log"]],[[R[24],[R[34]]],[R[34]]]]],[5,"logger",E,"Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL",E,"The statically resolved maximum log level.",N,N],[8,"Log",E,"A trait encapsulating the operations required of a logger.",N,N],[10,"enabled",E,"Determines if a log message with the specified metadata…",2,[[["self"],[R[35]]],["bool"]]],[10,"log",E,"Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush",E,"Flushes any buffered records.",2,[[["self"]]]],[11,"max",E,"Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter",E,"Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],[R[33]]]],[11,"max",E,"Returns the most verbose logging level filter.",1,[[],[R[33]]]],[11,"to_level",E,"Converts `self` to the equivalent `Level`.",1,[[["self"]],[["level"],[R[20],["level"]]]]],[11,"builder",E,R[39],3,[[],[R[36]]]],[11,"args",E,"The message body.",3,[[["self"]],[R[37]]]],[11,R[35],E,"Metadata about the log directive.",3,[[["self"]],[R[35]]]],[11,"level",E,R[40],3,[[["self"]],["level"]]],[11,"target",E,R[41],3,[[["self"]],["str"]]],[11,R[38],E,"The module path of the message.",3,[[["self"]],[["str"],[R[20],["str"]]]]],[11,"file",E,"The source file containing the message.",3,[[["self"]],[["str"],[R[20],["str"]]]]],[11,"line",E,"The line containing the message.",3,[[["self"]],[[R[20],["u32"]],["u32"]]]],[11,"new",E,"Construct new `RecordBuilder`.",4,[[],[R[36]]]],[11,"args",E,"Set `args`.",4,[[["self"],[R[37]]],[R[36]]]],[11,R[35],E,"Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],[R[35]]],[R[36]]]],[11,"level",E,"Set `Metadata::level`.",4,[[["self"],["level"]],[R[36]]]],[11,"target",E,"Set `Metadata::target`",4,[[["self"],["str"]],[R[36]]]],[11,R[38],E,"Set `module_path`",4,[[["self"],[R[20],["str"]],["str"]],[R[36]]]],[11,"file",E,"Set `file`",4,[[["self"],[R[20],["str"]],["str"]],[R[36]]]],[11,"line",E,"Set `line`",4,[[["self"],[R[20],["u32"]],["u32"]],[R[36]]]],[11,"build",E,"Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder",E,R[39],5,[[],[R[42]]]],[11,"level",E,R[40],5,[[["self"]],["level"]]],[11,"target",E,R[41],5,[[["self"]],["str"]]],[11,"new",E,"Construct a new `MetadataBuilder`.",6,[[],[R[42]]]],[11,"level",E,"Setter for `level`.",6,[[["self"],["level"]],[R[42]]]],[11,"target",E,"Setter for `target`.",6,[[["self"],["str"]],[R[42]]]],[11,"build",E,"Returns a `Metadata` object.",6,[[["self"]],[R[35]]]],[14,"log",E,"The standard logging macro.",N,N],[14,"error",E,"Logs a message at the error level.",N,N],[14,"warn",E,"Logs a message at the warn level.",N,N],[14,"info",E,"Logs a message at the info level.",N,N],[14,"debug",E,"Logs a message at the debug level.",N,N],[14,"trace",E,"Logs a message at the trace level.",N,N],[14,"log_enabled",E,"Determines if a message logged at the specified level in…",N,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[[U]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[],[R[24]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[27]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[21],E,E,5,[[[U]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,R[22],E,E,5,[[],[R[24]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"]],[R[27]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[21],E,E,6,[[[U]],[R[24]]]],[11,"into",E,E,6,[[],[U]]],[11,R[22],E,E,6,[[],[R[24]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"]],[R[27]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[21],E,E,7,[[[U]],[R[24]]]],[11,"into",E,E,7,[[],[U]]],[11,R[22],E,E,7,[[],[R[24]]]],[11,R[26],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"]],[R[27]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[21],E,E,8,[[[U]],[R[24]]]],[11,"into",E,E,8,[[],[U]]],[11,R[22],E,E,8,[[],[R[24]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"]],[R[27]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"eq",E,E,0,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[33]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[35]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[35]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[42]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[42]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[43]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[43]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["level"]],[R[44]]]],[11,"cmp",E,E,1,[[["self"],[R[33]]],[R[44]]]],[11,"cmp",E,E,5,[[["self"],[R[35]]],[R[44]]]],[11,"cmp",E,E,6,[[["self"],[R[42]]],[R[44]]]],[11,R[45],E,E,0,[[["self"],["level"]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"le",E,E,0,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["level"]],["bool"]]],[11,R[45],E,E,0,[[["self"],[R[33]]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[33]]],["bool"]]],[11,R[45],E,E,1,[[["self"],[R[33]]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,1,[[["self"],[R[33]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[33]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[33]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[33]]],["bool"]]],[11,R[45],E,E,1,[[["self"],["level"]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"le",E,E,1,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["level"]],["bool"]]],[11,R[45],E,E,5,[[["self"],[R[35]]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,5,[[["self"],[R[35]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[35]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[35]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[35]]],["bool"]]],[11,R[45],E,E,6,[[["self"],[R[42]]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,6,[[["self"],[R[42]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[42]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[42]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[42]]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[24]]]],[11,R[46],E,E,0,[[["str"]],[[R[24],["level"]],["level"]]]],[11,R[46],E,E,1,[[["str"]],[[R[24],[R[33]]],[R[33]]]]],[11,"clone",E,E,0,[[["self"]],["level"]]],[11,"clone",E,E,1,[[["self"]],[R[33]]]],[11,"clone",E,E,3,[[["self"]],["record"]]],[11,"clone",E,E,5,[[["self"]],[R[35]]]]],"p":[[4,"Level"],[4,R[47]],[8,"Log"],[3,"Record"],[3,R[48]],[3,R[49]],[3,R[50]],[3,R[51]],[3,R[52]]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","i":[[3,"Complex","num",R[262],N,N],[12,"re",E,R[263],0,N],[12,"im",E,R[264],0,N],[6,R[384],E,R[346],N,N],[8,R[167],E,E,N,N],[10,R[163],E,R[265],1,[[["self"]],["self"]]],[10,R[164],E,R[266],1,[[["self"]],["self"]]],[10,"gcd",E,R[267],1,[[["self"]],["self"]]],[10,"lcm",E,R[268],1,[[["self"]],["self"]]],[10,"divides",E,R[269],1,[[["self"]],["bool"]]],[10,R[270],E,R[271],1,[[["self"]],["bool"]]],[10,"is_even",E,R[272],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[273],1,[[["self"]],["bool"]]],[10,"div_rem",E,R[274],1,[[["self"]]]],[11,R[165],E,R[275],1,[[["self"]]]],[5,"range",E,R[276],N,[[["a"]],["range"]]],[5,R[277],E,R[278],N,[[["a"]],[R[208]]]],[5,R[279],E,R[280],N,[[["a"]],[R[209]]]],[5,R[281],E,R[282],N,[[["a"]],[R[210]]]],[8,"Num",E,R[342],N,N],[16,R[343],E,E,2,N],[10,R[184],E,R[344],2,[[["u32"],["str"]],[R[24]]]],[8,"Zero",E,R[293],N,N],[10,"zero",E,R[294],3,[[],["self"]]],[10,R[411],E,R[295],3,[[["self"]],["bool"]]],[8,"One",E,R[296],N,N],[10,"one",E,R[297],4,[[],["self"]]],[11,"is_one",E,R[298],4,[[["self"]],["bool"]]],[8,"Signed",E,R[338],N,N],[10,"abs",E,R[79],5,[[["self"]],["self"]]],[10,R[412],E,R[80],5,[[["self"]],["self"]]],[10,"signum",E,R[81],5,[[["self"]],["self"]]],[10,R[224],E,R[339],5,[[["self"]],["bool"]]],[10,R[225],E,R[340],5,[[["self"]],["bool"]]],[8,R[127],E,R[341],N,N],[8,"Bounded",E,R[283],N,N],[10,R[69],E,R[284],6,[[],["self"]]],[10,R[70],E,R[285],6,[[],["self"]]],[5,"one",E,R[300],N,[[],[T]]],[5,"zero",E,R[299],N,[[],[T]]],[5,"abs",E,R[79],N,[[[T]],[T]]],[5,R[412],E,R[80],N,[[[T]],[T]]],[5,"signum",E,R[81],N,[[[T]],[T]]],[8,R[98],E,R[331],N,N],[10,R[332],E,R[333],7,[[],["self"]]],[10,R[334],E,R[335],7,[[],["self"]]],[8,R[89],E,R[322],N,N],[10,R[220],E,R[323],8,[[["self"]],[R[20]]]],[8,R[90],E,R[324],N,N],[10,R[221],E,R[325],9,[[["self"]],[R[20]]]],[8,R[91],E,R[326],N,N],[10,R[222],E,R[327],10,[[["self"]],[R[20]]]],[8,R[92],E,R[328],N,N],[10,R[223],E,R[329],11,[[["self"]],[R[20]]]],[8,"PrimInt",E,E,N,N],[10,R[301],E,R[302],12,[[],["u32"]]],[10,R[303],E,R[304],12,[[],["u32"]]],[10,R[305],E,R[306],12,[[],["u32"]]],[10,R[307],E,R[308],12,[[],["u32"]]],[10,R[309],E,R[71],12,[[["u32"]],["self"]]],[10,R[310],E,R[72],12,[[["u32"]],["self"]]],[10,R[311],E,R[71],12,[[["u32"]],["self"]]],[10,R[312],E,R[72],12,[[["u32"]],["self"]]],[10,R[313],E,R[71],12,[[["u32"]],["self"]]],[10,R[314],E,R[72],12,[[["u32"]],["self"]]],[10,R[315],E,R[316],12,[[],["self"]]],[10,"from_be",E,R[317],12,[[],["self"]]],[10,"from_le",E,R[318],12,[[],["self"]]],[10,"to_be",E,R[319],12,[[],["self"]]],[10,"to_le",E,R[320],12,[[],["self"]]],[10,"pow",E,R[321],12,[[["u32"]],["self"]]],[8,R[84],E,R[226],N,N],[11,R[108],E,R[227],13,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,"to_i8",E,R[228],13,[[["self"]],[[R[20],["i8"]],["i8"]]]],[11,"to_i16",E,R[229],13,[[["self"]],[[R[20],["i16"]],["i16"]]]],[11,"to_i32",E,R[230],13,[[["self"]],[[R[20],["i32"]],["i32"]]]],[10,"to_i64",E,R[231],13,[[["self"]],[["i64"],[R[20],["i64"]]]]],[11,R[413],E,R[232],13,[[["self"]],[["i128"],[R[20],["i128"]]]]],[11,R[125],E,R[233],13,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,"to_u8",E,R[234],13,[[["self"]],[[R[20],["u8"]],["u8"]]]],[11,"to_u16",E,R[235],13,[[["self"]],[[R[20],["u16"]],["u16"]]]],[11,"to_u32",E,R[236],13,[[["self"]],[["u32"],[R[20],["u32"]]]]],[10,"to_u64",E,R[237],13,[[["self"]],[[R[20],["u64"]],["u64"]]]],[11,R[414],E,R[238],13,[[["self"]],[[R[20],["u128"]],["u128"]]]],[11,"to_f32",E,R[239],13,[[["self"]],[["f32"],[R[20],["f32"]]]]],[11,"to_f64",E,R[240],13,[[["self"]],[[R[20],["f64"]],["f64"]]]],[8,R[85],E,R[241],N,N],[11,R[177],E,R[242],14,[[["isize"]],[R[20]]]],[11,R[415],E,R[243],14,[[["i8"]],[R[20]]]],[11,R[287],E,R[244],14,[[["i16"]],[R[20]]]],[11,R[288],E,R[245],14,[[["i32"]],[R[20]]]],[10,R[215],E,R[246],14,[[["i64"]],[R[20]]]],[11,R[178],E,R[247],14,[[["i128"]],[R[20]]]],[11,R[179],E,R[248],14,[[[R[1]]],[R[20]]]],[11,R[416],E,R[249],14,[[["u8"]],[R[20]]]],[11,R[289],E,R[250],14,[[["u16"]],[R[20]]]],[11,R[290],E,R[251],14,[[["u32"]],[R[20]]]],[10,R[216],E,R[252],14,[[["u64"]],[R[20]]]],[11,R[180],E,R[253],14,[[["u128"]],[R[20]]]],[11,R[217],E,R[254],14,[[["f32"]],[R[20]]]],[11,R[218],E,R[255],14,[[["f64"]],[R[20]]]],[8,R[522],E,R[256],N,N],[10,"from",E,R[257],15,[[[T]],[R[20]]]],[0,"cast",E,E,N,N],[8,R[84],"num::cast",R[226],N,N],[11,R[108],E,R[227],13,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,"to_i8",E,R[228],13,[[["self"]],[[R[20],["i8"]],["i8"]]]],[11,"to_i16",E,R[229],13,[[["self"]],[[R[20],["i16"]],["i16"]]]],[11,"to_i32",E,R[230],13,[[["self"]],[[R[20],["i32"]],["i32"]]]],[10,"to_i64",E,R[231],13,[[["self"]],[["i64"],[R[20],["i64"]]]]],[11,R[413],E,R[232],13,[[["self"]],[["i128"],[R[20],["i128"]]]]],[11,R[125],E,R[233],13,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,"to_u8",E,R[234],13,[[["self"]],[[R[20],["u8"]],["u8"]]]],[11,"to_u16",E,R[235],13,[[["self"]],[[R[20],["u16"]],["u16"]]]],[11,"to_u32",E,R[236],13,[[["self"]],[["u32"],[R[20],["u32"]]]]],[10,"to_u64",E,R[237],13,[[["self"]],[[R[20],["u64"]],["u64"]]]],[11,R[414],E,R[238],13,[[["self"]],[[R[20],["u128"]],["u128"]]]],[11,"to_f32",E,R[239],13,[[["self"]],[["f32"],[R[20],["f32"]]]]],[11,"to_f64",E,R[240],13,[[["self"]],[[R[20],["f64"]],["f64"]]]],[8,R[85],E,R[241],N,N],[11,R[177],E,R[242],14,[[["isize"]],[R[20]]]],[11,R[415],E,R[243],14,[[["i8"]],[R[20]]]],[11,R[287],E,R[244],14,[[["i16"]],[R[20]]]],[11,R[288],E,R[245],14,[[["i32"]],[R[20]]]],[10,R[215],E,R[246],14,[[["i64"]],[R[20]]]],[11,R[178],E,R[247],14,[[["i128"]],[R[20]]]],[11,R[179],E,R[248],14,[[[R[1]]],[R[20]]]],[11,R[416],E,R[249],14,[[["u8"]],[R[20]]]],[11,R[289],E,R[250],14,[[["u16"]],[R[20]]]],[11,R[290],E,R[251],14,[[["u32"]],[R[20]]]],[10,R[216],E,R[252],14,[[["u64"]],[R[20]]]],[11,R[180],E,R[253],14,[[["u128"]],[R[20]]]],[11,R[217],E,R[254],14,[[["f32"]],[R[20]]]],[11,R[218],E,R[255],14,[[["f64"]],[R[20]]]],[5,"cast",E,R[258],N,[[[T]],[R[20]]]],[8,R[522],E,R[256],N,N],[10,"from",E,R[257],15,[[[T]],[R[20]]]],[8,R[86],E,R[291],N,N],[10,"as_",E,R[292],16,[[],[T]]],[5,"cast","num",R[258],N,[[[T]],[R[20]]]],[0,"pow",E,E,N,N],[8,"Pow","num::pow",R[336],N,N],[16,"Output",E,R[77],17,N],[10,"pow",E,R[337],17,[[["rhs"]]]],[5,"pow",E,R[259],N,[[[T],[R[1]]],[T]]],[5,R[260],E,R[261],N,[[[T],[R[1]]],[R[20]]]],[5,"pow","num",R[259],N,[[[T],[R[1]]],[T]]],[5,R[260],E,R[261],N,[[[T],[R[1]]],[R[20]]]],[5,"clamp",E,R[345],N,[[[T]],[T]]],[0,R[168],E,E,N,N],[3,"Complex",R[347],R[262],N,N],[12,"re",E,R[263],0,N],[12,"im",E,R[264],0,N],[6,R[351],E,E,N,N],[6,R[352],E,E,N,N],[3,R[176],E,E,N,N],[0,R[159],"num",E,N,N],[8,R[167],R[348],E,N,N],[10,R[163],E,R[265],1,[[["self"]],["self"]]],[10,R[164],E,R[266],1,[[["self"]],["self"]]],[10,"gcd",E,R[267],1,[[["self"]],["self"]]],[10,"lcm",E,R[268],1,[[["self"]],["self"]]],[10,"divides",E,R[269],1,[[["self"]],["bool"]]],[10,R[270],E,R[271],1,[[["self"]],["bool"]]],[10,"is_even",E,R[272],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[273],1,[[["self"]],["bool"]]],[10,"div_rem",E,R[274],1,[[["self"]]]],[11,R[165],E,R[275],1,[[["self"]]]],[5,"div_rem",E,R[367],N,[[[T]]]],[5,R[163],E,R[368],N,[[[T]],[T]]],[5,R[164],E,R[369],N,[[[T]],[T]]],[5,R[165],E,R[370],N,[[[T]]]],[5,"gcd",E,R[371],N,[[[T]],[T]]],[5,"lcm",E,R[372],N,[[[T]],[T]]],[3,R[166],E,R[365],N,N],[5,"binomial",E,R[373],N,[[[T]],[T]]],[5,R[374],E,R[375],N,[[],[T]]],[8,"Roots",E,R[376],N,N],[10,R[366],E,R[160],18,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[161],18,[[["self"]],["self"]]],[11,"cbrt",E,R[162],18,[[["self"]],["self"]]],[5,"sqrt",E,R[161],N,[[[T]],[T]]],[5,R[366],E,R[160],N,[[["u32"],[T]],[T]]],[5,"cbrt",E,R[162],N,[[[T]],[T]]],[0,"iter","num",E,N,N],[3,"Range",R[349],R[379],N,N],[5,"range",E,R[276],N,[[["a"]],["range"]]],[3,R[211],E,R[380],N,N],[5,R[277],E,R[278],N,[[["a"]],[R[208]]]],[3,R[212],E,R[381],N,N],[5,R[279],E,R[280],N,[[["a"]],[R[209]]]],[3,R[213],E,R[382],N,N],[5,R[281],E,R[282],N,[[["a"]],[R[210]]]],[0,"traits","num",E,N,N],[0,"bounds",R[286],E,N,N],[8,"Bounded","num::traits::bounds",R[283],N,N],[10,R[69],E,R[284],6,[[],["self"]]],[10,R[70],E,R[285],6,[[],["self"]]],[0,"cast",R[286],E,N,N],[8,R[84],"num::traits::cast",R[226],N,N],[11,R[108],E,R[227],13,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,"to_i8",E,R[228],13,[[["self"]],[[R[20],["i8"]],["i8"]]]],[11,"to_i16",E,R[229],13,[[["self"]],[[R[20],["i16"]],["i16"]]]],[11,"to_i32",E,R[230],13,[[["self"]],[[R[20],["i32"]],["i32"]]]],[10,"to_i64",E,R[231],13,[[["self"]],[["i64"],[R[20],["i64"]]]]],[11,R[413],E,R[232],13,[[["self"]],[["i128"],[R[20],["i128"]]]]],[11,R[125],E,R[233],13,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,"to_u8",E,R[234],13,[[["self"]],[[R[20],["u8"]],["u8"]]]],[11,"to_u16",E,R[235],13,[[["self"]],[[R[20],["u16"]],["u16"]]]],[11,"to_u32",E,R[236],13,[[["self"]],[["u32"],[R[20],["u32"]]]]],[10,"to_u64",E,R[237],13,[[["self"]],[[R[20],["u64"]],["u64"]]]],[11,R[414],E,R[238],13,[[["self"]],[[R[20],["u128"]],["u128"]]]],[11,"to_f32",E,R[239],13,[[["self"]],[["f32"],[R[20],["f32"]]]]],[11,"to_f64",E,R[240],13,[[["self"]],[[R[20],["f64"]],["f64"]]]],[8,R[85],E,R[241],N,N],[11,R[177],E,R[242],14,[[["isize"]],[R[20]]]],[11,R[415],E,R[243],14,[[["i8"]],[R[20]]]],[11,R[287],E,R[244],14,[[["i16"]],[R[20]]]],[11,R[288],E,R[245],14,[[["i32"]],[R[20]]]],[10,R[215],E,R[246],14,[[["i64"]],[R[20]]]],[11,R[178],E,R[247],14,[[["i128"]],[R[20]]]],[11,R[179],E,R[248],14,[[[R[1]]],[R[20]]]],[11,R[416],E,R[249],14,[[["u8"]],[R[20]]]],[11,R[289],E,R[250],14,[[["u16"]],[R[20]]]],[11,R[290],E,R[251],14,[[["u32"]],[R[20]]]],[10,R[216],E,R[252],14,[[["u64"]],[R[20]]]],[11,R[180],E,R[253],14,[[["u128"]],[R[20]]]],[11,R[217],E,R[254],14,[[["f32"]],[R[20]]]],[11,R[218],E,R[255],14,[[["f64"]],[R[20]]]],[5,"cast",E,R[258],N,[[[T]],[R[20]]]],[8,R[522],E,R[256],N,N],[10,"from",E,R[257],15,[[[T]],[R[20]]]],[8,R[86],E,R[291],N,N],[10,"as_",E,R[292],16,[[],[T]]],[0,"float",R[286],E,N,N],[8,R[87],"num::traits::float",R[417],N,N],[10,"infinity",E,R[418],19,[[],["self"]]],[10,R[419],E,R[420],19,[[],["self"]]],[10,"nan",E,R[421],19,[[],["self"]]],[10,"neg_zero",E,R[422],19,[[],["self"]]],[10,R[69],E,R[423],19,[[],["self"]]],[10,R[424],E,R[425],19,[[],["self"]]],[10,"epsilon",E,R[426],19,[[],["self"]]],[10,R[70],E,R[427],19,[[],["self"]]],[11,"is_nan",E,R[428],19,[[],["bool"]]],[11,R[182],E,R[429],19,[[],["bool"]]],[11,R[183],E,R[430],19,[[],["bool"]]],[11,R[158],E,R[431],19,[[],["bool"]]],[10,"classify",E,R[432],19,[[],[R[433]]]],[11,"floor",E,R[434],19,[[],["self"]]],[11,"ceil",E,R[435],19,[[],["self"]]],[11,"round",E,R[436],19,[[],["self"]]],[11,"trunc",E,R[437],19,[[],["self"]]],[11,"fract",E,R[438],19,[[],["self"]]],[11,"abs",E,R[439],19,[[],["self"]]],[11,"signum",E,R[440],19,[[],["self"]]],[11,R[441],E,R[442],19,[[],["bool"]]],[11,R[443],E,R[444],19,[[],["bool"]]],[11,"min",E,R[445],19,[[],["self"]]],[11,"max",E,R[446],19,[[],["self"]]],[11,"recip",E,R[447],19,[[],["self"]]],[11,"powi",E,R[448],19,[[["i32"]],["self"]]],[10,R[449],E,R[450],19,[[],["self"]]],[10,R[451],E,R[452],19,[[],["self"]]],[10,R[453],E,R[454],19,[[]]],[8,R[88],E,E,N,N],[10,"E",E,R[455],20,[[],["self"]]],[10,R[456],E,R[457],20,[[],["self"]]],[10,R[458],E,R[459],20,[[],["self"]]],[10,R[460],E,R[461],20,[[],["self"]]],[10,R[462],E,R[463],20,[[],["self"]]],[10,R[464],E,R[465],20,[[],["self"]]],[10,R[466],E,R[467],20,[[],["self"]]],[10,R[468],E,R[469],20,[[],["self"]]],[10,R[470],E,R[471],20,[[],["self"]]],[10,R[472],E,R[473],20,[[],["self"]]],[10,"LN_10",E,R[474],20,[[],["self"]]],[10,"LN_2",E,R[475],20,[[],["self"]]],[10,"LOG10_E",E,R[476],20,[[],["self"]]],[10,"LOG2_E",E,R[477],20,[[],["self"]]],[10,"PI",E,R[478],20,[[],["self"]]],[10,"SQRT_2",E,R[479],20,[[],["self"]]],[0,R[480],R[286],E,N,N],[8,"Zero","num::traits::identities",R[293],N,N],[10,"zero",E,R[294],3,[[],["self"]]],[10,R[411],E,R[295],3,[[["self"]],["bool"]]],[8,"One",E,R[296],N,N],[10,"one",E,R[297],4,[[],["self"]]],[11,"is_one",E,R[298],4,[[["self"]],["bool"]]],[5,"zero",E,R[299],N,[[],[T]]],[5,"one",E,R[300],N,[[],[T]]],[0,"int",R[286],E,N,N],[8,"PrimInt","num::traits::int",E,N,N],[10,R[301],E,R[302],12,[[],["u32"]]],[10,R[303],E,R[304],12,[[],["u32"]]],[10,R[305],E,R[306],12,[[],["u32"]]],[10,R[307],E,R[308],12,[[],["u32"]]],[10,R[309],E,R[71],12,[[["u32"]],["self"]]],[10,R[310],E,R[72],12,[[["u32"]],["self"]]],[10,R[311],E,R[71],12,[[["u32"]],["self"]]],[10,R[312],E,R[72],12,[[["u32"]],["self"]]],[10,R[313],E,R[71],12,[[["u32"]],["self"]]],[10,R[314],E,R[72],12,[[["u32"]],["self"]]],[10,R[315],E,R[316],12,[[],["self"]]],[10,"from_be",E,R[317],12,[[],["self"]]],[10,"from_le",E,R[318],12,[[],["self"]]],[10,"to_be",E,R[319],12,[[],["self"]]],[10,"to_le",E,R[320],12,[[],["self"]]],[10,"pow",E,R[321],12,[[["u32"]],["self"]]],[0,"ops",R[286],E,N,N],[0,"checked",R[330],E,N,N],[8,R[89],"num::traits::ops::checked",R[322],N,N],[10,R[220],E,R[323],8,[[["self"]],[R[20]]]],[8,R[90],E,R[324],N,N],[10,R[221],E,R[325],9,[[["self"]],[R[20]]]],[8,R[91],E,R[326],N,N],[10,R[222],E,R[327],10,[[["self"]],[R[20]]]],[8,R[92],E,R[328],N,N],[10,R[223],E,R[329],11,[[["self"]],[R[20]]]],[8,R[93],E,R[481],N,N],[10,R[482],E,R[483],21,[[["self"]],[R[20]]]],[8,R[94],E,R[484],N,N],[10,R[485],E,R[486],22,[[["self"]],[R[20]]]],[8,R[95],E,R[487],N,N],[10,R[488],E,R[73],23,[[["self"],["u32"]],[R[20]]]],[8,R[96],E,R[489],N,N],[10,R[490],E,R[73],24,[[["self"],["u32"]],[R[20]]]],[0,"inv",R[330],E,N,N],[8,"Inv","num::traits::ops::inv",R[491],N,N],[16,"Output",E,R[77],25,N],[10,"inv",E,R[492],25,[[]]],[0,"mul_add",R[330],E,N,N],[8,"MulAdd","num::traits::ops::mul_add",R[493],N,N],[16,"Output",E,R[494],26,N],[10,"mul_add",E,R[75],26,[[["a"],["b"]]]],[8,R[97],E,R[495],N,N],[10,R[496],E,R[75],27,[[["self"],["a"],["b"]]]],[0,R[497],R[330],E,N,N],[8,R[98],"num::traits::ops::saturating",R[331],N,N],[10,R[332],E,R[333],7,[[],["self"]]],[10,R[334],E,R[335],7,[[],["self"]]],[0,"wrapping",R[330],E,N,N],[8,R[99],"num::traits::ops::wrapping",R[498],N,N],[10,R[499],E,R[500],28,[[["self"]],["self"]]],[8,R[100],E,R[501],N,N],[10,R[502],E,R[503],29,[[["self"]],["self"]]],[8,R[101],E,R[504],N,N],[10,R[505],E,R[506],30,[[["self"]],["self"]]],[8,R[102],E,R[507],N,N],[10,R[508],E,R[509],31,[[["self"],["u32"]],["self"]]],[8,R[103],E,R[510],N,N],[10,R[511],E,R[512],32,[[["self"],["u32"]],["self"]]],[0,"pow",R[286],E,N,N],[8,"Pow","num::traits::pow",R[336],N,N],[16,"Output",E,R[77],17,N],[10,"pow",E,R[337],17,[[["rhs"]]]],[5,"pow",E,R[259],N,[[[T],[R[1]]],[T]]],[5,R[260],E,R[261],N,[[[T],[R[1]]],[R[20]]]],[0,"sign",R[286],E,N,N],[8,"Signed","num::traits::sign",R[338],N,N],[10,"abs",E,R[79],5,[[["self"]],["self"]]],[10,R[412],E,R[80],5,[[["self"]],["self"]]],[10,"signum",E,R[81],5,[[["self"]],["self"]]],[10,R[224],E,R[339],5,[[["self"]],["bool"]]],[10,R[225],E,R[340],5,[[["self"]],["bool"]]],[5,"abs",E,R[79],N,[[[T]],[T]]],[5,R[412],E,R[80],N,[[[T]],[T]]],[5,"signum",E,R[81],N,[[[T]],[T]]],[8,R[127],E,R[341],N,N],[8,"Num",R[286],R[342],N,N],[16,R[343],E,E,2,N],[10,R[184],E,R[344],2,[[["u32"],["str"]],[R[24]]]],[8,"NumOps",E,R[513],N,N],[8,"NumRef",E,R[514],N,N],[8,"RefNum",E,R[515],N,N],[8,R[516],E,R[517],N,N],[8,R[518],E,R[519],N,N],[8,R[520],E,R[521],N,N],[4,R[83],E,E,N,N],[13,"Empty",E,E,33,N],[13,"Invalid",E,E,33,N],[3,R[82],E,E,N,N],[12,"kind",E,E,34,N],[5,"clamp",E,R[345],N,[[[T]],[T]]],[0,"rational","num",E,N,N],[3,"Ratio",R[350],R[383],N,N],[6,R[384],E,R[346],N,N],[6,R[385],E,R[386],N,N],[6,R[387],E,R[388],N,N],[3,R[219],E,E,N,N],[11,"from",R[347],E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[21],E,E,35,[[[U]],[R[24]]]],[11,"into",E,E,35,[[],[U]]],[11,R[22],E,E,35,[[],[R[24]]]],[11,R[26],E,E,35,[[["self"]],[T]]],[11,R[23],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"]],[R[27]]]],[11,"from",R[348],E,36,[[[T]],[T]]],[11,R[21],E,E,36,[[[U]],[R[24]]]],[11,"into",E,E,36,[[],[U]]],[11,R[22],E,E,36,[[],[R[24]]]],[11,R[205],E,E,36,[[],["i"]]],[11,R[26],E,E,36,[[["self"]],[T]]],[11,R[23],E,E,36,[[["self"]],[T]]],[11,R[25],E,E,36,[[["self"]],[R[27]]]],[11,"from",R[349],E,37,[[[T]],[T]]],[11,R[21],E,E,37,[[[U]],[R[24]]]],[11,"into",E,E,37,[[],[U]]],[11,R[22],E,E,37,[[],[R[24]]]],[11,R[205],E,E,37,[[],["i"]]],[11,R[26],E,E,37,[[["self"]],[T]]],[11,R[23],E,E,37,[[["self"]],[T]]],[11,R[25],E,E,37,[[["self"]],[R[27]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[21],E,E,38,[[[U]],[R[24]]]],[11,"into",E,E,38,[[],[U]]],[11,R[22],E,E,38,[[],[R[24]]]],[11,R[205],E,E,38,[[],["i"]]],[11,R[26],E,E,38,[[["self"]],[T]]],[11,R[23],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"]],[R[27]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[21],E,E,39,[[[U]],[R[24]]]],[11,"into",E,E,39,[[],[U]]],[11,R[22],E,E,39,[[],[R[24]]]],[11,R[205],E,E,39,[[],["i"]]],[11,R[26],E,E,39,[[["self"]],[T]]],[11,R[23],E,E,39,[[["self"]],[T]]],[11,R[25],E,E,39,[[["self"]],[R[27]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[21],E,E,40,[[[U]],[R[24]]]],[11,"into",E,E,40,[[],[U]]],[11,R[22],E,E,40,[[],[R[24]]]],[11,R[205],E,E,40,[[],["i"]]],[11,R[26],E,E,40,[[["self"]],[T]]],[11,R[23],E,E,40,[[["self"]],[T]]],[11,R[25],E,E,40,[[["self"]],[R[27]]]],[11,"from",R[286],E,33,[[[T]],[T]]],[11,R[21],E,E,33,[[[U]],[R[24]]]],[11,"into",E,E,33,[[],[U]]],[11,R[22],E,E,33,[[],[R[24]]]],[11,R[26],E,E,33,[[["self"]],[T]]],[11,R[23],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"]],[R[27]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[21],E,E,34,[[[U]],[R[24]]]],[11,"into",E,E,34,[[],[U]]],[11,R[22],E,E,34,[[],[R[24]]]],[11,R[26],E,E,34,[[["self"]],[T]]],[11,R[23],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"]],[R[27]]]],[11,"from",R[350],E,41,[[[T]],[T]]],[11,R[21],E,E,41,[[[U]],[R[24]]]],[11,"into",E,E,41,[[],[U]]],[11,R[22],E,E,41,[[],[R[24]]]],[11,R[26],E,E,41,[[["self"]],[T]]],[11,R[23],E,E,41,[[["self"]],[T]]],[11,R[25],E,E,41,[[["self"]],[R[27]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[21],E,E,42,[[[U]],[R[24]]]],[11,"into",E,E,42,[[],[U]]],[11,R[22],E,E,42,[[],[R[24]]]],[11,R[26],E,E,42,[[["self"]],[T]]],[11,R[23],E,E,42,[[["self"]],[T]]],[11,R[25],E,E,42,[[["self"]],[R[27]]]],[11,"fmt",R[347],E,0,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"fmt",E,E,35,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"rem",E,E,0,[[[R[168]]],[R[168]]]],[11,"rem",E,E,0,[[[T]],[R[168]]]],[11,"rem",E,E,0,[[[R[168]]],[R[168]]]],[11,"rem",E,E,0,[[[T]],[R[168]]]],[11,R[125],E,E,0,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,R[108],E,E,0,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,"to_u8",E,E,0,[[["self"]],[[R[20],["u8"]],["u8"]]]],[11,"to_u16",E,E,0,[[["self"]],[[R[20],["u16"]],["u16"]]]],[11,"to_u32",E,E,0,[[["self"]],[["u32"],[R[20],["u32"]]]]],[11,"to_u64",E,E,0,[[["self"]],[[R[20],["u64"]],["u64"]]]],[11,"to_i8",E,E,0,[[["self"]],[[R[20],["i8"]],["i8"]]]],[11,"to_i16",E,E,0,[[["self"]],[[R[20],["i16"]],["i16"]]]],[11,"to_i32",E,E,0,[[["self"]],[[R[20],["i32"]],["i32"]]]],[11,"to_i64",E,E,0,[[["self"]],[["i64"],[R[20],["i64"]]]]],[11,R[414],E,E,0,[[["self"]],[[R[20],["u128"]],["u128"]]]],[11,R[413],E,E,0,[[["self"]],[["i128"],[R[20],["i128"]]]]],[11,"to_f32",E,E,0,[[["self"]],[["f32"],[R[20],["f32"]]]]],[11,"to_f64",E,E,0,[[["self"]],[[R[20],["f64"]],["f64"]]]],[11,"zero",E,E,0,[[],[R[168]]]],[11,R[411],E,E,0,[[["self"]],["bool"]]],[11,"as_",E,E,0,[[],[U]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"from",E,E,0,[[[T]],[R[168]]]],[11,"from",E,E,0,[[[T]],[R[168]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"clone",E,E,0,[[["self"]],[R[168]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,R[179],E,E,0,[[[R[1]]],[[R[20],[R[168]]],[R[168]]]]],[11,R[177],E,E,0,[[["isize"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[416],E,E,0,[[["u8"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[289],E,E,0,[[["u16"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[290],E,E,0,[[["u32"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[216],E,E,0,[[["u64"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[415],E,E,0,[[["i8"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[287],E,E,0,[[["i16"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[288],E,E,0,[[["i32"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[215],E,E,0,[[["i64"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[180],E,E,0,[[["u128"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[178],E,E,0,[[["i128"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[217],E,E,0,[[["f32"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[218],E,E,0,[[["f64"]],[[R[20],[R[168]]],[R[168]]]]],[11,R[171],E,E,0,[[["self"],[T]]]],[11,R[171],E,E,0,[[["self"],[R[168]]]]],[11,R[171],E,E,0,[[["self"],[T]]]],[11,R[171],E,E,0,[[["self"],[R[168]]]]],[11,R[364],E,E,0,[[["i"]],[R[168]]]],[11,R[364],E,E,0,[[["i"]],[R[168]]]],[11,"mul",E,E,0,[[[R[168]]],[R[168]]]],[11,"mul",E,E,0,[[[T]],[R[168]]]],[11,"mul",E,E,0,[[[T]],[R[168]]]],[11,"mul",E,E,0,[[[R[168]]],[R[168]]]],[11,R[126],E,E,0,[[],[R[168]]]],[11,"div",E,E,0,[[[T]],[R[168]]]],[11,"div",E,E,0,[[[R[168]]],[R[168]]]],[11,"div",E,E,0,[[[T]],[R[168]]]],[11,"div",E,E,0,[[[R[168]]],[R[168]]]],[11,"eq",E,E,0,[[["self"],[R[168]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[168]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[169]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[169]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"add",E,E,0,[[[T]],[R[168]]]],[11,"add",E,E,0,[[[R[168]]],[R[168]]]],[11,"add",E,E,0,[[[T]],[R[168]]]],[11,"add",E,E,0,[[[R[168]]],[R[168]]]],[11,R[172],E,E,0,[[["self"],[T]]]],[11,R[172],E,E,0,[[["self"],[T]]]],[11,R[172],E,E,0,[[["self"],[R[168]]]]],[11,R[172],E,E,0,[[["self"],[R[168]]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,R[184],E,R[175],0,[[["u32"],["str"]],[[R[168]],[R[24],[R[168]]]]]],[11,"inv",E,E,0,[[],[R[168]]]],[11,R[173],E,E,0,[[["self"],[T]]]],[11,R[173],E,E,0,[[["self"],[R[168]]]]],[11,R[173],E,E,0,[[["self"],[T]]]],[11,R[173],E,E,0,[[["self"],[R[168]]]]],[11,"fmt",E,E,35,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"neg",E,E,0,[[],[R[168]]]],[11,"from",E,E,0,[[[U]],[[R[20],[R[168]]],[R[168]]]]],[11,R[170],E,E,0,[[["self"],[T]]]],[11,R[170],E,E,0,[[["self"],[T]]]],[11,R[170],E,E,0,[[["self"],[R[168]]]]],[11,R[170],E,E,0,[[["self"],[R[168]]]]],[11,"sub",E,E,0,[[[T]],[R[168]]]],[11,"sub",E,E,0,[[[T]],[R[168]]]],[11,"sub",E,E,0,[[[R[168]]],[R[168]]]],[11,"sub",E,E,0,[[[R[168]]],[R[168]]]],[11,R[46],E,R[175],0,[[["str"]],[[R[24],[R[168]]],[R[168]]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"one",E,E,0,[[],[R[168]]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,R[174],E,E,0,[[["self"],[R[168]]]]],[11,R[174],E,E,0,[[["self"],[R[168]]]]],[11,R[174],E,E,0,[[["self"],[T]]]],[11,R[174],E,E,0,[[["self"],[T]]]],[11,"sum",E,E,0,[[["i"]],[R[168]]]],[11,"sum",E,E,0,[[["i"]],[R[168]]]],[11,"fmt",R[286],E,34,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"fmt",E,E,33,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"fmt",E,E,34,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"next",R[348],E,36,[[["self"]],[R[20]]]],[11,R[207],R[349],E,38,[[["self"]],[R[20]]]],[11,R[207],E,E,37,[[["self"]],[R[20]]]],[11,"clone",E,E,37,[[["self"]],["range"]]],[11,"clone",E,E,38,[[["self"]],[R[208]]]],[11,"clone",E,E,39,[[["self"]],[R[209]]]],[11,"clone",E,E,40,[[["self"]],[R[210]]]],[11,"next",E,E,38,[[["self"]],[R[20]]]],[11,R[206],E,E,38,[[["self"]]]],[11,"next",E,E,40,[[["self"]],[R[20]]]],[11,"next",E,E,37,[[["self"]],[R[20]]]],[11,R[206],E,E,37,[[["self"]]]],[11,"next",E,E,39,[[["self"]],[R[20]]]],[11,"fmt",R[350],E,42,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"fmt",E,E,41,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,R[174],E,E,41,[[["self"],["ratio"]]]],[11,R[174],E,E,41,[[["self"],[T]]]],[11,R[174],E,E,41,[[["self"],["ratio"]]]],[11,R[174],E,E,41,[[["self"],[T]]]],[11,"rem",E,E,41,[[["ratio"]],["ratio"]]],[11,"rem",E,E,41,[[["ratio"]],["ratio"]]],[11,"rem",E,E,41,[[[T]],["ratio"]]],[11,"rem",E,E,41,[[[T]],["ratio"]]],[11,"from",E,E,41,[[[T]],["ratio"]]],[11,"from",E,E,41,[[],["ratio"]]],[11,"zero",E,E,41,[[],["ratio"]]],[11,R[411],E,E,41,[[["self"]],["bool"]]],[11,R[221],E,E,41,[[["self"],["ratio"]],[["ratio"],[R[20],["ratio"]]]]],[11,"hash",E,E,41,[[["self"],["h"]]]],[11,R[220],E,E,41,[[["self"],["ratio"]],[["ratio"],[R[20],["ratio"]]]]],[11,"clone",E,E,42,[[["self"]],[R[214]]]],[11,"clone",E,E,41,[[["self"]],["ratio"]]],[11,R[215],E,E,41,[[["i64"]],[[R[20],["ratio"]],["ratio",["i16"]]]]],[11,R[178],E,E,41,[[["i128"]],[[R[20],["ratio"]],["ratio",["i16"]]]]],[11,R[216],E,E,41,[[["u64"]],[[R[20],["ratio"]],["ratio",["i16"]]]]],[11,R[180],E,E,41,[[["u128"]],[[R[20],["ratio"]],["ratio",["i16"]]]]],[11,R[217],E,E,41,[[["f32"]],[[R[20],["ratio"]],["ratio",["i16"]]]]],[11,R[218],E,E,41,[[["f64"]],[[R[20],["ratio"]],["ratio",["i16"]]]]],[11,R[215],E,E,41,[[["i64"]],[[R[20],["ratio"]],["ratio",["isize"]]]]],[11,R[178],E,E,41,[[["i128"]],[[R[20],["ratio"]],["ratio",["isize"]]]]],[11,R[216],E,E,41,[[["u64"]],[[R[20],["ratio"]],["ratio",["isize"]]]]],[11,R[180],E,E,41,[[["u128"]],[[R[20],["ratio"]],["ratio",["isize"]]]]],[11,R[217],E,E,41,[[["f32"]],[[R[20],["ratio"]],["ratio",["isize"]]]]],[11,R[218],E,E,41,[[["f64"]],[[R[20],["ratio"]],["ratio",["isize"]]]]],[11,R[215],E,E,41,[[["i64"]],[["ratio",["u32"]],[R[20],["ratio"]]]]],[11,R[178],E,E,41,[[["i128"]],[["ratio",["u32"]],[R[20],["ratio"]]]]],[11,R[216],E,E,41,[[["u64"]],[["ratio",["u32"]],[R[20],["ratio"]]]]],[11,R[180],E,E,41,[[["u128"]],[["ratio",["u32"]],[R[20],["ratio"]]]]],[11,R[217],E,E,41,[[["f32"]],[["ratio",["u32"]],[R[20],["ratio"]]]]],[11,R[218],E,E,41,[[["f64"]],[["ratio",["u32"]],[R[20],["ratio"]]]]],[11,R[215],E,E,41,[[["i64"]],[["ratio",["i8"]],[R[20],["ratio"]]]]],[11,R[178],E,E,41,[[["i128"]],[["ratio",["i8"]],[R[20],["ratio"]]]]],[11,R[216],E,E,41,[[["u64"]],[["ratio",["i8"]],[R[20],["ratio"]]]]],[11,R[180],E,E,41,[[["u128"]],[["ratio",["i8"]],[R[20],["ratio"]]]]],[11,R[217],E,E,41,[[["f32"]],[["ratio",["i8"]],[R[20],["ratio"]]]]],[11,R[218],E,E,41,[[["f64"]],[["ratio",["i8"]],[R[20],["ratio"]]]]],[11,R[215],E,E,41,[[["i64"]],[["ratio",["u64"]],[R[20],["ratio"]]]]],[11,R[178],E,E,41,[[["i128"]],[["ratio",["u64"]],[R[20],["ratio"]]]]],[11,R[216],E,E,41,[[["u64"]],[["ratio",["u64"]],[R[20],["ratio"]]]]],[11,R[180],E,E,41,[[["u128"]],[["ratio",["u64"]],[R[20],["ratio"]]]]],[11,R[217],E,E,41,[[["f32"]],[["ratio",["u64"]],[R[20],["ratio"]]]]],[11,R[218],E,E,41,[[["f64"]],[["ratio",["u64"]],[R[20],["ratio"]]]]],[11,R[215],E,E,41,[[["i64"]],[[R[20],["ratio"]],["ratio",[R[1]]]]]],[11,R[178],E,E,41,[[["i128"]],[[R[20],["ratio"]],["ratio",[R[1]]]]]],[11,R[216],E,E,41,[[["u64"]],[[R[20],["ratio"]],["ratio",[R[1]]]]]],[11,R[180],E,E,41,[[["u128"]],[[R[20],["ratio"]],["ratio",[R[1]]]]]],[11,R[217],E,E,41,[[["f32"]],[[R[20],["ratio"]],["ratio",[R[1]]]]]],[11,R[218],E,E,41,[[["f64"]],[[R[20],["ratio"]],["ratio",[R[1]]]]]],[11,R[215],E,E,41,[[["i64"]],[[R[20],["ratio"]],["ratio",["i64"]]]]],[11,R[178],E,E,41,[[["i128"]],[[R[20],["ratio"]],["ratio",["i64"]]]]],[11,R[216],E,E,41,[[["u64"]],[[R[20],["ratio"]],["ratio",["i64"]]]]],[11,R[180],E,E,41,[[["u128"]],[[R[20],["ratio"]],["ratio",["i64"]]]]],[11,R[217],E,E,41,[[["f32"]],[[R[20],["ratio"]],["ratio",["i64"]]]]],[11,R[218],E,E,41,[[["f64"]],[[R[20],["ratio"]],["ratio",["i64"]]]]],[11,R[215],E,E,41,[[["i64"]],[["ratio",["u16"]],[R[20],["ratio"]]]]],[11,R[178],E,E,41,[[["i128"]],[["ratio",["u16"]],[R[20],["ratio"]]]]],[11,R[216],E,E,41,[[["u64"]],[["ratio",["u16"]],[R[20],["ratio"]]]]],[11,R[180],E,E,41,[[["u128"]],[["ratio",["u16"]],[R[20],["ratio"]]]]],[11,R[217],E,E,41,[[["f32"]],[["ratio",["u16"]],[R[20],["ratio"]]]]],[11,R[218],E,E,41,[[["f64"]],[["ratio",["u16"]],[R[20],["ratio"]]]]],[11,R[215],E,E,41,[[["i64"]],[[R[20],["ratio"]],["ratio",["u8"]]]]],[11,R[178],E,E,41,[[["i128"]],[[R[20],["ratio"]],["ratio",["u8"]]]]],[11,R[216],E,E,41,[[["u64"]],[[R[20],["ratio"]],["ratio",["u8"]]]]],[11,R[180],E,E,41,[[["u128"]],[[R[20],["ratio"]],["ratio",["u8"]]]]],[11,R[217],E,E,41,[[["f32"]],[[R[20],["ratio"]],["ratio",["u8"]]]]],[11,R[218],E,E,41,[[["f64"]],[[R[20],["ratio"]],["ratio",["u8"]]]]],[11,R[215],E,E,41,[[["i64"]],[["ratio",["u128"]],[R[20],["ratio"]]]]],[11,R[178],E,E,41,[[["i128"]],[["ratio",["u128"]],[R[20],["ratio"]]]]],[11,R[216],E,E,41,[[["u64"]],[["ratio",["u128"]],[R[20],["ratio"]]]]],[11,R[180],E,E,41,[[["u128"]],[["ratio",["u128"]],[R[20],["ratio"]]]]],[11,R[217],E,E,41,[[["f32"]],[["ratio",["u128"]],[R[20],["ratio"]]]]],[11,R[218],E,E,41,[[["f64"]],[["ratio",["u128"]],[R[20],["ratio"]]]]],[11,R[215],E,E,41,[[["i64"]],[[R[20],["ratio"]],["ratio",["i128"]]]]],[11,R[178],E,E,41,[[["i128"]],[[R[20],["ratio"]],["ratio",["i128"]]]]],[11,R[216],E,E,41,[[["u64"]],[[R[20],["ratio"]],["ratio",["i128"]]]]],[11,R[180],E,E,41,[[["u128"]],[[R[20],["ratio"]],["ratio",["i128"]]]]],[11,R[217],E,E,41,[[["f32"]],[[R[20],["ratio"]],["ratio",["i128"]]]]],[11,R[218],E,E,41,[[["f64"]],[[R[20],["ratio"]],["ratio",["i128"]]]]],[11,R[215],E,E,41,[[["i64"]],[["ratio",["i32"]],[R[20],["ratio"]]]]],[11,R[178],E,E,41,[[["i128"]],[["ratio",["i32"]],[R[20],["ratio"]]]]],[11,R[216],E,E,41,[[["u64"]],[["ratio",["i32"]],[R[20],["ratio"]]]]],[11,R[180],E,E,41,[[["u128"]],[["ratio",["i32"]],[R[20],["ratio"]]]]],[11,R[217],E,E,41,[[["f32"]],[["ratio",["i32"]],[R[20],["ratio"]]]]],[11,R[218],E,E,41,[[["f64"]],[["ratio",["i32"]],[R[20],["ratio"]]]]],[11,"pow",E,E,41,[[["i8"]],["ratio"]]],[11,"pow",E,E,41,[[[R[1]]],["ratio"]]],[11,"pow",E,E,41,[[["i32"]],["ratio"]]],[11,"pow",E,E,41,[[["isize"]],["ratio"]]],[11,"pow",E,E,41,[[["i8"]],["ratio"]]],[11,"pow",E,E,41,[[[R[1]]],["ratio"]]],[11,"pow",E,E,41,[[["u16"]],["ratio"]]],[11,"pow",E,E,41,[[["u32"]],["ratio"]]],[11,"pow",E,E,41,[[["u32"]],["ratio"]]],[11,"pow",E,E,41,[[["u8"]],["ratio"]]],[11,"pow",E,E,41,[[["isize"]],["ratio"]]],[11,"pow",E,E,41,[[["u64"]],["ratio"]]],[11,"pow",E,E,41,[[["i64"]],["ratio"]]],[11,"pow",E,E,41,[[["i16"]],["ratio"]]],[11,"pow",E,E,41,[[["i16"]],["ratio"]]],[11,"pow",E,E,41,[[["u64"]],["ratio"]]],[11,"pow",E,E,41,[[["i32"]],["ratio"]]],[11,"pow",E,E,41,[[["u16"]],["ratio"]]],[11,"pow",E,E,41,[[["i64"]],["ratio"]]],[11,"pow",E,E,41,[[["u8"]],["ratio"]]],[11,R[171],E,E,41,[[["self"],[T]]]],[11,R[171],E,E,41,[[["self"],[T]]]],[11,R[171],E,E,41,[[["self"],["ratio"]]]],[11,R[171],E,E,41,[[["self"],["ratio"]]]],[11,R[364],E,E,41,[[["i"]],["ratio"]]],[11,R[364],E,E,41,[[["i"]],["ratio"]]],[11,"cmp",E,E,41,[[["self"],["ratio"]],[R[44]]]],[11,"abs",E,E,41,[[["self"]],["ratio"]]],[11,R[412],E,E,41,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,41,[[["self"]],["ratio"]]],[11,R[224],E,E,41,[[["self"]],["bool"]]],[11,R[225],E,E,41,[[["self"]],["bool"]]],[11,"mul",E,E,41,[[[T]],["ratio"]]],[11,"mul",E,E,41,[[["ratio"]],["ratio"]]],[11,"mul",E,E,41,[[[T]],["ratio"]]],[11,"mul",E,E,41,[[["ratio"]],["ratio"]]],[11,"div",E,E,41,[[[T]],["ratio"]]],[11,"div",E,E,41,[[[T]],["ratio"]]],[11,"div",E,E,41,[[["ratio"]],["ratio"]]],[11,"div",E,E,41,[[["ratio"]],["ratio"]]],[11,"eq",E,E,41,[[["self"],["ratio"]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[214]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[214]]],["bool"]]],[11,"add",E,E,41,[[[T]],["ratio"]]],[11,"add",E,E,41,[[[T]],["ratio"]]],[11,"add",E,E,41,[[["ratio"]],["ratio"]]],[11,"add",E,E,41,[[["ratio"]],["ratio"]]],[11,R[172],E,E,41,[[["self"],[T]]]],[11,R[172],E,E,41,[[["self"],["ratio"]]]],[11,R[172],E,E,41,[[["self"],["ratio"]]]],[11,R[172],E,E,41,[[["self"],[T]]]],[11,R[223],E,E,41,[[["self"],["ratio"]],[["ratio"],[R[20],["ratio"]]]]],[11,R[184],E,R[410],41,[[["u32"],["str"]],[["ratio"],[R[214]],[R[24],["ratio",R[214]]]]]],[11,R[173],E,E,41,[[["self"],[T]]]],[11,R[173],E,E,41,[[["self"],[T]]]],[11,R[173],E,E,41,[[["self"],["ratio"]]]],[11,R[173],E,E,41,[[["self"],["ratio"]]]],[11,"inv",E,E,41,[[],["ratio"]]],[11,"neg",E,E,41,[[],["ratio"]]],[11,"fmt",E,E,42,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,"fmt",E,R[408],41,[[["self"],[R[29]]],[["error"],[R[24],["error"]]]]],[11,R[222],E,E,41,[[["self"],["ratio"]],[["ratio"],[R[20],["ratio"]]]]],[11,R[170],E,E,41,[[["self"],["ratio"]]]],[11,R[170],E,E,41,[[["self"],[T]]]],[11,R[170],E,E,41,[[["self"],["ratio"]]]],[11,R[170],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[]]],[11,R[45],E,E,41,[[["self"],["ratio"]],[[R[44]],[R[20],[R[44]]]]]],[11,"sub",E,E,41,[[["ratio"]],["ratio"]]],[11,"sub",E,E,41,[[[T]],["ratio"]]],[11,"sub",E,E,41,[[[T]],["ratio"]]],[11,"sub",E,E,41,[[["ratio"]],["ratio"]]],[11,R[46],E,R[409],41,[[["str"]],[["ratio"],[R[214]],[R[24],["ratio",R[214]]]]]],[11,"one",E,E,41,[[],["ratio"]]],[11,"is_one",E,E,41,[[["self"]],["bool"]]],[11,"sum",E,E,41,[[["i"]],["ratio"]]],[11,"sum",E,E,41,[[["i"]],["ratio"]]],[11,"new",R[347],R[353],0,[[[T]],[R[168]]]],[11,"i",E,R[354],0,[[],[R[168]]]],[11,"norm_sqr",E,R[355],0,[[["self"]],[T]]],[11,"scale",E,R[356],0,[[["self"],[T]],[R[168]]]],[11,"unscale",E,R[357],0,[[["self"],[T]],[R[168]]]],[11,"conj",E,R[358],0,[[["self"]],[R[168]]]],[11,"inv",E,R[359],0,[[["self"]],[R[168]]]],[11,"is_nan",E,R[360],0,[[],["bool"]]],[11,R[182],E,R[361],0,[[],["bool"]]],[11,R[183],E,R[362],0,[[],["bool"]]],[11,R[158],E,R[363],0,[[],["bool"]]],[11,"new",R[348],R[377],36,[[[T]],[R[378]]]],[11,"new",R[350],R[389],41,[[[T]],["ratio"]]],[11,R[390],E,R[391],41,[[[T]],["ratio"]]],[11,"new_raw",E,R[392],41,[[[T]],["ratio"]]],[11,R[393],E,R[394],41,[[["self"]],[T]]],[11,"numer",E,R[395],41,[[["self"]],[T]]],[11,"denom",E,R[396],41,[[["self"]],[T]]],[11,R[397],E,R[398],41,[[["self"]],["bool"]]],[11,"reduced",E,R[399],41,[[["self"]],["ratio"]]],[11,"recip",E,R[400],41,[[["self"]],["ratio"]]],[11,"floor",E,R[401],41,[[["self"]],["ratio"]]],[11,"ceil",E,R[402],41,[[["self"]],["ratio"]]],[11,"round",E,R[403],41,[[["self"]],["ratio"]]],[11,"trunc",E,R[404],41,[[["self"]],["ratio"]]],[11,"fract",E,R[405],41,[[["self"]],["ratio"]]],[11,"pow",E,R[406],41,[[["self"],["i32"]],["ratio"]]],[11,R[407],E,E,41,[[["f"]],[["ratio"],[R[20],["ratio"]]]]]],"p":[[3,"Complex"],[8,R[167]],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,R[98]],[8,R[89]],[8,R[90]],[8,R[91]],[8,R[92]],[8,"PrimInt"],[8,R[84]],[8,R[85]],[8,R[522]],[8,R[86]],[8,"Pow"],[8,"Roots"],[8,R[87]],[8,R[88]],[8,R[93]],[8,R[94]],[8,R[95]],[8,R[96]],[8,"Inv"],[8,"MulAdd"],[8,R[97]],[8,R[99]],[8,R[100]],[8,R[101]],[8,R[102]],[8,R[103]],[4,R[83]],[3,R[82]],[3,R[176]],[3,R[166]],[3,"Range"],[3,R[211]],[3,R[212]],[3,R[213]],[3,"Ratio"],[3,R[219]]]};
searchIndex["num_complex"]={"doc":"Complex numbers.","i":[[3,"Complex","num_complex",R[262],N,N],[12,"re",E,R[263],0,N],[12,"im",E,R[264],0,N],[3,R[176],E,E,N,N],[6,R[351],E,E,N,N],[6,R[352],E,E,N,N],[11,"new",E,R[353],0,[[[T]],[R[168]]]],[11,"i",E,R[354],0,[[],[R[168]]]],[11,"norm_sqr",E,R[355],0,[[["self"]],[T]]],[11,"scale",E,R[356],0,[[["self"],[T]],[R[168]]]],[11,"unscale",E,R[357],0,[[["self"],[T]],[R[168]]]],[11,"conj",E,R[358],0,[[["self"]],[R[168]]]],[11,"inv",E,R[359],0,[[["self"]],[R[168]]]],[11,"is_nan",E,R[360],0,[[],["bool"]]],[11,R[182],E,R[361],0,[[],["bool"]]],[11,R[183],E,R[362],0,[[],["bool"]]],[11,R[158],E,R[363],0,[[],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"from",E,E,0,[[[T]],[R[168]]]],[11,"from",E,E,0,[[[T]],[R[168]]]],[11,"eq",E,E,0,[[["self"],[R[168]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[168]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[169]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[169]]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"add",E,E,0,[[[R[168]]],[R[168]]]],[11,"add",E,E,0,[[[R[168]]],[R[168]]]],[11,"add",E,E,0,[[[T]],[R[168]]]],[11,"add",E,E,0,[[[T]],[R[168]]]],[11,"sub",E,E,0,[[[R[168]]],[R[168]]]],[11,"sub",E,E,0,[[[R[168]]],[R[168]]]],[11,"sub",E,E,0,[[[T]],[R[168]]]],[11,"sub",E,E,0,[[[T]],[R[168]]]],[11,"mul",E,E,0,[[[R[168]]],[R[168]]]],[11,"mul",E,E,0,[[[R[168]]],[R[168]]]],[11,"mul",E,E,0,[[[T]],[R[168]]]],[11,"mul",E,E,0,[[[T]],[R[168]]]],[11,"div",E,E,0,[[[R[168]]],[R[168]]]],[11,"div",E,E,0,[[[R[168]]],[R[168]]]],[11,"div",E,E,0,[[[T]],[R[168]]]],[11,"div",E,E,0,[[[T]],[R[168]]]],[11,"rem",E,E,0,[[[R[168]]],[R[168]]]],[11,"rem",E,E,0,[[[R[168]]],["self"]]],[11,"rem",E,E,0,[[[T]],[R[168]]]],[11,"rem",E,E,0,[[[T]],[R[168]]]],[11,"neg",E,E,0,[[],[R[168]]]],[11,R[170],E,E,0,[[["self"],[R[168]]]]],[11,R[170],E,E,0,[[["self"],[T]]]],[11,R[170],E,E,0,[[["self"],[R[168]]]]],[11,R[170],E,E,0,[[["self"],[T]]]],[11,R[171],E,E,0,[[["self"],[R[168]]]]],[11,R[171],E,E,0,[[["self"],[T]]]],[11,R[171],E,E,0,[[["self"],[R[168]]]]],[11,R[171],E,E,0,[[["self"],[T]]]],[11,R[172],E,E,0,[[["self"],[R[168]]]]],[11,R[172],E,E,0,[[["self"],[T]]]],[11,R[172],E,E,0,[[["self"],[R[168]]]]],[11,R[172],E,E,0,[[["self"],[T]]]],[11,R[173],E,E,0,[[["self"],[R[168]]]]],[11,R[173],E,E,0,[[["self"],[T]]]],[11,R[173],E,E,0,[[["self"],[R[168]]]]],[11,R[173],E,E,0,[[["self"],[T]]]],[11,R[174],E,E,0,[[["self"],[R[168]]]]],[11,R[174],E,E,0,[[["self"],[T]]]],[11,R[174],E,E,0,[[["self"],[R[168]]]]],[11,R[174],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,R[46],E,R[175],0,[[["str"]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,R[364],E,E,0,[[["i"]],["self"]]],[11,R[364],E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[168]]]],[11,R[126],E,E,0,[[],[R[168]]]],[11,R[125],E,E,0,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,R[108],E,E,0,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,"to_u8",E,E,0,[[["self"]],[[R[20],["u8"]],["u8"]]]],[11,"to_u16",E,E,0,[[["self"]],[["u16"],[R[20],["u16"]]]]],[11,"to_u32",E,E,0,[[["self"]],[[R[20],["u32"]],["u32"]]]],[11,"to_u64",E,E,0,[[["self"]],[[R[20],["u64"]],["u64"]]]],[11,"to_i8",E,E,0,[[["self"]],[[R[20],["i8"]],["i8"]]]],[11,"to_i16",E,E,0,[[["self"]],[[R[20],["i16"]],["i16"]]]],[11,"to_i32",E,E,0,[[["self"]],[[R[20],["i32"]],["i32"]]]],[11,"to_i64",E,E,0,[[["self"]],[["i64"],[R[20],["i64"]]]]],[11,R[414],E,E,0,[[["self"]],[[R[20],["u128"]],["u128"]]]],[11,R[413],E,E,0,[[["self"]],[[R[20],["i128"]],["i128"]]]],[11,"to_f32",E,E,0,[[["self"]],[[R[20],["f32"]],["f32"]]]],[11,"to_f64",E,E,0,[[["self"]],[[R[20],["f64"]],["f64"]]]],[11,R[179],E,E,0,[[[R[1]]],[R[20]]]],[11,R[177],E,E,0,[[["isize"]],[R[20]]]],[11,R[416],E,E,0,[[["u8"]],[R[20]]]],[11,R[289],E,E,0,[[["u16"]],[R[20]]]],[11,R[290],E,E,0,[[["u32"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[415],E,E,0,[[["i8"]],[R[20]]]],[11,R[287],E,E,0,[[["i16"]],[R[20]]]],[11,R[288],E,E,0,[[["i32"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,"from",E,E,0,[[[R[181]]],[R[20]]]],[11,"as_",E,E,0,[[],[U]]],[11,R[184],E,R[175],0,[[["u32"],["str"]],[R[24]]]],[11,"zero",E,E,0,[[],[R[168]]]],[11,R[411],E,E,0,[[["self"]],["bool"]]],[11,"one",E,E,0,[[],[R[168]]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"inv",E,E,0,[[],[R[168]]]]],"p":[[3,"Complex"],[3,R[176]]]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","i":[[3,R[166],"num_integer",R[365],N,N],[5,"sqrt",E,R[161],N,[[["roots"]],["roots"]]],[5,"cbrt",E,R[162],N,[[["roots"]],["roots"]]],[5,R[366],E,R[160],N,[[["roots"],["u32"]],["roots"]]],[5,"div_rem",E,R[367],N,[[[R[159]]]]],[5,R[163],E,R[368],N,[[[R[159]]],[R[159]]]],[5,R[164],E,R[369],N,[[[R[159]]],[R[159]]]],[5,R[165],E,R[370],N,[[[R[159]]]]],[5,"gcd",E,R[371],N,[[[R[159]]],[R[159]]]],[5,"lcm",E,R[372],N,[[[R[159]]],[R[159]]]],[5,"binomial",E,R[373],N,[[["clone"],[R[159]]],[["clone"],[R[159]]]]],[5,R[374],E,R[375],N,[[],[["clone"],[R[159]]]]],[8,"Roots",E,R[376],N,N],[10,R[366],E,R[160],0,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[161],0,[[["self"]],["self"]]],[11,"cbrt",E,R[162],0,[[["self"]],["self"]]],[8,R[167],E,E,N,N],[10,R[163],E,R[265],1,[[["self"]],["self"]]],[10,R[164],E,R[266],1,[[["self"]],["self"]]],[10,"gcd",E,R[267],1,[[["self"]],["self"]]],[10,"lcm",E,R[268],1,[[["self"]],["self"]]],[10,"divides",E,R[269],1,[[["self"]],["bool"]]],[10,R[270],E,R[271],1,[[["self"]],["bool"]]],[10,"is_even",E,R[272],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[273],1,[[["self"]],["bool"]]],[10,"div_rem",E,R[274],1,[[["self"]]]],[11,R[165],E,R[275],1,[[["self"]]]],[11,"new",E,R[377],2,[[[T]],[R[378]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[21],E,E,2,[[[U]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[],[R[24]]]],[11,R[205],E,E,2,[[],["i"]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[27]]]],[11,"next",E,E,2,[[["self"]],[R[20]]]],[11,"sqrt",E,R[161],0,[[["self"]],["self"]]],[11,"cbrt",E,R[162],0,[[["self"]],["self"]]]],"p":[[8,"Roots"],[8,R[167]],[3,R[166]]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter",R[379],N,N],[3,R[211],E,R[380],N,N],[3,R[212],E,R[381],N,N],[3,R[213],E,R[382],N,N],[5,"range",E,R[276],N,[[["a"]],["range"]]],[5,R[277],E,R[278],N,[[["a"]],[R[208]]]],[5,R[279],E,R[280],N,[[["a"]],[R[209]]]],[5,R[281],E,R[282],N,[[["a"]],[R[210]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[205],E,E,0,[[],["i"]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[205],E,E,1,[[],["i"]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[21],E,E,2,[[[U]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[],[R[24]]]],[11,R[205],E,E,2,[[],["i"]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[27]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[205],E,E,3,[[],["i"]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,"next",E,E,0,[[["self"]],[R[20]]]],[11,R[206],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[R[20]]]],[11,R[206],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[R[20]]]],[11,"next",E,E,3,[[["self"]],[R[20]]]],[11,R[207],E,E,0,[[["self"]],[R[20]]]],[11,R[207],E,E,1,[[["self"]],[R[20]]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,1,[[["self"]],[R[208]]]],[11,"clone",E,E,2,[[["self"]],[R[209]]]],[11,"clone",E,E,3,[[["self"]],[R[210]]]]],"p":[[3,"Range"],[3,R[211]],[3,R[212]],[3,R[213]]]};
searchIndex["num_rational"]={"doc":"Rational numbers","i":[[3,"Ratio","num_rational",R[383],N,N],[3,R[219],E,E,N,N],[6,R[384],E,R[346],N,N],[6,R[385],E,R[386],N,N],[6,R[387],E,R[388],N,N],[11,"new",E,R[389],0,[[[T]],["ratio"]]],[11,R[390],E,R[391],0,[[[T]],["ratio"]]],[11,"new_raw",E,R[392],0,[[[T]],["ratio"]]],[11,R[393],E,R[394],0,[[["self"]],[T]]],[11,"numer",E,R[395],0,[[["self"]],[T]]],[11,"denom",E,R[396],0,[[["self"]],[T]]],[11,R[397],E,R[398],0,[[["self"]],["bool"]]],[11,"reduced",E,R[399],0,[[["self"]],["ratio"]]],[11,"recip",E,R[400],0,[[["self"]],["ratio"]]],[11,"floor",E,R[401],0,[[["self"]],["ratio"]]],[11,"ceil",E,R[402],0,[[["self"]],["ratio"]]],[11,"round",E,R[403],0,[[["self"]],["ratio"]]],[11,"trunc",E,R[404],0,[[["self"]],["ratio"]]],[11,"fract",E,R[405],0,[[["self"]],["ratio"]]],[11,"pow",E,R[406],0,[[["self"],["i32"]],["ratio"]]],[11,R[407],E,E,0,[[["floatcore"],["numcast"]],[[R[20],["ratio"]],["ratio"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"from",E,E,0,[[[T]],["ratio"]]],[11,"from",E,E,0,[[],["ratio"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[214]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[214]]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[44]]]],[11,R[45],E,E,0,[[["self"]],[[R[44]],[R[20],[R[44]]]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"neg",E,E,0,[[],["ratio"]]],[11,R[170],E,E,0,[[["self"],["ratio"]]]],[11,R[170],E,E,0,[[["self"],[T]]]],[11,R[170],E,E,0,[[["self"],["ratio"]]]],[11,R[170],E,E,0,[[["self"],[T]]]],[11,R[171],E,E,0,[[["self"],["ratio"]]]],[11,R[171],E,E,0,[[["self"],[T]]]],[11,R[171],E,E,0,[[["self"],["ratio"]]]],[11,R[171],E,E,0,[[["self"],[T]]]],[11,R[172],E,E,0,[[["self"],["ratio"]]]],[11,R[172],E,E,0,[[["self"],[T]]]],[11,R[172],E,E,0,[[["self"],["ratio"]]]],[11,R[172],E,E,0,[[["self"],[T]]]],[11,R[173],E,E,0,[[["self"],["ratio"]]]],[11,R[173],E,E,0,[[["self"],[T]]]],[11,R[173],E,E,0,[[["self"],["ratio"]]]],[11,R[173],E,E,0,[[["self"],[T]]]],[11,R[174],E,E,0,[[["self"],["ratio"]]]],[11,R[174],E,E,0,[[["self"],[T]]]],[11,R[174],E,E,0,[[["self"],["ratio"]]]],[11,R[174],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,R[408],0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,R[46],E,R[409],0,[[["str"]],[[R[24],["ratio",R[214]]],[R[214]],["ratio"]]]],[11,"into",E,E,0,[[]]],[11,R[364],E,E,0,[[["i"]],["self"]]],[11,R[364],E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"clone",E,E,0,[[["self"]],["ratio"]]],[11,"clone",E,E,1,[[["self"]],[R[214]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[215],E,E,0,[[["i64"]],[R[20]]]],[11,R[178],E,E,0,[[["i128"]],[R[20]]]],[11,R[216],E,E,0,[[["u64"]],[R[20]]]],[11,R[180],E,E,0,[[["u128"]],[R[20]]]],[11,R[217],E,E,0,[[["f32"]],[R[20]]]],[11,R[218],E,E,0,[[["f64"]],[R[20]]]],[11,R[184],E,R[410],0,[[["u32"],["str"]],[[R[24],["ratio",R[214]]],[R[214]],["ratio"]]]],[11,"zero",E,E,0,[[],["ratio"]]],[11,R[411],E,E,0,[[["self"]],["bool"]]],[11,"one",E,E,0,[[],["ratio"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,R[221],E,E,0,[[["self"],["ratio"]],[[R[20],["ratio"]],["ratio"]]]],[11,R[220],E,E,0,[[["self"],["ratio"]],[[R[20],["ratio"]],["ratio"]]]],[11,R[222],E,E,0,[[["self"],["ratio"]],[[R[20],["ratio"]],["ratio"]]]],[11,R[223],E,E,0,[[["self"],["ratio"]],[[R[20],["ratio"]],["ratio"]]]],[11,"inv",E,E,0,[[],["ratio"]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[[R[1]]],["ratio"]]],[11,"pow",E,E,0,[[[R[1]]],["ratio"]]],[11,"abs",E,E,0,[[["self"]],["ratio"]]],[11,R[412],E,E,0,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,0,[[["self"]],["ratio"]]],[11,R[224],E,E,0,[[["self"]],["bool"]]],[11,R[225],E,E,0,[[["self"]],["bool"]]]],"p":[[3,"Ratio"],[3,R[219]]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[3,R[82],R[68],E,N,N],[12,"kind",E,E,0,N],[4,R[83],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,R[345],N,[[[R[67]]],[R[67]]]],[0,"bounds",E,E,N,N],[8,"Bounded","num_traits::bounds",R[283],N,N],[10,R[69],E,R[284],2,[[],["self"]]],[10,R[70],E,R[285],2,[[],["self"]]],[0,"cast",R[68],E,N,N],[5,"cast","num_traits::cast",R[258],N,[[["numcast"]],[["numcast"],[R[20]]]]],[8,R[84],E,R[226],N,N],[11,R[108],E,R[227],3,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,"to_i8",E,R[228],3,[[["self"]],[[R[20],["i8"]],["i8"]]]],[11,"to_i16",E,R[229],3,[[["self"]],[[R[20],["i16"]],["i16"]]]],[11,"to_i32",E,R[230],3,[[["self"]],[[R[20],["i32"]],["i32"]]]],[10,"to_i64",E,R[231],3,[[["self"]],[["i64"],[R[20],["i64"]]]]],[11,R[413],E,R[232],3,[[["self"]],[[R[20],["i128"]],["i128"]]]],[11,R[125],E,R[233],3,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,"to_u8",E,R[234],3,[[["self"]],[[R[20],["u8"]],["u8"]]]],[11,"to_u16",E,R[235],3,[[["self"]],[["u16"],[R[20],["u16"]]]]],[11,"to_u32",E,R[236],3,[[["self"]],[[R[20],["u32"]],["u32"]]]],[10,"to_u64",E,R[237],3,[[["self"]],[[R[20],["u64"]],["u64"]]]],[11,R[414],E,R[238],3,[[["self"]],[[R[20],["u128"]],["u128"]]]],[11,"to_f32",E,R[239],3,[[["self"]],[[R[20],["f32"]],["f32"]]]],[11,"to_f64",E,R[240],3,[[["self"]],[[R[20],["f64"]],["f64"]]]],[8,R[85],E,R[241],N,N],[11,R[177],E,R[242],4,[[["isize"]],[R[20]]]],[11,R[415],E,R[243],4,[[["i8"]],[R[20]]]],[11,R[287],E,R[244],4,[[["i16"]],[R[20]]]],[11,R[288],E,R[245],4,[[["i32"]],[R[20]]]],[10,R[215],E,R[246],4,[[["i64"]],[R[20]]]],[11,R[178],E,R[247],4,[[["i128"]],[R[20]]]],[11,R[179],E,R[248],4,[[[R[1]]],[R[20]]]],[11,R[416],E,R[249],4,[[["u8"]],[R[20]]]],[11,R[289],E,R[250],4,[[["u16"]],[R[20]]]],[11,R[290],E,R[251],4,[[["u32"]],[R[20]]]],[10,R[216],E,R[252],4,[[["u64"]],[R[20]]]],[11,R[180],E,R[253],4,[[["u128"]],[R[20]]]],[11,R[217],E,R[254],4,[[["f32"]],[R[20]]]],[11,R[218],E,R[255],4,[[["f64"]],[R[20]]]],[8,R[522],E,R[256],N,N],[10,"from",E,R[257],5,[[[R[181]]],[R[20]]]],[8,R[86],E,R[291],N,N],[10,"as_",E,R[292],6,[[],[T]]],[0,"float",R[68],E,N,N],[8,R[87],"num_traits::float",R[417],N,N],[10,"infinity",E,R[418],7,[[],["self"]]],[10,R[419],E,R[420],7,[[],["self"]]],[10,"nan",E,R[421],7,[[],["self"]]],[10,"neg_zero",E,R[422],7,[[],["self"]]],[10,R[69],E,R[423],7,[[],["self"]]],[10,R[424],E,R[425],7,[[],["self"]]],[10,"epsilon",E,R[426],7,[[],["self"]]],[10,R[70],E,R[427],7,[[],["self"]]],[11,"is_nan",E,R[428],7,[[],["bool"]]],[11,R[182],E,R[429],7,[[],["bool"]]],[11,R[183],E,R[430],7,[[],["bool"]]],[11,R[158],E,R[431],7,[[],["bool"]]],[10,"classify",E,R[432],7,[[],[R[433]]]],[11,"floor",E,R[434],7,[[],["self"]]],[11,"ceil",E,R[435],7,[[],["self"]]],[11,"round",E,R[436],7,[[],["self"]]],[11,"trunc",E,R[437],7,[[],["self"]]],[11,"fract",E,R[438],7,[[],["self"]]],[11,"abs",E,R[439],7,[[],["self"]]],[11,"signum",E,R[440],7,[[],["self"]]],[11,R[441],E,R[442],7,[[],["bool"]]],[11,R[443],E,R[444],7,[[],["bool"]]],[11,"min",E,R[445],7,[[],["self"]]],[11,"max",E,R[446],7,[[],["self"]]],[11,"recip",E,R[447],7,[[],["self"]]],[11,"powi",E,R[448],7,[[["i32"]],["self"]]],[10,R[449],E,R[450],7,[[],["self"]]],[10,R[451],E,R[452],7,[[],["self"]]],[10,R[453],E,R[454],7,[[]]],[8,R[88],E,E,N,N],[10,"E",E,R[455],8,[[],["self"]]],[10,R[456],E,R[457],8,[[],["self"]]],[10,R[458],E,R[459],8,[[],["self"]]],[10,R[460],E,R[461],8,[[],["self"]]],[10,R[462],E,R[463],8,[[],["self"]]],[10,R[464],E,R[465],8,[[],["self"]]],[10,R[466],E,R[467],8,[[],["self"]]],[10,R[468],E,R[469],8,[[],["self"]]],[10,R[470],E,R[471],8,[[],["self"]]],[10,R[472],E,R[473],8,[[],["self"]]],[10,"LN_10",E,R[474],8,[[],["self"]]],[10,"LN_2",E,R[475],8,[[],["self"]]],[10,"LOG10_E",E,R[476],8,[[],["self"]]],[10,"LOG2_E",E,R[477],8,[[],["self"]]],[10,"PI",E,R[478],8,[[],["self"]]],[10,"SQRT_2",E,R[479],8,[[],["self"]]],[0,R[480],R[68],E,N,N],[5,"zero","num_traits::identities",R[299],N,[[],["zero"]]],[5,"one",E,R[300],N,[[],["one"]]],[8,"Zero",E,R[293],N,N],[10,"zero",E,R[294],9,[[],["self"]]],[10,R[411],E,R[295],9,[[["self"]],["bool"]]],[8,"One",E,R[296],N,N],[10,"one",E,R[297],10,[[],["self"]]],[11,"is_one",E,R[298],10,[[["self"]],["bool"]]],[0,"int",R[68],E,N,N],[8,"PrimInt","num_traits::int",E,N,N],[10,R[301],E,R[302],11,[[],["u32"]]],[10,R[303],E,R[304],11,[[],["u32"]]],[10,R[305],E,R[306],11,[[],["u32"]]],[10,R[307],E,R[308],11,[[],["u32"]]],[10,R[309],E,R[71],11,[[["u32"]],["self"]]],[10,R[310],E,R[72],11,[[["u32"]],["self"]]],[10,R[311],E,R[71],11,[[["u32"]],["self"]]],[10,R[312],E,R[72],11,[[["u32"]],["self"]]],[10,R[313],E,R[71],11,[[["u32"]],["self"]]],[10,R[314],E,R[72],11,[[["u32"]],["self"]]],[10,R[315],E,R[316],11,[[],["self"]]],[10,"from_be",E,R[317],11,[[],["self"]]],[10,"from_le",E,R[318],11,[[],["self"]]],[10,"to_be",E,R[319],11,[[],["self"]]],[10,"to_le",E,R[320],11,[[],["self"]]],[10,"pow",E,R[321],11,[[["u32"]],["self"]]],[0,"ops",R[68],E,N,N],[0,"checked",R[74],E,N,N],[8,R[89],"num_traits::ops::checked",R[322],N,N],[10,R[220],E,R[323],12,[[["self"]],[R[20]]]],[8,R[90],E,R[324],N,N],[10,R[221],E,R[325],13,[[["self"]],[R[20]]]],[8,R[91],E,R[326],N,N],[10,R[222],E,R[327],14,[[["self"]],[R[20]]]],[8,R[92],E,R[328],N,N],[10,R[223],E,R[329],15,[[["self"]],[R[20]]]],[8,R[93],E,R[481],N,N],[10,R[482],E,R[483],16,[[["self"]],[R[20]]]],[8,R[94],E,R[484],N,N],[10,R[485],E,R[486],17,[[["self"]],[R[20]]]],[8,R[95],E,R[487],N,N],[10,R[488],E,R[73],18,[[["self"],["u32"]],[R[20]]]],[8,R[96],E,R[489],N,N],[10,R[490],E,R[73],19,[[["self"],["u32"]],[R[20]]]],[0,"inv",R[74],E,N,N],[8,"Inv","num_traits::ops::inv",R[491],N,N],[16,"Output",E,R[77],20,N],[10,"inv",E,R[492],20,[[]]],[0,"mul_add",R[74],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[493],N,N],[16,"Output",E,R[494],21,N],[10,"mul_add",E,R[75],21,[[["a"],["b"]]]],[8,R[97],E,R[495],N,N],[10,R[496],E,R[75],22,[[["self"],["a"],["b"]]]],[0,R[497],R[74],E,N,N],[8,R[98],"num_traits::ops::saturating",R[331],N,N],[10,R[332],E,R[333],23,[[],["self"]]],[10,R[334],E,R[335],23,[[],["self"]]],[0,"wrapping",R[74],E,N,N],[8,R[99],"num_traits::ops::wrapping",R[498],N,N],[10,R[499],E,R[500],24,[[["self"]],["self"]]],[8,R[100],E,R[501],N,N],[10,R[502],E,R[503],25,[[["self"]],["self"]]],[8,R[101],E,R[504],N,N],[10,R[505],E,R[506],26,[[["self"]],["self"]]],[8,R[102],E,R[507],N,N],[10,R[508],E,R[509],27,[[["self"],["u32"]],["self"]]],[8,R[103],E,R[510],N,N],[10,R[511],E,R[512],28,[[["self"],["u32"]],["self"]]],[0,"pow",R[68],E,N,N],[5,"pow","num_traits::pow",R[259],N,[[[R[1]],["clone"],["mul"],["one"]],[["clone"],["mul"],["one"]]]],[5,R[260],E,R[261],N,[[[R[1]],["clone"],[R[76]],["one"]],[["one"],["clone"],[R[20]],[R[76]]]]],[8,"Pow",E,R[336],N,N],[16,"Output",E,R[77],29,N],[10,"pow",E,R[337],29,[[["rhs"]]]],[0,"sign",R[68],E,N,N],[5,"abs","num_traits::sign",R[79],N,[[[R[78]]],[R[78]]]],[5,R[412],E,R[80],N,[[[R[78]]],[R[78]]]],[5,"signum",E,R[81],N,[[[R[78]]],[R[78]]]],[8,"Signed",E,R[338],N,N],[10,"abs",E,R[79],30,[[["self"]],["self"]]],[10,R[412],E,R[80],30,[[["self"]],["self"]]],[10,"signum",E,R[81],30,[[["self"]],["self"]]],[10,R[224],E,R[339],30,[[["self"]],["bool"]]],[10,R[225],E,R[340],30,[[["self"]],["bool"]]],[8,R[127],E,R[341],N,N],[8,"Num",R[68],R[342],N,N],[16,R[343],E,E,31,N],[10,R[184],E,R[344],31,[[["u32"],["str"]],[R[24]]]],[8,"NumOps",E,R[513],N,N],[8,"NumRef",E,R[514],N,N],[8,"RefNum",E,R[515],N,N],[8,R[516],E,R[517],N,N],[8,R[518],E,R[519],N,N],[8,R[520],E,R[521],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]]],"p":[[3,R[82]],[4,R[83]],[8,"Bounded"],[8,R[84]],[8,R[85]],[8,R[522]],[8,R[86]],[8,R[87]],[8,R[88]],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,R[89]],[8,R[90]],[8,R[91]],[8,R[92]],[8,R[93]],[8,R[94]],[8,R[95]],[8,R[96]],[8,"Inv"],[8,"MulAdd"],[8,R[97]],[8,R[98]],[8,R[99]],[8,R[100]],[8,R[101]],[8,R[102]],[8,R[103]],[8,"Pow"],[8,"Signed"],[8,"Num"]]};
searchIndex["pebble_util"]={"doc":E,"i":[[3,R[526],R[524],"Values can be wrapped in this type when they're printed to…",N,N],[12,"0",E,E,0,N],[3,R[528],E,"A guard for when you want to store some data in a static,…",N,N],[0,"bitmap",E,"It's useful to be able to model an integral type such as…",N,N],[8,"Bitmap","pebble_util::bitmap",E,N,N],[10,"alloc",E,R[523],1,[[["self"],[R[1]]],[[R[20],[R[1]]],[R[1]]]]],[8,R[527],E,"Like `Bitmap`, but for arrays. This is unfortunately…",N,N],[10,"alloc",E,R[523],2,[[["self"],[R[1]]],[[R[20],[R[1]]],[R[1]]]]],[11,"uninit",R[524],E,3,[[],["initguard"]]],[11,"initialize",E,"Initialize this `InitGuard`, allowing it to be read from…",3,[[["self"],[T]]]],[11,"get",E,R[525],3,[[["self"]],[T]]],[11,"try_get",E,R[525],3,[[["self"]],[[R[20]],[T]]]],[0,"math",E,E,N,N],[5,"flooring_log2","pebble_util::math","Fast integer `log2` that floors to the lower power-of-2 if…",N,[[["u64"]],["u64"]]],[5,R[550],E,E,N,[[[R[1]]],[R[1]]]],[5,R[554],E,E,N,[[[R[1]]],[R[1]]]],[5,"ceiling_log2",E,E,N,[[["u64"]],["u64"]]],[5,"ceiling_integer_divide",E,"Divide `x` by `divide_by`, taking the ceiling if it does…",N,[[["u64"]],["u64"]]],[14,"assert_first_call",R[524],"This macro should be called at the beginning of functions…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]]],"p":[[3,R[526]],[8,"Bitmap"],[8,R[527]],[3,R[528]]]};
searchIndex["spin"]={"doc":"Synchronization primitives based on spinning","i":[[3,"Mutex","spin","This type provides MUTual EXclusion based on spinning.",N,N],[3,R[30],E,"A guard to which the protected data can be accessed",N,N],[3,"RwLock",E,"A reader-writer lock",N,N],[3,R[31],E,"A guard to which the protected data can be read",N,N],[3,R[32],E,"A guard to which the protected data can be written",N,N],[3,"Once",E,"A synchronization primitive which can be used to run a…",N,N],[11,"new",E,R[16],0,[[[T]],["mutex"]]],[11,R[17],E,"Consumes this mutex, returning the underlying data.",0,[[],[T]]],[11,"lock",E,"Locks the spinlock and returns a guard.",0,[[["self"]],[R[15]]]],[11,"force_unlock",E,"Force unlock the spinlock.",0,[[["self"]]]],[11,"try_lock",E,"Tries to lock the mutex. If it is already locked, it will…",0,[[["self"]],[[R[20],[R[15]]],[R[15]]]]],[11,"new",E,R[16],1,[[[T]],["rwlock"]]],[11,R[17],E,"Consumes this `RwLock`, returning the underlying data.",1,[[],[T]]],[11,"read",E,"Locks this rwlock with shared read access, blocking the…",1,[[["self"]],[R[18]]]],[11,"try_read",E,"Attempt to acquire this lock with shared read access.",1,[[["self"]],[[R[18]],[R[20],[R[18]]]]]],[11,"force_read_decrement",E,"Force decrement the reader count.",1,[[["self"]]]],[11,"force_write_unlock",E,"Force unlock exclusive write access.",1,[[["self"]]]],[11,"write",E,"Lock this rwlock with exclusive write access, blocking the…",1,[[["self"]],[R[19]]]],[11,"try_write",E,"Attempt to lock this rwlock with exclusive write access.",1,[[["self"]],[[R[20],[R[19]]],[R[19]]]]],[18,"INIT",E,"Initialization constant of `Once`.",2,N],[11,"new",E,"Creates a new `Once` value.",2,[[],["once"]]],[11,"call_once",E,"Performs an initialization routine once and only once. The…",2,[[["self"],["f"]],[T]]],[11,"try",E,"Returns a pointer iff the `Once` was previously initialized",2,[[["self"]],[[T],[R[20]]]]],[11,"wait",E,"Like try, but will spin if the `Once` is in the process of…",2,[[["self"]],[[T],[R[20]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[[U]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[],[R[24]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[27]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[21],E,E,5,[[[U]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,R[22],E,E,5,[[],[R[24]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"]],[R[27]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[21],E,E,2,[[[U]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[],[R[24]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[27]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,"deref",E,E,3,[[["self"]],[T]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,"deref",E,E,5,[[["self"]],[T]]],[11,"drop",E,"The dropping of the MutexGuard will release the lock it…",3,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[24]]]],[11,R[126],E,E,0,[[],["mutex"]]],[11,R[126],E,E,1,[[],["rwlock"]]]],"p":[[3,"Mutex"],[3,"RwLock"],[3,"Once"],[3,R[30]],[3,R[31]],[3,R[32]]]};
searchIndex["typenum"]={"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater",R[109],R[104],N,N],[3,"Less",E,R[104],N,N],[3,"Equal",E,R[104],N,N],[0,"consts",E,"Type aliases for many constants.",N,N],[6,"True","typenum::consts",E,N,N],[6,"False",E,E,N,N],[6,"U0",E,E,N,N],[6,"U1",E,E,N,N],[6,"P1",E,E,N,N],[6,"N1",E,E,N,N],[6,"U2",E,E,N,N],[6,"P2",E,E,N,N],[6,"N2",E,E,N,N],[6,"U3",E,E,N,N],[6,"P3",E,E,N,N],[6,"N3",E,E,N,N],[6,"U4",E,E,N,N],[6,"P4",E,E,N,N],[6,"N4",E,E,N,N],[6,"U5",E,E,N,N],[6,"P5",E,E,N,N],[6,"N5",E,E,N,N],[6,"U6",E,E,N,N],[6,"P6",E,E,N,N],[6,"N6",E,E,N,N],[6,"U7",E,E,N,N],[6,"P7",E,E,N,N],[6,"N7",E,E,N,N],[6,"U8",E,E,N,N],[6,"P8",E,E,N,N],[6,"N8",E,E,N,N],[6,"U9",E,E,N,N],[6,"P9",E,E,N,N],[6,"N9",E,E,N,N],[6,"U10",E,E,N,N],[6,"P10",E,E,N,N],[6,"N10",E,E,N,N],[6,"U11",E,E,N,N],[6,"P11",E,E,N,N],[6,"N11",E,E,N,N],[6,"U12",E,E,N,N],[6,"P12",E,E,N,N],[6,"N12",E,E,N,N],[6,"U13",E,E,N,N],[6,"P13",E,E,N,N],[6,"N13",E,E,N,N],[6,"U14",E,E,N,N],[6,"P14",E,E,N,N],[6,"N14",E,E,N,N],[6,"U15",E,E,N,N],[6,"P15",E,E,N,N],[6,"N15",E,E,N,N],[6,"U16",E,E,N,N],[6,"P16",E,E,N,N],[6,"N16",E,E,N,N],[6,"U17",E,E,N,N],[6,"P17",E,E,N,N],[6,"N17",E,E,N,N],[6,"U18",E,E,N,N],[6,"P18",E,E,N,N],[6,"N18",E,E,N,N],[6,"U19",E,E,N,N],[6,"P19",E,E,N,N],[6,"N19",E,E,N,N],[6,"U20",E,E,N,N],[6,"P20",E,E,N,N],[6,"N20",E,E,N,N],[6,"U21",E,E,N,N],[6,"P21",E,E,N,N],[6,"N21",E,E,N,N],[6,"U22",E,E,N,N],[6,"P22",E,E,N,N],[6,"N22",E,E,N,N],[6,"U23",E,E,N,N],[6,"P23",E,E,N,N],[6,"N23",E,E,N,N],[6,"U24",E,E,N,N],[6,"P24",E,E,N,N],[6,"N24",E,E,N,N],[6,"U25",E,E,N,N],[6,"P25",E,E,N,N],[6,"N25",E,E,N,N],[6,"U26",E,E,N,N],[6,"P26",E,E,N,N],[6,"N26",E,E,N,N],[6,"U27",E,E,N,N],[6,"P27",E,E,N,N],[6,"N27",E,E,N,N],[6,"U28",E,E,N,N],[6,"P28",E,E,N,N],[6,"N28",E,E,N,N],[6,"U29",E,E,N,N],[6,"P29",E,E,N,N],[6,"N29",E,E,N,N],[6,"U30",E,E,N,N],[6,"P30",E,E,N,N],[6,"N30",E,E,N,N],[6,"U31",E,E,N,N],[6,"P31",E,E,N,N],[6,"N31",E,E,N,N],[6,"U32",E,E,N,N],[6,"P32",E,E,N,N],[6,"N32",E,E,N,N],[6,"U33",E,E,N,N],[6,"P33",E,E,N,N],[6,"N33",E,E,N,N],[6,"U34",E,E,N,N],[6,"P34",E,E,N,N],[6,"N34",E,E,N,N],[6,"U35",E,E,N,N],[6,"P35",E,E,N,N],[6,"N35",E,E,N,N],[6,"U36",E,E,N,N],[6,"P36",E,E,N,N],[6,"N36",E,E,N,N],[6,"U37",E,E,N,N],[6,"P37",E,E,N,N],[6,"N37",E,E,N,N],[6,"U38",E,E,N,N],[6,"P38",E,E,N,N],[6,"N38",E,E,N,N],[6,"U39",E,E,N,N],[6,"P39",E,E,N,N],[6,"N39",E,E,N,N],[6,"U40",E,E,N,N],[6,"P40",E,E,N,N],[6,"N40",E,E,N,N],[6,"U41",E,E,N,N],[6,"P41",E,E,N,N],[6,"N41",E,E,N,N],[6,"U42",E,E,N,N],[6,"P42",E,E,N,N],[6,"N42",E,E,N,N],[6,"U43",E,E,N,N],[6,"P43",E,E,N,N],[6,"N43",E,E,N,N],[6,"U44",E,E,N,N],[6,"P44",E,E,N,N],[6,"N44",E,E,N,N],[6,"U45",E,E,N,N],[6,"P45",E,E,N,N],[6,"N45",E,E,N,N],[6,"U46",E,E,N,N],[6,"P46",E,E,N,N],[6,"N46",E,E,N,N],[6,"U47",E,E,N,N],[6,"P47",E,E,N,N],[6,"N47",E,E,N,N],[6,"U48",E,E,N,N],[6,"P48",E,E,N,N],[6,"N48",E,E,N,N],[6,"U49",E,E,N,N],[6,"P49",E,E,N,N],[6,"N49",E,E,N,N],[6,"U50",E,E,N,N],[6,"P50",E,E,N,N],[6,"N50",E,E,N,N],[6,"U51",E,E,N,N],[6,"P51",E,E,N,N],[6,"N51",E,E,N,N],[6,"U52",E,E,N,N],[6,"P52",E,E,N,N],[6,"N52",E,E,N,N],[6,"U53",E,E,N,N],[6,"P53",E,E,N,N],[6,"N53",E,E,N,N],[6,"U54",E,E,N,N],[6,"P54",E,E,N,N],[6,"N54",E,E,N,N],[6,"U55",E,E,N,N],[6,"P55",E,E,N,N],[6,"N55",E,E,N,N],[6,"U56",E,E,N,N],[6,"P56",E,E,N,N],[6,"N56",E,E,N,N],[6,"U57",E,E,N,N],[6,"P57",E,E,N,N],[6,"N57",E,E,N,N],[6,"U58",E,E,N,N],[6,"P58",E,E,N,N],[6,"N58",E,E,N,N],[6,"U59",E,E,N,N],[6,"P59",E,E,N,N],[6,"N59",E,E,N,N],[6,"U60",E,E,N,N],[6,"P60",E,E,N,N],[6,"N60",E,E,N,N],[6,"U61",E,E,N,N],[6,"P61",E,E,N,N],[6,"N61",E,E,N,N],[6,"U62",E,E,N,N],[6,"P62",E,E,N,N],[6,"N62",E,E,N,N],[6,"U63",E,E,N,N],[6,"P63",E,E,N,N],[6,"N63",E,E,N,N],[6,"U64",E,E,N,N],[6,"P64",E,E,N,N],[6,"N64",E,E,N,N],[6,"U65",E,E,N,N],[6,"P65",E,E,N,N],[6,"N65",E,E,N,N],[6,"U66",E,E,N,N],[6,"P66",E,E,N,N],[6,"N66",E,E,N,N],[6,"U67",E,E,N,N],[6,"P67",E,E,N,N],[6,"N67",E,E,N,N],[6,"U68",E,E,N,N],[6,"P68",E,E,N,N],[6,"N68",E,E,N,N],[6,"U69",E,E,N,N],[6,"P69",E,E,N,N],[6,"N69",E,E,N,N],[6,"U70",E,E,N,N],[6,"P70",E,E,N,N],[6,"N70",E,E,N,N],[6,"U71",E,E,N,N],[6,"P71",E,E,N,N],[6,"N71",E,E,N,N],[6,"U72",E,E,N,N],[6,"P72",E,E,N,N],[6,"N72",E,E,N,N],[6,"U73",E,E,N,N],[6,"P73",E,E,N,N],[6,"N73",E,E,N,N],[6,"U74",E,E,N,N],[6,"P74",E,E,N,N],[6,"N74",E,E,N,N],[6,"U75",E,E,N,N],[6,"P75",E,E,N,N],[6,"N75",E,E,N,N],[6,"U76",E,E,N,N],[6,"P76",E,E,N,N],[6,"N76",E,E,N,N],[6,"U77",E,E,N,N],[6,"P77",E,E,N,N],[6,"N77",E,E,N,N],[6,"U78",E,E,N,N],[6,"P78",E,E,N,N],[6,"N78",E,E,N,N],[6,"U79",E,E,N,N],[6,"P79",E,E,N,N],[6,"N79",E,E,N,N],[6,"U80",E,E,N,N],[6,"P80",E,E,N,N],[6,"N80",E,E,N,N],[6,"U81",E,E,N,N],[6,"P81",E,E,N,N],[6,"N81",E,E,N,N],[6,"U82",E,E,N,N],[6,"P82",E,E,N,N],[6,"N82",E,E,N,N],[6,"U83",E,E,N,N],[6,"P83",E,E,N,N],[6,"N83",E,E,N,N],[6,"U84",E,E,N,N],[6,"P84",E,E,N,N],[6,"N84",E,E,N,N],[6,"U85",E,E,N,N],[6,"P85",E,E,N,N],[6,"N85",E,E,N,N],[6,"U86",E,E,N,N],[6,"P86",E,E,N,N],[6,"N86",E,E,N,N],[6,"U87",E,E,N,N],[6,"P87",E,E,N,N],[6,"N87",E,E,N,N],[6,"U88",E,E,N,N],[6,"P88",E,E,N,N],[6,"N88",E,E,N,N],[6,"U89",E,E,N,N],[6,"P89",E,E,N,N],[6,"N89",E,E,N,N],[6,"U90",E,E,N,N],[6,"P90",E,E,N,N],[6,"N90",E,E,N,N],[6,"U91",E,E,N,N],[6,"P91",E,E,N,N],[6,"N91",E,E,N,N],[6,"U92",E,E,N,N],[6,"P92",E,E,N,N],[6,"N92",E,E,N,N],[6,"U93",E,E,N,N],[6,"P93",E,E,N,N],[6,"N93",E,E,N,N],[6,"U94",E,E,N,N],[6,"P94",E,E,N,N],[6,"N94",E,E,N,N],[6,"U95",E,E,N,N],[6,"P95",E,E,N,N],[6,"N95",E,E,N,N],[6,"U96",E,E,N,N],[6,"P96",E,E,N,N],[6,"N96",E,E,N,N],[6,"U97",E,E,N,N],[6,"P97",E,E,N,N],[6,"N97",E,E,N,N],[6,"U98",E,E,N,N],[6,"P98",E,E,N,N],[6,"N98",E,E,N,N],[6,"U99",E,E,N,N],[6,"P99",E,E,N,N],[6,"N99",E,E,N,N],[6,"U100",E,E,N,N],[6,"P100",E,E,N,N],[6,"N100",E,E,N,N],[6,"U101",E,E,N,N],[6,"P101",E,E,N,N],[6,"N101",E,E,N,N],[6,"U102",E,E,N,N],[6,"P102",E,E,N,N],[6,"N102",E,E,N,N],[6,"U103",E,E,N,N],[6,"P103",E,E,N,N],[6,"N103",E,E,N,N],[6,"U104",E,E,N,N],[6,"P104",E,E,N,N],[6,"N104",E,E,N,N],[6,"U105",E,E,N,N],[6,"P105",E,E,N,N],[6,"N105",E,E,N,N],[6,"U106",E,E,N,N],[6,"P106",E,E,N,N],[6,"N106",E,E,N,N],[6,"U107",E,E,N,N],[6,"P107",E,E,N,N],[6,"N107",E,E,N,N],[6,"U108",E,E,N,N],[6,"P108",E,E,N,N],[6,"N108",E,E,N,N],[6,"U109",E,E,N,N],[6,"P109",E,E,N,N],[6,"N109",E,E,N,N],[6,"U110",E,E,N,N],[6,"P110",E,E,N,N],[6,"N110",E,E,N,N],[6,"U111",E,E,N,N],[6,"P111",E,E,N,N],[6,"N111",E,E,N,N],[6,"U112",E,E,N,N],[6,"P112",E,E,N,N],[6,"N112",E,E,N,N],[6,"U113",E,E,N,N],[6,"P113",E,E,N,N],[6,"N113",E,E,N,N],[6,"U114",E,E,N,N],[6,"P114",E,E,N,N],[6,"N114",E,E,N,N],[6,"U115",E,E,N,N],[6,"P115",E,E,N,N],[6,"N115",E,E,N,N],[6,"U116",E,E,N,N],[6,"P116",E,E,N,N],[6,"N116",E,E,N,N],[6,"U117",E,E,N,N],[6,"P117",E,E,N,N],[6,"N117",E,E,N,N],[6,"U118",E,E,N,N],[6,"P118",E,E,N,N],[6,"N118",E,E,N,N],[6,"U119",E,E,N,N],[6,"P119",E,E,N,N],[6,"N119",E,E,N,N],[6,"U120",E,E,N,N],[6,"P120",E,E,N,N],[6,"N120",E,E,N,N],[6,"U121",E,E,N,N],[6,"P121",E,E,N,N],[6,"N121",E,E,N,N],[6,"U122",E,E,N,N],[6,"P122",E,E,N,N],[6,"N122",E,E,N,N],[6,"U123",E,E,N,N],[6,"P123",E,E,N,N],[6,"N123",E,E,N,N],[6,"U124",E,E,N,N],[6,"P124",E,E,N,N],[6,"N124",E,E,N,N],[6,"U125",E,E,N,N],[6,"P125",E,E,N,N],[6,"N125",E,E,N,N],[6,"U126",E,E,N,N],[6,"P126",E,E,N,N],[6,"N126",E,E,N,N],[6,"U127",E,E,N,N],[6,"P127",E,E,N,N],[6,"N127",E,E,N,N],[6,"U128",E,E,N,N],[6,"P128",E,E,N,N],[6,"N128",E,E,N,N],[6,"U129",E,E,N,N],[6,"P129",E,E,N,N],[6,"N129",E,E,N,N],[6,"U130",E,E,N,N],[6,"P130",E,E,N,N],[6,"N130",E,E,N,N],[6,"U131",E,E,N,N],[6,"P131",E,E,N,N],[6,"N131",E,E,N,N],[6,"U132",E,E,N,N],[6,"P132",E,E,N,N],[6,"N132",E,E,N,N],[6,"U133",E,E,N,N],[6,"P133",E,E,N,N],[6,"N133",E,E,N,N],[6,"U134",E,E,N,N],[6,"P134",E,E,N,N],[6,"N134",E,E,N,N],[6,"U135",E,E,N,N],[6,"P135",E,E,N,N],[6,"N135",E,E,N,N],[6,"U136",E,E,N,N],[6,"P136",E,E,N,N],[6,"N136",E,E,N,N],[6,"U137",E,E,N,N],[6,"P137",E,E,N,N],[6,"N137",E,E,N,N],[6,"U138",E,E,N,N],[6,"P138",E,E,N,N],[6,"N138",E,E,N,N],[6,"U139",E,E,N,N],[6,"P139",E,E,N,N],[6,"N139",E,E,N,N],[6,"U140",E,E,N,N],[6,"P140",E,E,N,N],[6,"N140",E,E,N,N],[6,"U141",E,E,N,N],[6,"P141",E,E,N,N],[6,"N141",E,E,N,N],[6,"U142",E,E,N,N],[6,"P142",E,E,N,N],[6,"N142",E,E,N,N],[6,"U143",E,E,N,N],[6,"P143",E,E,N,N],[6,"N143",E,E,N,N],[6,"U144",E,E,N,N],[6,"P144",E,E,N,N],[6,"N144",E,E,N,N],[6,"U145",E,E,N,N],[6,"P145",E,E,N,N],[6,"N145",E,E,N,N],[6,"U146",E,E,N,N],[6,"P146",E,E,N,N],[6,"N146",E,E,N,N],[6,"U147",E,E,N,N],[6,"P147",E,E,N,N],[6,"N147",E,E,N,N],[6,"U148",E,E,N,N],[6,"P148",E,E,N,N],[6,"N148",E,E,N,N],[6,"U149",E,E,N,N],[6,"P149",E,E,N,N],[6,"N149",E,E,N,N],[6,"U150",E,E,N,N],[6,"P150",E,E,N,N],[6,"N150",E,E,N,N],[6,"U151",E,E,N,N],[6,"P151",E,E,N,N],[6,"N151",E,E,N,N],[6,"U152",E,E,N,N],[6,"P152",E,E,N,N],[6,"N152",E,E,N,N],[6,"U153",E,E,N,N],[6,"P153",E,E,N,N],[6,"N153",E,E,N,N],[6,"U154",E,E,N,N],[6,"P154",E,E,N,N],[6,"N154",E,E,N,N],[6,"U155",E,E,N,N],[6,"P155",E,E,N,N],[6,"N155",E,E,N,N],[6,"U156",E,E,N,N],[6,"P156",E,E,N,N],[6,"N156",E,E,N,N],[6,"U157",E,E,N,N],[6,"P157",E,E,N,N],[6,"N157",E,E,N,N],[6,"U158",E,E,N,N],[6,"P158",E,E,N,N],[6,"N158",E,E,N,N],[6,"U159",E,E,N,N],[6,"P159",E,E,N,N],[6,"N159",E,E,N,N],[6,"U160",E,E,N,N],[6,"P160",E,E,N,N],[6,"N160",E,E,N,N],[6,"U161",E,E,N,N],[6,"P161",E,E,N,N],[6,"N161",E,E,N,N],[6,"U162",E,E,N,N],[6,"P162",E,E,N,N],[6,"N162",E,E,N,N],[6,"U163",E,E,N,N],[6,"P163",E,E,N,N],[6,"N163",E,E,N,N],[6,"U164",E,E,N,N],[6,"P164",E,E,N,N],[6,"N164",E,E,N,N],[6,"U165",E,E,N,N],[6,"P165",E,E,N,N],[6,"N165",E,E,N,N],[6,"U166",E,E,N,N],[6,"P166",E,E,N,N],[6,"N166",E,E,N,N],[6,"U167",E,E,N,N],[6,"P167",E,E,N,N],[6,"N167",E,E,N,N],[6,"U168",E,E,N,N],[6,"P168",E,E,N,N],[6,"N168",E,E,N,N],[6,"U169",E,E,N,N],[6,"P169",E,E,N,N],[6,"N169",E,E,N,N],[6,"U170",E,E,N,N],[6,"P170",E,E,N,N],[6,"N170",E,E,N,N],[6,"U171",E,E,N,N],[6,"P171",E,E,N,N],[6,"N171",E,E,N,N],[6,"U172",E,E,N,N],[6,"P172",E,E,N,N],[6,"N172",E,E,N,N],[6,"U173",E,E,N,N],[6,"P173",E,E,N,N],[6,"N173",E,E,N,N],[6,"U174",E,E,N,N],[6,"P174",E,E,N,N],[6,"N174",E,E,N,N],[6,"U175",E,E,N,N],[6,"P175",E,E,N,N],[6,"N175",E,E,N,N],[6,"U176",E,E,N,N],[6,"P176",E,E,N,N],[6,"N176",E,E,N,N],[6,"U177",E,E,N,N],[6,"P177",E,E,N,N],[6,"N177",E,E,N,N],[6,"U178",E,E,N,N],[6,"P178",E,E,N,N],[6,"N178",E,E,N,N],[6,"U179",E,E,N,N],[6,"P179",E,E,N,N],[6,"N179",E,E,N,N],[6,"U180",E,E,N,N],[6,"P180",E,E,N,N],[6,"N180",E,E,N,N],[6,"U181",E,E,N,N],[6,"P181",E,E,N,N],[6,"N181",E,E,N,N],[6,"U182",E,E,N,N],[6,"P182",E,E,N,N],[6,"N182",E,E,N,N],[6,"U183",E,E,N,N],[6,"P183",E,E,N,N],[6,"N183",E,E,N,N],[6,"U184",E,E,N,N],[6,"P184",E,E,N,N],[6,"N184",E,E,N,N],[6,"U185",E,E,N,N],[6,"P185",E,E,N,N],[6,"N185",E,E,N,N],[6,"U186",E,E,N,N],[6,"P186",E,E,N,N],[6,"N186",E,E,N,N],[6,"U187",E,E,N,N],[6,"P187",E,E,N,N],[6,"N187",E,E,N,N],[6,"U188",E,E,N,N],[6,"P188",E,E,N,N],[6,"N188",E,E,N,N],[6,"U189",E,E,N,N],[6,"P189",E,E,N,N],[6,"N189",E,E,N,N],[6,"U190",E,E,N,N],[6,"P190",E,E,N,N],[6,"N190",E,E,N,N],[6,"U191",E,E,N,N],[6,"P191",E,E,N,N],[6,"N191",E,E,N,N],[6,"U192",E,E,N,N],[6,"P192",E,E,N,N],[6,"N192",E,E,N,N],[6,"U193",E,E,N,N],[6,"P193",E,E,N,N],[6,"N193",E,E,N,N],[6,"U194",E,E,N,N],[6,"P194",E,E,N,N],[6,"N194",E,E,N,N],[6,"U195",E,E,N,N],[6,"P195",E,E,N,N],[6,"N195",E,E,N,N],[6,"U196",E,E,N,N],[6,"P196",E,E,N,N],[6,"N196",E,E,N,N],[6,"U197",E,E,N,N],[6,"P197",E,E,N,N],[6,"N197",E,E,N,N],[6,"U198",E,E,N,N],[6,"P198",E,E,N,N],[6,"N198",E,E,N,N],[6,"U199",E,E,N,N],[6,"P199",E,E,N,N],[6,"N199",E,E,N,N],[6,"U200",E,E,N,N],[6,"P200",E,E,N,N],[6,"N200",E,E,N,N],[6,"U201",E,E,N,N],[6,"P201",E,E,N,N],[6,"N201",E,E,N,N],[6,"U202",E,E,N,N],[6,"P202",E,E,N,N],[6,"N202",E,E,N,N],[6,"U203",E,E,N,N],[6,"P203",E,E,N,N],[6,"N203",E,E,N,N],[6,"U204",E,E,N,N],[6,"P204",E,E,N,N],[6,"N204",E,E,N,N],[6,"U205",E,E,N,N],[6,"P205",E,E,N,N],[6,"N205",E,E,N,N],[6,"U206",E,E,N,N],[6,"P206",E,E,N,N],[6,"N206",E,E,N,N],[6,"U207",E,E,N,N],[6,"P207",E,E,N,N],[6,"N207",E,E,N,N],[6,"U208",E,E,N,N],[6,"P208",E,E,N,N],[6,"N208",E,E,N,N],[6,"U209",E,E,N,N],[6,"P209",E,E,N,N],[6,"N209",E,E,N,N],[6,"U210",E,E,N,N],[6,"P210",E,E,N,N],[6,"N210",E,E,N,N],[6,"U211",E,E,N,N],[6,"P211",E,E,N,N],[6,"N211",E,E,N,N],[6,"U212",E,E,N,N],[6,"P212",E,E,N,N],[6,"N212",E,E,N,N],[6,"U213",E,E,N,N],[6,"P213",E,E,N,N],[6,"N213",E,E,N,N],[6,"U214",E,E,N,N],[6,"P214",E,E,N,N],[6,"N214",E,E,N,N],[6,"U215",E,E,N,N],[6,"P215",E,E,N,N],[6,"N215",E,E,N,N],[6,"U216",E,E,N,N],[6,"P216",E,E,N,N],[6,"N216",E,E,N,N],[6,"U217",E,E,N,N],[6,"P217",E,E,N,N],[6,"N217",E,E,N,N],[6,"U218",E,E,N,N],[6,"P218",E,E,N,N],[6,"N218",E,E,N,N],[6,"U219",E,E,N,N],[6,"P219",E,E,N,N],[6,"N219",E,E,N,N],[6,"U220",E,E,N,N],[6,"P220",E,E,N,N],[6,"N220",E,E,N,N],[6,"U221",E,E,N,N],[6,"P221",E,E,N,N],[6,"N221",E,E,N,N],[6,"U222",E,E,N,N],[6,"P222",E,E,N,N],[6,"N222",E,E,N,N],[6,"U223",E,E,N,N],[6,"P223",E,E,N,N],[6,"N223",E,E,N,N],[6,"U224",E,E,N,N],[6,"P224",E,E,N,N],[6,"N224",E,E,N,N],[6,"U225",E,E,N,N],[6,"P225",E,E,N,N],[6,"N225",E,E,N,N],[6,"U226",E,E,N,N],[6,"P226",E,E,N,N],[6,"N226",E,E,N,N],[6,"U227",E,E,N,N],[6,"P227",E,E,N,N],[6,"N227",E,E,N,N],[6,"U228",E,E,N,N],[6,"P228",E,E,N,N],[6,"N228",E,E,N,N],[6,"U229",E,E,N,N],[6,"P229",E,E,N,N],[6,"N229",E,E,N,N],[6,"U230",E,E,N,N],[6,"P230",E,E,N,N],[6,"N230",E,E,N,N],[6,"U231",E,E,N,N],[6,"P231",E,E,N,N],[6,"N231",E,E,N,N],[6,"U232",E,E,N,N],[6,"P232",E,E,N,N],[6,"N232",E,E,N,N],[6,"U233",E,E,N,N],[6,"P233",E,E,N,N],[6,"N233",E,E,N,N],[6,"U234",E,E,N,N],[6,"P234",E,E,N,N],[6,"N234",E,E,N,N],[6,"U235",E,E,N,N],[6,"P235",E,E,N,N],[6,"N235",E,E,N,N],[6,"U236",E,E,N,N],[6,"P236",E,E,N,N],[6,"N236",E,E,N,N],[6,"U237",E,E,N,N],[6,"P237",E,E,N,N],[6,"N237",E,E,N,N],[6,"U238",E,E,N,N],[6,"P238",E,E,N,N],[6,"N238",E,E,N,N],[6,"U239",E,E,N,N],[6,"P239",E,E,N,N],[6,"N239",E,E,N,N],[6,"U240",E,E,N,N],[6,"P240",E,E,N,N],[6,"N240",E,E,N,N],[6,"U241",E,E,N,N],[6,"P241",E,E,N,N],[6,"N241",E,E,N,N],[6,"U242",E,E,N,N],[6,"P242",E,E,N,N],[6,"N242",E,E,N,N],[6,"U243",E,E,N,N],[6,"P243",E,E,N,N],[6,"N243",E,E,N,N],[6,"U244",E,E,N,N],[6,"P244",E,E,N,N],[6,"N244",E,E,N,N],[6,"U245",E,E,N,N],[6,"P245",E,E,N,N],[6,"N245",E,E,N,N],[6,"U246",E,E,N,N],[6,"P246",E,E,N,N],[6,"N246",E,E,N,N],[6,"U247",E,E,N,N],[6,"P247",E,E,N,N],[6,"N247",E,E,N,N],[6,"U248",E,E,N,N],[6,"P248",E,E,N,N],[6,"N248",E,E,N,N],[6,"U249",E,E,N,N],[6,"P249",E,E,N,N],[6,"N249",E,E,N,N],[6,"U250",E,E,N,N],[6,"P250",E,E,N,N],[6,"N250",E,E,N,N],[6,"U251",E,E,N,N],[6,"P251",E,E,N,N],[6,"N251",E,E,N,N],[6,"U252",E,E,N,N],[6,"P252",E,E,N,N],[6,"N252",E,E,N,N],[6,"U253",E,E,N,N],[6,"P253",E,E,N,N],[6,"N253",E,E,N,N],[6,"U254",E,E,N,N],[6,"P254",E,E,N,N],[6,"N254",E,E,N,N],[6,"U255",E,E,N,N],[6,"P255",E,E,N,N],[6,"N255",E,E,N,N],[6,"U256",E,E,N,N],[6,"P256",E,E,N,N],[6,"N256",E,E,N,N],[6,"U257",E,E,N,N],[6,"P257",E,E,N,N],[6,"N257",E,E,N,N],[6,"U258",E,E,N,N],[6,"P258",E,E,N,N],[6,"N258",E,E,N,N],[6,"U259",E,E,N,N],[6,"P259",E,E,N,N],[6,"N259",E,E,N,N],[6,"U260",E,E,N,N],[6,"P260",E,E,N,N],[6,"N260",E,E,N,N],[6,"U261",E,E,N,N],[6,"P261",E,E,N,N],[6,"N261",E,E,N,N],[6,"U262",E,E,N,N],[6,"P262",E,E,N,N],[6,"N262",E,E,N,N],[6,"U263",E,E,N,N],[6,"P263",E,E,N,N],[6,"N263",E,E,N,N],[6,"U264",E,E,N,N],[6,"P264",E,E,N,N],[6,"N264",E,E,N,N],[6,"U265",E,E,N,N],[6,"P265",E,E,N,N],[6,"N265",E,E,N,N],[6,"U266",E,E,N,N],[6,"P266",E,E,N,N],[6,"N266",E,E,N,N],[6,"U267",E,E,N,N],[6,"P267",E,E,N,N],[6,"N267",E,E,N,N],[6,"U268",E,E,N,N],[6,"P268",E,E,N,N],[6,"N268",E,E,N,N],[6,"U269",E,E,N,N],[6,"P269",E,E,N,N],[6,"N269",E,E,N,N],[6,"U270",E,E,N,N],[6,"P270",E,E,N,N],[6,"N270",E,E,N,N],[6,"U271",E,E,N,N],[6,"P271",E,E,N,N],[6,"N271",E,E,N,N],[6,"U272",E,E,N,N],[6,"P272",E,E,N,N],[6,"N272",E,E,N,N],[6,"U273",E,E,N,N],[6,"P273",E,E,N,N],[6,"N273",E,E,N,N],[6,"U274",E,E,N,N],[6,"P274",E,E,N,N],[6,"N274",E,E,N,N],[6,"U275",E,E,N,N],[6,"P275",E,E,N,N],[6,"N275",E,E,N,N],[6,"U276",E,E,N,N],[6,"P276",E,E,N,N],[6,"N276",E,E,N,N],[6,"U277",E,E,N,N],[6,"P277",E,E,N,N],[6,"N277",E,E,N,N],[6,"U278",E,E,N,N],[6,"P278",E,E,N,N],[6,"N278",E,E,N,N],[6,"U279",E,E,N,N],[6,"P279",E,E,N,N],[6,"N279",E,E,N,N],[6,"U280",E,E,N,N],[6,"P280",E,E,N,N],[6,"N280",E,E,N,N],[6,"U281",E,E,N,N],[6,"P281",E,E,N,N],[6,"N281",E,E,N,N],[6,"U282",E,E,N,N],[6,"P282",E,E,N,N],[6,"N282",E,E,N,N],[6,"U283",E,E,N,N],[6,"P283",E,E,N,N],[6,"N283",E,E,N,N],[6,"U284",E,E,N,N],[6,"P284",E,E,N,N],[6,"N284",E,E,N,N],[6,"U285",E,E,N,N],[6,"P285",E,E,N,N],[6,"N285",E,E,N,N],[6,"U286",E,E,N,N],[6,"P286",E,E,N,N],[6,"N286",E,E,N,N],[6,"U287",E,E,N,N],[6,"P287",E,E,N,N],[6,"N287",E,E,N,N],[6,"U288",E,E,N,N],[6,"P288",E,E,N,N],[6,"N288",E,E,N,N],[6,"U289",E,E,N,N],[6,"P289",E,E,N,N],[6,"N289",E,E,N,N],[6,"U290",E,E,N,N],[6,"P290",E,E,N,N],[6,"N290",E,E,N,N],[6,"U291",E,E,N,N],[6,"P291",E,E,N,N],[6,"N291",E,E,N,N],[6,"U292",E,E,N,N],[6,"P292",E,E,N,N],[6,"N292",E,E,N,N],[6,"U293",E,E,N,N],[6,"P293",E,E,N,N],[6,"N293",E,E,N,N],[6,"U294",E,E,N,N],[6,"P294",E,E,N,N],[6,"N294",E,E,N,N],[6,"U295",E,E,N,N],[6,"P295",E,E,N,N],[6,"N295",E,E,N,N],[6,"U296",E,E,N,N],[6,"P296",E,E,N,N],[6,"N296",E,E,N,N],[6,"U297",E,E,N,N],[6,"P297",E,E,N,N],[6,"N297",E,E,N,N],[6,"U298",E,E,N,N],[6,"P298",E,E,N,N],[6,"N298",E,E,N,N],[6,"U299",E,E,N,N],[6,"P299",E,E,N,N],[6,"N299",E,E,N,N],[6,"U300",E,E,N,N],[6,"P300",E,E,N,N],[6,"N300",E,E,N,N],[6,"U301",E,E,N,N],[6,"P301",E,E,N,N],[6,"N301",E,E,N,N],[6,"U302",E,E,N,N],[6,"P302",E,E,N,N],[6,"N302",E,E,N,N],[6,"U303",E,E,N,N],[6,"P303",E,E,N,N],[6,"N303",E,E,N,N],[6,"U304",E,E,N,N],[6,"P304",E,E,N,N],[6,"N304",E,E,N,N],[6,"U305",E,E,N,N],[6,"P305",E,E,N,N],[6,"N305",E,E,N,N],[6,"U306",E,E,N,N],[6,"P306",E,E,N,N],[6,"N306",E,E,N,N],[6,"U307",E,E,N,N],[6,"P307",E,E,N,N],[6,"N307",E,E,N,N],[6,"U308",E,E,N,N],[6,"P308",E,E,N,N],[6,"N308",E,E,N,N],[6,"U309",E,E,N,N],[6,"P309",E,E,N,N],[6,"N309",E,E,N,N],[6,"U310",E,E,N,N],[6,"P310",E,E,N,N],[6,"N310",E,E,N,N],[6,"U311",E,E,N,N],[6,"P311",E,E,N,N],[6,"N311",E,E,N,N],[6,"U312",E,E,N,N],[6,"P312",E,E,N,N],[6,"N312",E,E,N,N],[6,"U313",E,E,N,N],[6,"P313",E,E,N,N],[6,"N313",E,E,N,N],[6,"U314",E,E,N,N],[6,"P314",E,E,N,N],[6,"N314",E,E,N,N],[6,"U315",E,E,N,N],[6,"P315",E,E,N,N],[6,"N315",E,E,N,N],[6,"U316",E,E,N,N],[6,"P316",E,E,N,N],[6,"N316",E,E,N,N],[6,"U317",E,E,N,N],[6,"P317",E,E,N,N],[6,"N317",E,E,N,N],[6,"U318",E,E,N,N],[6,"P318",E,E,N,N],[6,"N318",E,E,N,N],[6,"U319",E,E,N,N],[6,"P319",E,E,N,N],[6,"N319",E,E,N,N],[6,"U320",E,E,N,N],[6,"P320",E,E,N,N],[6,"N320",E,E,N,N],[6,"U321",E,E,N,N],[6,"P321",E,E,N,N],[6,"N321",E,E,N,N],[6,"U322",E,E,N,N],[6,"P322",E,E,N,N],[6,"N322",E,E,N,N],[6,"U323",E,E,N,N],[6,"P323",E,E,N,N],[6,"N323",E,E,N,N],[6,"U324",E,E,N,N],[6,"P324",E,E,N,N],[6,"N324",E,E,N,N],[6,"U325",E,E,N,N],[6,"P325",E,E,N,N],[6,"N325",E,E,N,N],[6,"U326",E,E,N,N],[6,"P326",E,E,N,N],[6,"N326",E,E,N,N],[6,"U327",E,E,N,N],[6,"P327",E,E,N,N],[6,"N327",E,E,N,N],[6,"U328",E,E,N,N],[6,"P328",E,E,N,N],[6,"N328",E,E,N,N],[6,"U329",E,E,N,N],[6,"P329",E,E,N,N],[6,"N329",E,E,N,N],[6,"U330",E,E,N,N],[6,"P330",E,E,N,N],[6,"N330",E,E,N,N],[6,"U331",E,E,N,N],[6,"P331",E,E,N,N],[6,"N331",E,E,N,N],[6,"U332",E,E,N,N],[6,"P332",E,E,N,N],[6,"N332",E,E,N,N],[6,"U333",E,E,N,N],[6,"P333",E,E,N,N],[6,"N333",E,E,N,N],[6,"U334",E,E,N,N],[6,"P334",E,E,N,N],[6,"N334",E,E,N,N],[6,"U335",E,E,N,N],[6,"P335",E,E,N,N],[6,"N335",E,E,N,N],[6,"U336",E,E,N,N],[6,"P336",E,E,N,N],[6,"N336",E,E,N,N],[6,"U337",E,E,N,N],[6,"P337",E,E,N,N],[6,"N337",E,E,N,N],[6,"U338",E,E,N,N],[6,"P338",E,E,N,N],[6,"N338",E,E,N,N],[6,"U339",E,E,N,N],[6,"P339",E,E,N,N],[6,"N339",E,E,N,N],[6,"U340",E,E,N,N],[6,"P340",E,E,N,N],[6,"N340",E,E,N,N],[6,"U341",E,E,N,N],[6,"P341",E,E,N,N],[6,"N341",E,E,N,N],[6,"U342",E,E,N,N],[6,"P342",E,E,N,N],[6,"N342",E,E,N,N],[6,"U343",E,E,N,N],[6,"P343",E,E,N,N],[6,"N343",E,E,N,N],[6,"U344",E,E,N,N],[6,"P344",E,E,N,N],[6,"N344",E,E,N,N],[6,"U345",E,E,N,N],[6,"P345",E,E,N,N],[6,"N345",E,E,N,N],[6,"U346",E,E,N,N],[6,"P346",E,E,N,N],[6,"N346",E,E,N,N],[6,"U347",E,E,N,N],[6,"P347",E,E,N,N],[6,"N347",E,E,N,N],[6,"U348",E,E,N,N],[6,"P348",E,E,N,N],[6,"N348",E,E,N,N],[6,"U349",E,E,N,N],[6,"P349",E,E,N,N],[6,"N349",E,E,N,N],[6,"U350",E,E,N,N],[6,"P350",E,E,N,N],[6,"N350",E,E,N,N],[6,"U351",E,E,N,N],[6,"P351",E,E,N,N],[6,"N351",E,E,N,N],[6,"U352",E,E,N,N],[6,"P352",E,E,N,N],[6,"N352",E,E,N,N],[6,"U353",E,E,N,N],[6,"P353",E,E,N,N],[6,"N353",E,E,N,N],[6,"U354",E,E,N,N],[6,"P354",E,E,N,N],[6,"N354",E,E,N,N],[6,"U355",E,E,N,N],[6,"P355",E,E,N,N],[6,"N355",E,E,N,N],[6,"U356",E,E,N,N],[6,"P356",E,E,N,N],[6,"N356",E,E,N,N],[6,"U357",E,E,N,N],[6,"P357",E,E,N,N],[6,"N357",E,E,N,N],[6,"U358",E,E,N,N],[6,"P358",E,E,N,N],[6,"N358",E,E,N,N],[6,"U359",E,E,N,N],[6,"P359",E,E,N,N],[6,"N359",E,E,N,N],[6,"U360",E,E,N,N],[6,"P360",E,E,N,N],[6,"N360",E,E,N,N],[6,"U361",E,E,N,N],[6,"P361",E,E,N,N],[6,"N361",E,E,N,N],[6,"U362",E,E,N,N],[6,"P362",E,E,N,N],[6,"N362",E,E,N,N],[6,"U363",E,E,N,N],[6,"P363",E,E,N,N],[6,"N363",E,E,N,N],[6,"U364",E,E,N,N],[6,"P364",E,E,N,N],[6,"N364",E,E,N,N],[6,"U365",E,E,N,N],[6,"P365",E,E,N,N],[6,"N365",E,E,N,N],[6,"U366",E,E,N,N],[6,"P366",E,E,N,N],[6,"N366",E,E,N,N],[6,"U367",E,E,N,N],[6,"P367",E,E,N,N],[6,"N367",E,E,N,N],[6,"U368",E,E,N,N],[6,"P368",E,E,N,N],[6,"N368",E,E,N,N],[6,"U369",E,E,N,N],[6,"P369",E,E,N,N],[6,"N369",E,E,N,N],[6,"U370",E,E,N,N],[6,"P370",E,E,N,N],[6,"N370",E,E,N,N],[6,"U371",E,E,N,N],[6,"P371",E,E,N,N],[6,"N371",E,E,N,N],[6,"U372",E,E,N,N],[6,"P372",E,E,N,N],[6,"N372",E,E,N,N],[6,"U373",E,E,N,N],[6,"P373",E,E,N,N],[6,"N373",E,E,N,N],[6,"U374",E,E,N,N],[6,"P374",E,E,N,N],[6,"N374",E,E,N,N],[6,"U375",E,E,N,N],[6,"P375",E,E,N,N],[6,"N375",E,E,N,N],[6,"U376",E,E,N,N],[6,"P376",E,E,N,N],[6,"N376",E,E,N,N],[6,"U377",E,E,N,N],[6,"P377",E,E,N,N],[6,"N377",E,E,N,N],[6,"U378",E,E,N,N],[6,"P378",E,E,N,N],[6,"N378",E,E,N,N],[6,"U379",E,E,N,N],[6,"P379",E,E,N,N],[6,"N379",E,E,N,N],[6,"U380",E,E,N,N],[6,"P380",E,E,N,N],[6,"N380",E,E,N,N],[6,"U381",E,E,N,N],[6,"P381",E,E,N,N],[6,"N381",E,E,N,N],[6,"U382",E,E,N,N],[6,"P382",E,E,N,N],[6,"N382",E,E,N,N],[6,"U383",E,E,N,N],[6,"P383",E,E,N,N],[6,"N383",E,E,N,N],[6,"U384",E,E,N,N],[6,"P384",E,E,N,N],[6,"N384",E,E,N,N],[6,"U385",E,E,N,N],[6,"P385",E,E,N,N],[6,"N385",E,E,N,N],[6,"U386",E,E,N,N],[6,"P386",E,E,N,N],[6,"N386",E,E,N,N],[6,"U387",E,E,N,N],[6,"P387",E,E,N,N],[6,"N387",E,E,N,N],[6,"U388",E,E,N,N],[6,"P388",E,E,N,N],[6,"N388",E,E,N,N],[6,"U389",E,E,N,N],[6,"P389",E,E,N,N],[6,"N389",E,E,N,N],[6,"U390",E,E,N,N],[6,"P390",E,E,N,N],[6,"N390",E,E,N,N],[6,"U391",E,E,N,N],[6,"P391",E,E,N,N],[6,"N391",E,E,N,N],[6,"U392",E,E,N,N],[6,"P392",E,E,N,N],[6,"N392",E,E,N,N],[6,"U393",E,E,N,N],[6,"P393",E,E,N,N],[6,"N393",E,E,N,N],[6,"U394",E,E,N,N],[6,"P394",E,E,N,N],[6,"N394",E,E,N,N],[6,"U395",E,E,N,N],[6,"P395",E,E,N,N],[6,"N395",E,E,N,N],[6,"U396",E,E,N,N],[6,"P396",E,E,N,N],[6,"N396",E,E,N,N],[6,"U397",E,E,N,N],[6,"P397",E,E,N,N],[6,"N397",E,E,N,N],[6,"U398",E,E,N,N],[6,"P398",E,E,N,N],[6,"N398",E,E,N,N],[6,"U399",E,E,N,N],[6,"P399",E,E,N,N],[6,"N399",E,E,N,N],[6,"U400",E,E,N,N],[6,"P400",E,E,N,N],[6,"N400",E,E,N,N],[6,"U401",E,E,N,N],[6,"P401",E,E,N,N],[6,"N401",E,E,N,N],[6,"U402",E,E,N,N],[6,"P402",E,E,N,N],[6,"N402",E,E,N,N],[6,"U403",E,E,N,N],[6,"P403",E,E,N,N],[6,"N403",E,E,N,N],[6,"U404",E,E,N,N],[6,"P404",E,E,N,N],[6,"N404",E,E,N,N],[6,"U405",E,E,N,N],[6,"P405",E,E,N,N],[6,"N405",E,E,N,N],[6,"U406",E,E,N,N],[6,"P406",E,E,N,N],[6,"N406",E,E,N,N],[6,"U407",E,E,N,N],[6,"P407",E,E,N,N],[6,"N407",E,E,N,N],[6,"U408",E,E,N,N],[6,"P408",E,E,N,N],[6,"N408",E,E,N,N],[6,"U409",E,E,N,N],[6,"P409",E,E,N,N],[6,"N409",E,E,N,N],[6,"U410",E,E,N,N],[6,"P410",E,E,N,N],[6,"N410",E,E,N,N],[6,"U411",E,E,N,N],[6,"P411",E,E,N,N],[6,"N411",E,E,N,N],[6,"U412",E,E,N,N],[6,"P412",E,E,N,N],[6,"N412",E,E,N,N],[6,"U413",E,E,N,N],[6,"P413",E,E,N,N],[6,"N413",E,E,N,N],[6,"U414",E,E,N,N],[6,"P414",E,E,N,N],[6,"N414",E,E,N,N],[6,"U415",E,E,N,N],[6,"P415",E,E,N,N],[6,"N415",E,E,N,N],[6,"U416",E,E,N,N],[6,"P416",E,E,N,N],[6,"N416",E,E,N,N],[6,"U417",E,E,N,N],[6,"P417",E,E,N,N],[6,"N417",E,E,N,N],[6,"U418",E,E,N,N],[6,"P418",E,E,N,N],[6,"N418",E,E,N,N],[6,"U419",E,E,N,N],[6,"P419",E,E,N,N],[6,"N419",E,E,N,N],[6,"U420",E,E,N,N],[6,"P420",E,E,N,N],[6,"N420",E,E,N,N],[6,"U421",E,E,N,N],[6,"P421",E,E,N,N],[6,"N421",E,E,N,N],[6,"U422",E,E,N,N],[6,"P422",E,E,N,N],[6,"N422",E,E,N,N],[6,"U423",E,E,N,N],[6,"P423",E,E,N,N],[6,"N423",E,E,N,N],[6,"U424",E,E,N,N],[6,"P424",E,E,N,N],[6,"N424",E,E,N,N],[6,"U425",E,E,N,N],[6,"P425",E,E,N,N],[6,"N425",E,E,N,N],[6,"U426",E,E,N,N],[6,"P426",E,E,N,N],[6,"N426",E,E,N,N],[6,"U427",E,E,N,N],[6,"P427",E,E,N,N],[6,"N427",E,E,N,N],[6,"U428",E,E,N,N],[6,"P428",E,E,N,N],[6,"N428",E,E,N,N],[6,"U429",E,E,N,N],[6,"P429",E,E,N,N],[6,"N429",E,E,N,N],[6,"U430",E,E,N,N],[6,"P430",E,E,N,N],[6,"N430",E,E,N,N],[6,"U431",E,E,N,N],[6,"P431",E,E,N,N],[6,"N431",E,E,N,N],[6,"U432",E,E,N,N],[6,"P432",E,E,N,N],[6,"N432",E,E,N,N],[6,"U433",E,E,N,N],[6,"P433",E,E,N,N],[6,"N433",E,E,N,N],[6,"U434",E,E,N,N],[6,"P434",E,E,N,N],[6,"N434",E,E,N,N],[6,"U435",E,E,N,N],[6,"P435",E,E,N,N],[6,"N435",E,E,N,N],[6,"U436",E,E,N,N],[6,"P436",E,E,N,N],[6,"N436",E,E,N,N],[6,"U437",E,E,N,N],[6,"P437",E,E,N,N],[6,"N437",E,E,N,N],[6,"U438",E,E,N,N],[6,"P438",E,E,N,N],[6,"N438",E,E,N,N],[6,"U439",E,E,N,N],[6,"P439",E,E,N,N],[6,"N439",E,E,N,N],[6,"U440",E,E,N,N],[6,"P440",E,E,N,N],[6,"N440",E,E,N,N],[6,"U441",E,E,N,N],[6,"P441",E,E,N,N],[6,"N441",E,E,N,N],[6,"U442",E,E,N,N],[6,"P442",E,E,N,N],[6,"N442",E,E,N,N],[6,"U443",E,E,N,N],[6,"P443",E,E,N,N],[6,"N443",E,E,N,N],[6,"U444",E,E,N,N],[6,"P444",E,E,N,N],[6,"N444",E,E,N,N],[6,"U445",E,E,N,N],[6,"P445",E,E,N,N],[6,"N445",E,E,N,N],[6,"U446",E,E,N,N],[6,"P446",E,E,N,N],[6,"N446",E,E,N,N],[6,"U447",E,E,N,N],[6,"P447",E,E,N,N],[6,"N447",E,E,N,N],[6,"U448",E,E,N,N],[6,"P448",E,E,N,N],[6,"N448",E,E,N,N],[6,"U449",E,E,N,N],[6,"P449",E,E,N,N],[6,"N449",E,E,N,N],[6,"U450",E,E,N,N],[6,"P450",E,E,N,N],[6,"N450",E,E,N,N],[6,"U451",E,E,N,N],[6,"P451",E,E,N,N],[6,"N451",E,E,N,N],[6,"U452",E,E,N,N],[6,"P452",E,E,N,N],[6,"N452",E,E,N,N],[6,"U453",E,E,N,N],[6,"P453",E,E,N,N],[6,"N453",E,E,N,N],[6,"U454",E,E,N,N],[6,"P454",E,E,N,N],[6,"N454",E,E,N,N],[6,"U455",E,E,N,N],[6,"P455",E,E,N,N],[6,"N455",E,E,N,N],[6,"U456",E,E,N,N],[6,"P456",E,E,N,N],[6,"N456",E,E,N,N],[6,"U457",E,E,N,N],[6,"P457",E,E,N,N],[6,"N457",E,E,N,N],[6,"U458",E,E,N,N],[6,"P458",E,E,N,N],[6,"N458",E,E,N,N],[6,"U459",E,E,N,N],[6,"P459",E,E,N,N],[6,"N459",E,E,N,N],[6,"U460",E,E,N,N],[6,"P460",E,E,N,N],[6,"N460",E,E,N,N],[6,"U461",E,E,N,N],[6,"P461",E,E,N,N],[6,"N461",E,E,N,N],[6,"U462",E,E,N,N],[6,"P462",E,E,N,N],[6,"N462",E,E,N,N],[6,"U463",E,E,N,N],[6,"P463",E,E,N,N],[6,"N463",E,E,N,N],[6,"U464",E,E,N,N],[6,"P464",E,E,N,N],[6,"N464",E,E,N,N],[6,"U465",E,E,N,N],[6,"P465",E,E,N,N],[6,"N465",E,E,N,N],[6,"U466",E,E,N,N],[6,"P466",E,E,N,N],[6,"N466",E,E,N,N],[6,"U467",E,E,N,N],[6,"P467",E,E,N,N],[6,"N467",E,E,N,N],[6,"U468",E,E,N,N],[6,"P468",E,E,N,N],[6,"N468",E,E,N,N],[6,"U469",E,E,N,N],[6,"P469",E,E,N,N],[6,"N469",E,E,N,N],[6,"U470",E,E,N,N],[6,"P470",E,E,N,N],[6,"N470",E,E,N,N],[6,"U471",E,E,N,N],[6,"P471",E,E,N,N],[6,"N471",E,E,N,N],[6,"U472",E,E,N,N],[6,"P472",E,E,N,N],[6,"N472",E,E,N,N],[6,"U473",E,E,N,N],[6,"P473",E,E,N,N],[6,"N473",E,E,N,N],[6,"U474",E,E,N,N],[6,"P474",E,E,N,N],[6,"N474",E,E,N,N],[6,"U475",E,E,N,N],[6,"P475",E,E,N,N],[6,"N475",E,E,N,N],[6,"U476",E,E,N,N],[6,"P476",E,E,N,N],[6,"N476",E,E,N,N],[6,"U477",E,E,N,N],[6,"P477",E,E,N,N],[6,"N477",E,E,N,N],[6,"U478",E,E,N,N],[6,"P478",E,E,N,N],[6,"N478",E,E,N,N],[6,"U479",E,E,N,N],[6,"P479",E,E,N,N],[6,"N479",E,E,N,N],[6,"U480",E,E,N,N],[6,"P480",E,E,N,N],[6,"N480",E,E,N,N],[6,"U481",E,E,N,N],[6,"P481",E,E,N,N],[6,"N481",E,E,N,N],[6,"U482",E,E,N,N],[6,"P482",E,E,N,N],[6,"N482",E,E,N,N],[6,"U483",E,E,N,N],[6,"P483",E,E,N,N],[6,"N483",E,E,N,N],[6,"U484",E,E,N,N],[6,"P484",E,E,N,N],[6,"N484",E,E,N,N],[6,"U485",E,E,N,N],[6,"P485",E,E,N,N],[6,"N485",E,E,N,N],[6,"U486",E,E,N,N],[6,"P486",E,E,N,N],[6,"N486",E,E,N,N],[6,"U487",E,E,N,N],[6,"P487",E,E,N,N],[6,"N487",E,E,N,N],[6,"U488",E,E,N,N],[6,"P488",E,E,N,N],[6,"N488",E,E,N,N],[6,"U489",E,E,N,N],[6,"P489",E,E,N,N],[6,"N489",E,E,N,N],[6,"U490",E,E,N,N],[6,"P490",E,E,N,N],[6,"N490",E,E,N,N],[6,"U491",E,E,N,N],[6,"P491",E,E,N,N],[6,"N491",E,E,N,N],[6,"U492",E,E,N,N],[6,"P492",E,E,N,N],[6,"N492",E,E,N,N],[6,"U493",E,E,N,N],[6,"P493",E,E,N,N],[6,"N493",E,E,N,N],[6,"U494",E,E,N,N],[6,"P494",E,E,N,N],[6,"N494",E,E,N,N],[6,"U495",E,E,N,N],[6,"P495",E,E,N,N],[6,"N495",E,E,N,N],[6,"U496",E,E,N,N],[6,"P496",E,E,N,N],[6,"N496",E,E,N,N],[6,"U497",E,E,N,N],[6,"P497",E,E,N,N],[6,"N497",E,E,N,N],[6,"U498",E,E,N,N],[6,"P498",E,E,N,N],[6,"N498",E,E,N,N],[6,"U499",E,E,N,N],[6,"P499",E,E,N,N],[6,"N499",E,E,N,N],[6,"U500",E,E,N,N],[6,"P500",E,E,N,N],[6,"N500",E,E,N,N],[6,"U501",E,E,N,N],[6,"P501",E,E,N,N],[6,"N501",E,E,N,N],[6,"U502",E,E,N,N],[6,"P502",E,E,N,N],[6,"N502",E,E,N,N],[6,"U503",E,E,N,N],[6,"P503",E,E,N,N],[6,"N503",E,E,N,N],[6,"U504",E,E,N,N],[6,"P504",E,E,N,N],[6,"N504",E,E,N,N],[6,"U505",E,E,N,N],[6,"P505",E,E,N,N],[6,"N505",E,E,N,N],[6,"U506",E,E,N,N],[6,"P506",E,E,N,N],[6,"N506",E,E,N,N],[6,"U507",E,E,N,N],[6,"P507",E,E,N,N],[6,"N507",E,E,N,N],[6,"U508",E,E,N,N],[6,"P508",E,E,N,N],[6,"N508",E,E,N,N],[6,"U509",E,E,N,N],[6,"P509",E,E,N,N],[6,"N509",E,E,N,N],[6,"U510",E,E,N,N],[6,"P510",E,E,N,N],[6,"N510",E,E,N,N],[6,"U511",E,E,N,N],[6,"P511",E,E,N,N],[6,"N511",E,E,N,N],[6,"U512",E,E,N,N],[6,"P512",E,E,N,N],[6,"N512",E,E,N,N],[6,"U513",E,E,N,N],[6,"P513",E,E,N,N],[6,"N513",E,E,N,N],[6,"U514",E,E,N,N],[6,"P514",E,E,N,N],[6,"N514",E,E,N,N],[6,"U515",E,E,N,N],[6,"P515",E,E,N,N],[6,"N515",E,E,N,N],[6,"U516",E,E,N,N],[6,"P516",E,E,N,N],[6,"N516",E,E,N,N],[6,"U517",E,E,N,N],[6,"P517",E,E,N,N],[6,"N517",E,E,N,N],[6,"U518",E,E,N,N],[6,"P518",E,E,N,N],[6,"N518",E,E,N,N],[6,"U519",E,E,N,N],[6,"P519",E,E,N,N],[6,"N519",E,E,N,N],[6,"U520",E,E,N,N],[6,"P520",E,E,N,N],[6,"N520",E,E,N,N],[6,"U521",E,E,N,N],[6,"P521",E,E,N,N],[6,"N521",E,E,N,N],[6,"U522",E,E,N,N],[6,"P522",E,E,N,N],[6,"N522",E,E,N,N],[6,"U523",E,E,N,N],[6,"P523",E,E,N,N],[6,"N523",E,E,N,N],[6,"U524",E,E,N,N],[6,"P524",E,E,N,N],[6,"N524",E,E,N,N],[6,"U525",E,E,N,N],[6,"P525",E,E,N,N],[6,"N525",E,E,N,N],[6,"U526",E,E,N,N],[6,"P526",E,E,N,N],[6,"N526",E,E,N,N],[6,"U527",E,E,N,N],[6,"P527",E,E,N,N],[6,"N527",E,E,N,N],[6,"U528",E,E,N,N],[6,"P528",E,E,N,N],[6,"N528",E,E,N,N],[6,"U529",E,E,N,N],[6,"P529",E,E,N,N],[6,"N529",E,E,N,N],[6,"U530",E,E,N,N],[6,"P530",E,E,N,N],[6,"N530",E,E,N,N],[6,"U531",E,E,N,N],[6,"P531",E,E,N,N],[6,"N531",E,E,N,N],[6,"U532",E,E,N,N],[6,"P532",E,E,N,N],[6,"N532",E,E,N,N],[6,"U533",E,E,N,N],[6,"P533",E,E,N,N],[6,"N533",E,E,N,N],[6,"U534",E,E,N,N],[6,"P534",E,E,N,N],[6,"N534",E,E,N,N],[6,"U535",E,E,N,N],[6,"P535",E,E,N,N],[6,"N535",E,E,N,N],[6,"U536",E,E,N,N],[6,"P536",E,E,N,N],[6,"N536",E,E,N,N],[6,"U537",E,E,N,N],[6,"P537",E,E,N,N],[6,"N537",E,E,N,N],[6,"U538",E,E,N,N],[6,"P538",E,E,N,N],[6,"N538",E,E,N,N],[6,"U539",E,E,N,N],[6,"P539",E,E,N,N],[6,"N539",E,E,N,N],[6,"U540",E,E,N,N],[6,"P540",E,E,N,N],[6,"N540",E,E,N,N],[6,"U541",E,E,N,N],[6,"P541",E,E,N,N],[6,"N541",E,E,N,N],[6,"U542",E,E,N,N],[6,"P542",E,E,N,N],[6,"N542",E,E,N,N],[6,"U543",E,E,N,N],[6,"P543",E,E,N,N],[6,"N543",E,E,N,N],[6,"U544",E,E,N,N],[6,"P544",E,E,N,N],[6,"N544",E,E,N,N],[6,"U545",E,E,N,N],[6,"P545",E,E,N,N],[6,"N545",E,E,N,N],[6,"U546",E,E,N,N],[6,"P546",E,E,N,N],[6,"N546",E,E,N,N],[6,"U547",E,E,N,N],[6,"P547",E,E,N,N],[6,"N547",E,E,N,N],[6,"U548",E,E,N,N],[6,"P548",E,E,N,N],[6,"N548",E,E,N,N],[6,"U549",E,E,N,N],[6,"P549",E,E,N,N],[6,"N549",E,E,N,N],[6,"U550",E,E,N,N],[6,"P550",E,E,N,N],[6,"N550",E,E,N,N],[6,"U551",E,E,N,N],[6,"P551",E,E,N,N],[6,"N551",E,E,N,N],[6,"U552",E,E,N,N],[6,"P552",E,E,N,N],[6,"N552",E,E,N,N],[6,"U553",E,E,N,N],[6,"P553",E,E,N,N],[6,"N553",E,E,N,N],[6,"U554",E,E,N,N],[6,"P554",E,E,N,N],[6,"N554",E,E,N,N],[6,"U555",E,E,N,N],[6,"P555",E,E,N,N],[6,"N555",E,E,N,N],[6,"U556",E,E,N,N],[6,"P556",E,E,N,N],[6,"N556",E,E,N,N],[6,"U557",E,E,N,N],[6,"P557",E,E,N,N],[6,"N557",E,E,N,N],[6,"U558",E,E,N,N],[6,"P558",E,E,N,N],[6,"N558",E,E,N,N],[6,"U559",E,E,N,N],[6,"P559",E,E,N,N],[6,"N559",E,E,N,N],[6,"U560",E,E,N,N],[6,"P560",E,E,N,N],[6,"N560",E,E,N,N],[6,"U561",E,E,N,N],[6,"P561",E,E,N,N],[6,"N561",E,E,N,N],[6,"U562",E,E,N,N],[6,"P562",E,E,N,N],[6,"N562",E,E,N,N],[6,"U563",E,E,N,N],[6,"P563",E,E,N,N],[6,"N563",E,E,N,N],[6,"U564",E,E,N,N],[6,"P564",E,E,N,N],[6,"N564",E,E,N,N],[6,"U565",E,E,N,N],[6,"P565",E,E,N,N],[6,"N565",E,E,N,N],[6,"U566",E,E,N,N],[6,"P566",E,E,N,N],[6,"N566",E,E,N,N],[6,"U567",E,E,N,N],[6,"P567",E,E,N,N],[6,"N567",E,E,N,N],[6,"U568",E,E,N,N],[6,"P568",E,E,N,N],[6,"N568",E,E,N,N],[6,"U569",E,E,N,N],[6,"P569",E,E,N,N],[6,"N569",E,E,N,N],[6,"U570",E,E,N,N],[6,"P570",E,E,N,N],[6,"N570",E,E,N,N],[6,"U571",E,E,N,N],[6,"P571",E,E,N,N],[6,"N571",E,E,N,N],[6,"U572",E,E,N,N],[6,"P572",E,E,N,N],[6,"N572",E,E,N,N],[6,"U573",E,E,N,N],[6,"P573",E,E,N,N],[6,"N573",E,E,N,N],[6,"U574",E,E,N,N],[6,"P574",E,E,N,N],[6,"N574",E,E,N,N],[6,"U575",E,E,N,N],[6,"P575",E,E,N,N],[6,"N575",E,E,N,N],[6,"U576",E,E,N,N],[6,"P576",E,E,N,N],[6,"N576",E,E,N,N],[6,"U577",E,E,N,N],[6,"P577",E,E,N,N],[6,"N577",E,E,N,N],[6,"U578",E,E,N,N],[6,"P578",E,E,N,N],[6,"N578",E,E,N,N],[6,"U579",E,E,N,N],[6,"P579",E,E,N,N],[6,"N579",E,E,N,N],[6,"U580",E,E,N,N],[6,"P580",E,E,N,N],[6,"N580",E,E,N,N],[6,"U581",E,E,N,N],[6,"P581",E,E,N,N],[6,"N581",E,E,N,N],[6,"U582",E,E,N,N],[6,"P582",E,E,N,N],[6,"N582",E,E,N,N],[6,"U583",E,E,N,N],[6,"P583",E,E,N,N],[6,"N583",E,E,N,N],[6,"U584",E,E,N,N],[6,"P584",E,E,N,N],[6,"N584",E,E,N,N],[6,"U585",E,E,N,N],[6,"P585",E,E,N,N],[6,"N585",E,E,N,N],[6,"U586",E,E,N,N],[6,"P586",E,E,N,N],[6,"N586",E,E,N,N],[6,"U587",E,E,N,N],[6,"P587",E,E,N,N],[6,"N587",E,E,N,N],[6,"U588",E,E,N,N],[6,"P588",E,E,N,N],[6,"N588",E,E,N,N],[6,"U589",E,E,N,N],[6,"P589",E,E,N,N],[6,"N589",E,E,N,N],[6,"U590",E,E,N,N],[6,"P590",E,E,N,N],[6,"N590",E,E,N,N],[6,"U591",E,E,N,N],[6,"P591",E,E,N,N],[6,"N591",E,E,N,N],[6,"U592",E,E,N,N],[6,"P592",E,E,N,N],[6,"N592",E,E,N,N],[6,"U593",E,E,N,N],[6,"P593",E,E,N,N],[6,"N593",E,E,N,N],[6,"U594",E,E,N,N],[6,"P594",E,E,N,N],[6,"N594",E,E,N,N],[6,"U595",E,E,N,N],[6,"P595",E,E,N,N],[6,"N595",E,E,N,N],[6,"U596",E,E,N,N],[6,"P596",E,E,N,N],[6,"N596",E,E,N,N],[6,"U597",E,E,N,N],[6,"P597",E,E,N,N],[6,"N597",E,E,N,N],[6,"U598",E,E,N,N],[6,"P598",E,E,N,N],[6,"N598",E,E,N,N],[6,"U599",E,E,N,N],[6,"P599",E,E,N,N],[6,"N599",E,E,N,N],[6,"U600",E,E,N,N],[6,"P600",E,E,N,N],[6,"N600",E,E,N,N],[6,"U601",E,E,N,N],[6,"P601",E,E,N,N],[6,"N601",E,E,N,N],[6,"U602",E,E,N,N],[6,"P602",E,E,N,N],[6,"N602",E,E,N,N],[6,"U603",E,E,N,N],[6,"P603",E,E,N,N],[6,"N603",E,E,N,N],[6,"U604",E,E,N,N],[6,"P604",E,E,N,N],[6,"N604",E,E,N,N],[6,"U605",E,E,N,N],[6,"P605",E,E,N,N],[6,"N605",E,E,N,N],[6,"U606",E,E,N,N],[6,"P606",E,E,N,N],[6,"N606",E,E,N,N],[6,"U607",E,E,N,N],[6,"P607",E,E,N,N],[6,"N607",E,E,N,N],[6,"U608",E,E,N,N],[6,"P608",E,E,N,N],[6,"N608",E,E,N,N],[6,"U609",E,E,N,N],[6,"P609",E,E,N,N],[6,"N609",E,E,N,N],[6,"U610",E,E,N,N],[6,"P610",E,E,N,N],[6,"N610",E,E,N,N],[6,"U611",E,E,N,N],[6,"P611",E,E,N,N],[6,"N611",E,E,N,N],[6,"U612",E,E,N,N],[6,"P612",E,E,N,N],[6,"N612",E,E,N,N],[6,"U613",E,E,N,N],[6,"P613",E,E,N,N],[6,"N613",E,E,N,N],[6,"U614",E,E,N,N],[6,"P614",E,E,N,N],[6,"N614",E,E,N,N],[6,"U615",E,E,N,N],[6,"P615",E,E,N,N],[6,"N615",E,E,N,N],[6,"U616",E,E,N,N],[6,"P616",E,E,N,N],[6,"N616",E,E,N,N],[6,"U617",E,E,N,N],[6,"P617",E,E,N,N],[6,"N617",E,E,N,N],[6,"U618",E,E,N,N],[6,"P618",E,E,N,N],[6,"N618",E,E,N,N],[6,"U619",E,E,N,N],[6,"P619",E,E,N,N],[6,"N619",E,E,N,N],[6,"U620",E,E,N,N],[6,"P620",E,E,N,N],[6,"N620",E,E,N,N],[6,"U621",E,E,N,N],[6,"P621",E,E,N,N],[6,"N621",E,E,N,N],[6,"U622",E,E,N,N],[6,"P622",E,E,N,N],[6,"N622",E,E,N,N],[6,"U623",E,E,N,N],[6,"P623",E,E,N,N],[6,"N623",E,E,N,N],[6,"U624",E,E,N,N],[6,"P624",E,E,N,N],[6,"N624",E,E,N,N],[6,"U625",E,E,N,N],[6,"P625",E,E,N,N],[6,"N625",E,E,N,N],[6,"U626",E,E,N,N],[6,"P626",E,E,N,N],[6,"N626",E,E,N,N],[6,"U627",E,E,N,N],[6,"P627",E,E,N,N],[6,"N627",E,E,N,N],[6,"U628",E,E,N,N],[6,"P628",E,E,N,N],[6,"N628",E,E,N,N],[6,"U629",E,E,N,N],[6,"P629",E,E,N,N],[6,"N629",E,E,N,N],[6,"U630",E,E,N,N],[6,"P630",E,E,N,N],[6,"N630",E,E,N,N],[6,"U631",E,E,N,N],[6,"P631",E,E,N,N],[6,"N631",E,E,N,N],[6,"U632",E,E,N,N],[6,"P632",E,E,N,N],[6,"N632",E,E,N,N],[6,"U633",E,E,N,N],[6,"P633",E,E,N,N],[6,"N633",E,E,N,N],[6,"U634",E,E,N,N],[6,"P634",E,E,N,N],[6,"N634",E,E,N,N],[6,"U635",E,E,N,N],[6,"P635",E,E,N,N],[6,"N635",E,E,N,N],[6,"U636",E,E,N,N],[6,"P636",E,E,N,N],[6,"N636",E,E,N,N],[6,"U637",E,E,N,N],[6,"P637",E,E,N,N],[6,"N637",E,E,N,N],[6,"U638",E,E,N,N],[6,"P638",E,E,N,N],[6,"N638",E,E,N,N],[6,"U639",E,E,N,N],[6,"P639",E,E,N,N],[6,"N639",E,E,N,N],[6,"U640",E,E,N,N],[6,"P640",E,E,N,N],[6,"N640",E,E,N,N],[6,"U641",E,E,N,N],[6,"P641",E,E,N,N],[6,"N641",E,E,N,N],[6,"U642",E,E,N,N],[6,"P642",E,E,N,N],[6,"N642",E,E,N,N],[6,"U643",E,E,N,N],[6,"P643",E,E,N,N],[6,"N643",E,E,N,N],[6,"U644",E,E,N,N],[6,"P644",E,E,N,N],[6,"N644",E,E,N,N],[6,"U645",E,E,N,N],[6,"P645",E,E,N,N],[6,"N645",E,E,N,N],[6,"U646",E,E,N,N],[6,"P646",E,E,N,N],[6,"N646",E,E,N,N],[6,"U647",E,E,N,N],[6,"P647",E,E,N,N],[6,"N647",E,E,N,N],[6,"U648",E,E,N,N],[6,"P648",E,E,N,N],[6,"N648",E,E,N,N],[6,"U649",E,E,N,N],[6,"P649",E,E,N,N],[6,"N649",E,E,N,N],[6,"U650",E,E,N,N],[6,"P650",E,E,N,N],[6,"N650",E,E,N,N],[6,"U651",E,E,N,N],[6,"P651",E,E,N,N],[6,"N651",E,E,N,N],[6,"U652",E,E,N,N],[6,"P652",E,E,N,N],[6,"N652",E,E,N,N],[6,"U653",E,E,N,N],[6,"P653",E,E,N,N],[6,"N653",E,E,N,N],[6,"U654",E,E,N,N],[6,"P654",E,E,N,N],[6,"N654",E,E,N,N],[6,"U655",E,E,N,N],[6,"P655",E,E,N,N],[6,"N655",E,E,N,N],[6,"U656",E,E,N,N],[6,"P656",E,E,N,N],[6,"N656",E,E,N,N],[6,"U657",E,E,N,N],[6,"P657",E,E,N,N],[6,"N657",E,E,N,N],[6,"U658",E,E,N,N],[6,"P658",E,E,N,N],[6,"N658",E,E,N,N],[6,"U659",E,E,N,N],[6,"P659",E,E,N,N],[6,"N659",E,E,N,N],[6,"U660",E,E,N,N],[6,"P660",E,E,N,N],[6,"N660",E,E,N,N],[6,"U661",E,E,N,N],[6,"P661",E,E,N,N],[6,"N661",E,E,N,N],[6,"U662",E,E,N,N],[6,"P662",E,E,N,N],[6,"N662",E,E,N,N],[6,"U663",E,E,N,N],[6,"P663",E,E,N,N],[6,"N663",E,E,N,N],[6,"U664",E,E,N,N],[6,"P664",E,E,N,N],[6,"N664",E,E,N,N],[6,"U665",E,E,N,N],[6,"P665",E,E,N,N],[6,"N665",E,E,N,N],[6,"U666",E,E,N,N],[6,"P666",E,E,N,N],[6,"N666",E,E,N,N],[6,"U667",E,E,N,N],[6,"P667",E,E,N,N],[6,"N667",E,E,N,N],[6,"U668",E,E,N,N],[6,"P668",E,E,N,N],[6,"N668",E,E,N,N],[6,"U669",E,E,N,N],[6,"P669",E,E,N,N],[6,"N669",E,E,N,N],[6,"U670",E,E,N,N],[6,"P670",E,E,N,N],[6,"N670",E,E,N,N],[6,"U671",E,E,N,N],[6,"P671",E,E,N,N],[6,"N671",E,E,N,N],[6,"U672",E,E,N,N],[6,"P672",E,E,N,N],[6,"N672",E,E,N,N],[6,"U673",E,E,N,N],[6,"P673",E,E,N,N],[6,"N673",E,E,N,N],[6,"U674",E,E,N,N],[6,"P674",E,E,N,N],[6,"N674",E,E,N,N],[6,"U675",E,E,N,N],[6,"P675",E,E,N,N],[6,"N675",E,E,N,N],[6,"U676",E,E,N,N],[6,"P676",E,E,N,N],[6,"N676",E,E,N,N],[6,"U677",E,E,N,N],[6,"P677",E,E,N,N],[6,"N677",E,E,N,N],[6,"U678",E,E,N,N],[6,"P678",E,E,N,N],[6,"N678",E,E,N,N],[6,"U679",E,E,N,N],[6,"P679",E,E,N,N],[6,"N679",E,E,N,N],[6,"U680",E,E,N,N],[6,"P680",E,E,N,N],[6,"N680",E,E,N,N],[6,"U681",E,E,N,N],[6,"P681",E,E,N,N],[6,"N681",E,E,N,N],[6,"U682",E,E,N,N],[6,"P682",E,E,N,N],[6,"N682",E,E,N,N],[6,"U683",E,E,N,N],[6,"P683",E,E,N,N],[6,"N683",E,E,N,N],[6,"U684",E,E,N,N],[6,"P684",E,E,N,N],[6,"N684",E,E,N,N],[6,"U685",E,E,N,N],[6,"P685",E,E,N,N],[6,"N685",E,E,N,N],[6,"U686",E,E,N,N],[6,"P686",E,E,N,N],[6,"N686",E,E,N,N],[6,"U687",E,E,N,N],[6,"P687",E,E,N,N],[6,"N687",E,E,N,N],[6,"U688",E,E,N,N],[6,"P688",E,E,N,N],[6,"N688",E,E,N,N],[6,"U689",E,E,N,N],[6,"P689",E,E,N,N],[6,"N689",E,E,N,N],[6,"U690",E,E,N,N],[6,"P690",E,E,N,N],[6,"N690",E,E,N,N],[6,"U691",E,E,N,N],[6,"P691",E,E,N,N],[6,"N691",E,E,N,N],[6,"U692",E,E,N,N],[6,"P692",E,E,N,N],[6,"N692",E,E,N,N],[6,"U693",E,E,N,N],[6,"P693",E,E,N,N],[6,"N693",E,E,N,N],[6,"U694",E,E,N,N],[6,"P694",E,E,N,N],[6,"N694",E,E,N,N],[6,"U695",E,E,N,N],[6,"P695",E,E,N,N],[6,"N695",E,E,N,N],[6,"U696",E,E,N,N],[6,"P696",E,E,N,N],[6,"N696",E,E,N,N],[6,"U697",E,E,N,N],[6,"P697",E,E,N,N],[6,"N697",E,E,N,N],[6,"U698",E,E,N,N],[6,"P698",E,E,N,N],[6,"N698",E,E,N,N],[6,"U699",E,E,N,N],[6,"P699",E,E,N,N],[6,"N699",E,E,N,N],[6,"U700",E,E,N,N],[6,"P700",E,E,N,N],[6,"N700",E,E,N,N],[6,"U701",E,E,N,N],[6,"P701",E,E,N,N],[6,"N701",E,E,N,N],[6,"U702",E,E,N,N],[6,"P702",E,E,N,N],[6,"N702",E,E,N,N],[6,"U703",E,E,N,N],[6,"P703",E,E,N,N],[6,"N703",E,E,N,N],[6,"U704",E,E,N,N],[6,"P704",E,E,N,N],[6,"N704",E,E,N,N],[6,"U705",E,E,N,N],[6,"P705",E,E,N,N],[6,"N705",E,E,N,N],[6,"U706",E,E,N,N],[6,"P706",E,E,N,N],[6,"N706",E,E,N,N],[6,"U707",E,E,N,N],[6,"P707",E,E,N,N],[6,"N707",E,E,N,N],[6,"U708",E,E,N,N],[6,"P708",E,E,N,N],[6,"N708",E,E,N,N],[6,"U709",E,E,N,N],[6,"P709",E,E,N,N],[6,"N709",E,E,N,N],[6,"U710",E,E,N,N],[6,"P710",E,E,N,N],[6,"N710",E,E,N,N],[6,"U711",E,E,N,N],[6,"P711",E,E,N,N],[6,"N711",E,E,N,N],[6,"U712",E,E,N,N],[6,"P712",E,E,N,N],[6,"N712",E,E,N,N],[6,"U713",E,E,N,N],[6,"P713",E,E,N,N],[6,"N713",E,E,N,N],[6,"U714",E,E,N,N],[6,"P714",E,E,N,N],[6,"N714",E,E,N,N],[6,"U715",E,E,N,N],[6,"P715",E,E,N,N],[6,"N715",E,E,N,N],[6,"U716",E,E,N,N],[6,"P716",E,E,N,N],[6,"N716",E,E,N,N],[6,"U717",E,E,N,N],[6,"P717",E,E,N,N],[6,"N717",E,E,N,N],[6,"U718",E,E,N,N],[6,"P718",E,E,N,N],[6,"N718",E,E,N,N],[6,"U719",E,E,N,N],[6,"P719",E,E,N,N],[6,"N719",E,E,N,N],[6,"U720",E,E,N,N],[6,"P720",E,E,N,N],[6,"N720",E,E,N,N],[6,"U721",E,E,N,N],[6,"P721",E,E,N,N],[6,"N721",E,E,N,N],[6,"U722",E,E,N,N],[6,"P722",E,E,N,N],[6,"N722",E,E,N,N],[6,"U723",E,E,N,N],[6,"P723",E,E,N,N],[6,"N723",E,E,N,N],[6,"U724",E,E,N,N],[6,"P724",E,E,N,N],[6,"N724",E,E,N,N],[6,"U725",E,E,N,N],[6,"P725",E,E,N,N],[6,"N725",E,E,N,N],[6,"U726",E,E,N,N],[6,"P726",E,E,N,N],[6,"N726",E,E,N,N],[6,"U727",E,E,N,N],[6,"P727",E,E,N,N],[6,"N727",E,E,N,N],[6,"U728",E,E,N,N],[6,"P728",E,E,N,N],[6,"N728",E,E,N,N],[6,"U729",E,E,N,N],[6,"P729",E,E,N,N],[6,"N729",E,E,N,N],[6,"U730",E,E,N,N],[6,"P730",E,E,N,N],[6,"N730",E,E,N,N],[6,"U731",E,E,N,N],[6,"P731",E,E,N,N],[6,"N731",E,E,N,N],[6,"U732",E,E,N,N],[6,"P732",E,E,N,N],[6,"N732",E,E,N,N],[6,"U733",E,E,N,N],[6,"P733",E,E,N,N],[6,"N733",E,E,N,N],[6,"U734",E,E,N,N],[6,"P734",E,E,N,N],[6,"N734",E,E,N,N],[6,"U735",E,E,N,N],[6,"P735",E,E,N,N],[6,"N735",E,E,N,N],[6,"U736",E,E,N,N],[6,"P736",E,E,N,N],[6,"N736",E,E,N,N],[6,"U737",E,E,N,N],[6,"P737",E,E,N,N],[6,"N737",E,E,N,N],[6,"U738",E,E,N,N],[6,"P738",E,E,N,N],[6,"N738",E,E,N,N],[6,"U739",E,E,N,N],[6,"P739",E,E,N,N],[6,"N739",E,E,N,N],[6,"U740",E,E,N,N],[6,"P740",E,E,N,N],[6,"N740",E,E,N,N],[6,"U741",E,E,N,N],[6,"P741",E,E,N,N],[6,"N741",E,E,N,N],[6,"U742",E,E,N,N],[6,"P742",E,E,N,N],[6,"N742",E,E,N,N],[6,"U743",E,E,N,N],[6,"P743",E,E,N,N],[6,"N743",E,E,N,N],[6,"U744",E,E,N,N],[6,"P744",E,E,N,N],[6,"N744",E,E,N,N],[6,"U745",E,E,N,N],[6,"P745",E,E,N,N],[6,"N745",E,E,N,N],[6,"U746",E,E,N,N],[6,"P746",E,E,N,N],[6,"N746",E,E,N,N],[6,"U747",E,E,N,N],[6,"P747",E,E,N,N],[6,"N747",E,E,N,N],[6,"U748",E,E,N,N],[6,"P748",E,E,N,N],[6,"N748",E,E,N,N],[6,"U749",E,E,N,N],[6,"P749",E,E,N,N],[6,"N749",E,E,N,N],[6,"U750",E,E,N,N],[6,"P750",E,E,N,N],[6,"N750",E,E,N,N],[6,"U751",E,E,N,N],[6,"P751",E,E,N,N],[6,"N751",E,E,N,N],[6,"U752",E,E,N,N],[6,"P752",E,E,N,N],[6,"N752",E,E,N,N],[6,"U753",E,E,N,N],[6,"P753",E,E,N,N],[6,"N753",E,E,N,N],[6,"U754",E,E,N,N],[6,"P754",E,E,N,N],[6,"N754",E,E,N,N],[6,"U755",E,E,N,N],[6,"P755",E,E,N,N],[6,"N755",E,E,N,N],[6,"U756",E,E,N,N],[6,"P756",E,E,N,N],[6,"N756",E,E,N,N],[6,"U757",E,E,N,N],[6,"P757",E,E,N,N],[6,"N757",E,E,N,N],[6,"U758",E,E,N,N],[6,"P758",E,E,N,N],[6,"N758",E,E,N,N],[6,"U759",E,E,N,N],[6,"P759",E,E,N,N],[6,"N759",E,E,N,N],[6,"U760",E,E,N,N],[6,"P760",E,E,N,N],[6,"N760",E,E,N,N],[6,"U761",E,E,N,N],[6,"P761",E,E,N,N],[6,"N761",E,E,N,N],[6,"U762",E,E,N,N],[6,"P762",E,E,N,N],[6,"N762",E,E,N,N],[6,"U763",E,E,N,N],[6,"P763",E,E,N,N],[6,"N763",E,E,N,N],[6,"U764",E,E,N,N],[6,"P764",E,E,N,N],[6,"N764",E,E,N,N],[6,"U765",E,E,N,N],[6,"P765",E,E,N,N],[6,"N765",E,E,N,N],[6,"U766",E,E,N,N],[6,"P766",E,E,N,N],[6,"N766",E,E,N,N],[6,"U767",E,E,N,N],[6,"P767",E,E,N,N],[6,"N767",E,E,N,N],[6,"U768",E,E,N,N],[6,"P768",E,E,N,N],[6,"N768",E,E,N,N],[6,"U769",E,E,N,N],[6,"P769",E,E,N,N],[6,"N769",E,E,N,N],[6,"U770",E,E,N,N],[6,"P770",E,E,N,N],[6,"N770",E,E,N,N],[6,"U771",E,E,N,N],[6,"P771",E,E,N,N],[6,"N771",E,E,N,N],[6,"U772",E,E,N,N],[6,"P772",E,E,N,N],[6,"N772",E,E,N,N],[6,"U773",E,E,N,N],[6,"P773",E,E,N,N],[6,"N773",E,E,N,N],[6,"U774",E,E,N,N],[6,"P774",E,E,N,N],[6,"N774",E,E,N,N],[6,"U775",E,E,N,N],[6,"P775",E,E,N,N],[6,"N775",E,E,N,N],[6,"U776",E,E,N,N],[6,"P776",E,E,N,N],[6,"N776",E,E,N,N],[6,"U777",E,E,N,N],[6,"P777",E,E,N,N],[6,"N777",E,E,N,N],[6,"U778",E,E,N,N],[6,"P778",E,E,N,N],[6,"N778",E,E,N,N],[6,"U779",E,E,N,N],[6,"P779",E,E,N,N],[6,"N779",E,E,N,N],[6,"U780",E,E,N,N],[6,"P780",E,E,N,N],[6,"N780",E,E,N,N],[6,"U781",E,E,N,N],[6,"P781",E,E,N,N],[6,"N781",E,E,N,N],[6,"U782",E,E,N,N],[6,"P782",E,E,N,N],[6,"N782",E,E,N,N],[6,"U783",E,E,N,N],[6,"P783",E,E,N,N],[6,"N783",E,E,N,N],[6,"U784",E,E,N,N],[6,"P784",E,E,N,N],[6,"N784",E,E,N,N],[6,"U785",E,E,N,N],[6,"P785",E,E,N,N],[6,"N785",E,E,N,N],[6,"U786",E,E,N,N],[6,"P786",E,E,N,N],[6,"N786",E,E,N,N],[6,"U787",E,E,N,N],[6,"P787",E,E,N,N],[6,"N787",E,E,N,N],[6,"U788",E,E,N,N],[6,"P788",E,E,N,N],[6,"N788",E,E,N,N],[6,"U789",E,E,N,N],[6,"P789",E,E,N,N],[6,"N789",E,E,N,N],[6,"U790",E,E,N,N],[6,"P790",E,E,N,N],[6,"N790",E,E,N,N],[6,"U791",E,E,N,N],[6,"P791",E,E,N,N],[6,"N791",E,E,N,N],[6,"U792",E,E,N,N],[6,"P792",E,E,N,N],[6,"N792",E,E,N,N],[6,"U793",E,E,N,N],[6,"P793",E,E,N,N],[6,"N793",E,E,N,N],[6,"U794",E,E,N,N],[6,"P794",E,E,N,N],[6,"N794",E,E,N,N],[6,"U795",E,E,N,N],[6,"P795",E,E,N,N],[6,"N795",E,E,N,N],[6,"U796",E,E,N,N],[6,"P796",E,E,N,N],[6,"N796",E,E,N,N],[6,"U797",E,E,N,N],[6,"P797",E,E,N,N],[6,"N797",E,E,N,N],[6,"U798",E,E,N,N],[6,"P798",E,E,N,N],[6,"N798",E,E,N,N],[6,"U799",E,E,N,N],[6,"P799",E,E,N,N],[6,"N799",E,E,N,N],[6,"U800",E,E,N,N],[6,"P800",E,E,N,N],[6,"N800",E,E,N,N],[6,"U801",E,E,N,N],[6,"P801",E,E,N,N],[6,"N801",E,E,N,N],[6,"U802",E,E,N,N],[6,"P802",E,E,N,N],[6,"N802",E,E,N,N],[6,"U803",E,E,N,N],[6,"P803",E,E,N,N],[6,"N803",E,E,N,N],[6,"U804",E,E,N,N],[6,"P804",E,E,N,N],[6,"N804",E,E,N,N],[6,"U805",E,E,N,N],[6,"P805",E,E,N,N],[6,"N805",E,E,N,N],[6,"U806",E,E,N,N],[6,"P806",E,E,N,N],[6,"N806",E,E,N,N],[6,"U807",E,E,N,N],[6,"P807",E,E,N,N],[6,"N807",E,E,N,N],[6,"U808",E,E,N,N],[6,"P808",E,E,N,N],[6,"N808",E,E,N,N],[6,"U809",E,E,N,N],[6,"P809",E,E,N,N],[6,"N809",E,E,N,N],[6,"U810",E,E,N,N],[6,"P810",E,E,N,N],[6,"N810",E,E,N,N],[6,"U811",E,E,N,N],[6,"P811",E,E,N,N],[6,"N811",E,E,N,N],[6,"U812",E,E,N,N],[6,"P812",E,E,N,N],[6,"N812",E,E,N,N],[6,"U813",E,E,N,N],[6,"P813",E,E,N,N],[6,"N813",E,E,N,N],[6,"U814",E,E,N,N],[6,"P814",E,E,N,N],[6,"N814",E,E,N,N],[6,"U815",E,E,N,N],[6,"P815",E,E,N,N],[6,"N815",E,E,N,N],[6,"U816",E,E,N,N],[6,"P816",E,E,N,N],[6,"N816",E,E,N,N],[6,"U817",E,E,N,N],[6,"P817",E,E,N,N],[6,"N817",E,E,N,N],[6,"U818",E,E,N,N],[6,"P818",E,E,N,N],[6,"N818",E,E,N,N],[6,"U819",E,E,N,N],[6,"P819",E,E,N,N],[6,"N819",E,E,N,N],[6,"U820",E,E,N,N],[6,"P820",E,E,N,N],[6,"N820",E,E,N,N],[6,"U821",E,E,N,N],[6,"P821",E,E,N,N],[6,"N821",E,E,N,N],[6,"U822",E,E,N,N],[6,"P822",E,E,N,N],[6,"N822",E,E,N,N],[6,"U823",E,E,N,N],[6,"P823",E,E,N,N],[6,"N823",E,E,N,N],[6,"U824",E,E,N,N],[6,"P824",E,E,N,N],[6,"N824",E,E,N,N],[6,"U825",E,E,N,N],[6,"P825",E,E,N,N],[6,"N825",E,E,N,N],[6,"U826",E,E,N,N],[6,"P826",E,E,N,N],[6,"N826",E,E,N,N],[6,"U827",E,E,N,N],[6,"P827",E,E,N,N],[6,"N827",E,E,N,N],[6,"U828",E,E,N,N],[6,"P828",E,E,N,N],[6,"N828",E,E,N,N],[6,"U829",E,E,N,N],[6,"P829",E,E,N,N],[6,"N829",E,E,N,N],[6,"U830",E,E,N,N],[6,"P830",E,E,N,N],[6,"N830",E,E,N,N],[6,"U831",E,E,N,N],[6,"P831",E,E,N,N],[6,"N831",E,E,N,N],[6,"U832",E,E,N,N],[6,"P832",E,E,N,N],[6,"N832",E,E,N,N],[6,"U833",E,E,N,N],[6,"P833",E,E,N,N],[6,"N833",E,E,N,N],[6,"U834",E,E,N,N],[6,"P834",E,E,N,N],[6,"N834",E,E,N,N],[6,"U835",E,E,N,N],[6,"P835",E,E,N,N],[6,"N835",E,E,N,N],[6,"U836",E,E,N,N],[6,"P836",E,E,N,N],[6,"N836",E,E,N,N],[6,"U837",E,E,N,N],[6,"P837",E,E,N,N],[6,"N837",E,E,N,N],[6,"U838",E,E,N,N],[6,"P838",E,E,N,N],[6,"N838",E,E,N,N],[6,"U839",E,E,N,N],[6,"P839",E,E,N,N],[6,"N839",E,E,N,N],[6,"U840",E,E,N,N],[6,"P840",E,E,N,N],[6,"N840",E,E,N,N],[6,"U841",E,E,N,N],[6,"P841",E,E,N,N],[6,"N841",E,E,N,N],[6,"U842",E,E,N,N],[6,"P842",E,E,N,N],[6,"N842",E,E,N,N],[6,"U843",E,E,N,N],[6,"P843",E,E,N,N],[6,"N843",E,E,N,N],[6,"U844",E,E,N,N],[6,"P844",E,E,N,N],[6,"N844",E,E,N,N],[6,"U845",E,E,N,N],[6,"P845",E,E,N,N],[6,"N845",E,E,N,N],[6,"U846",E,E,N,N],[6,"P846",E,E,N,N],[6,"N846",E,E,N,N],[6,"U847",E,E,N,N],[6,"P847",E,E,N,N],[6,"N847",E,E,N,N],[6,"U848",E,E,N,N],[6,"P848",E,E,N,N],[6,"N848",E,E,N,N],[6,"U849",E,E,N,N],[6,"P849",E,E,N,N],[6,"N849",E,E,N,N],[6,"U850",E,E,N,N],[6,"P850",E,E,N,N],[6,"N850",E,E,N,N],[6,"U851",E,E,N,N],[6,"P851",E,E,N,N],[6,"N851",E,E,N,N],[6,"U852",E,E,N,N],[6,"P852",E,E,N,N],[6,"N852",E,E,N,N],[6,"U853",E,E,N,N],[6,"P853",E,E,N,N],[6,"N853",E,E,N,N],[6,"U854",E,E,N,N],[6,"P854",E,E,N,N],[6,"N854",E,E,N,N],[6,"U855",E,E,N,N],[6,"P855",E,E,N,N],[6,"N855",E,E,N,N],[6,"U856",E,E,N,N],[6,"P856",E,E,N,N],[6,"N856",E,E,N,N],[6,"U857",E,E,N,N],[6,"P857",E,E,N,N],[6,"N857",E,E,N,N],[6,"U858",E,E,N,N],[6,"P858",E,E,N,N],[6,"N858",E,E,N,N],[6,"U859",E,E,N,N],[6,"P859",E,E,N,N],[6,"N859",E,E,N,N],[6,"U860",E,E,N,N],[6,"P860",E,E,N,N],[6,"N860",E,E,N,N],[6,"U861",E,E,N,N],[6,"P861",E,E,N,N],[6,"N861",E,E,N,N],[6,"U862",E,E,N,N],[6,"P862",E,E,N,N],[6,"N862",E,E,N,N],[6,"U863",E,E,N,N],[6,"P863",E,E,N,N],[6,"N863",E,E,N,N],[6,"U864",E,E,N,N],[6,"P864",E,E,N,N],[6,"N864",E,E,N,N],[6,"U865",E,E,N,N],[6,"P865",E,E,N,N],[6,"N865",E,E,N,N],[6,"U866",E,E,N,N],[6,"P866",E,E,N,N],[6,"N866",E,E,N,N],[6,"U867",E,E,N,N],[6,"P867",E,E,N,N],[6,"N867",E,E,N,N],[6,"U868",E,E,N,N],[6,"P868",E,E,N,N],[6,"N868",E,E,N,N],[6,"U869",E,E,N,N],[6,"P869",E,E,N,N],[6,"N869",E,E,N,N],[6,"U870",E,E,N,N],[6,"P870",E,E,N,N],[6,"N870",E,E,N,N],[6,"U871",E,E,N,N],[6,"P871",E,E,N,N],[6,"N871",E,E,N,N],[6,"U872",E,E,N,N],[6,"P872",E,E,N,N],[6,"N872",E,E,N,N],[6,"U873",E,E,N,N],[6,"P873",E,E,N,N],[6,"N873",E,E,N,N],[6,"U874",E,E,N,N],[6,"P874",E,E,N,N],[6,"N874",E,E,N,N],[6,"U875",E,E,N,N],[6,"P875",E,E,N,N],[6,"N875",E,E,N,N],[6,"U876",E,E,N,N],[6,"P876",E,E,N,N],[6,"N876",E,E,N,N],[6,"U877",E,E,N,N],[6,"P877",E,E,N,N],[6,"N877",E,E,N,N],[6,"U878",E,E,N,N],[6,"P878",E,E,N,N],[6,"N878",E,E,N,N],[6,"U879",E,E,N,N],[6,"P879",E,E,N,N],[6,"N879",E,E,N,N],[6,"U880",E,E,N,N],[6,"P880",E,E,N,N],[6,"N880",E,E,N,N],[6,"U881",E,E,N,N],[6,"P881",E,E,N,N],[6,"N881",E,E,N,N],[6,"U882",E,E,N,N],[6,"P882",E,E,N,N],[6,"N882",E,E,N,N],[6,"U883",E,E,N,N],[6,"P883",E,E,N,N],[6,"N883",E,E,N,N],[6,"U884",E,E,N,N],[6,"P884",E,E,N,N],[6,"N884",E,E,N,N],[6,"U885",E,E,N,N],[6,"P885",E,E,N,N],[6,"N885",E,E,N,N],[6,"U886",E,E,N,N],[6,"P886",E,E,N,N],[6,"N886",E,E,N,N],[6,"U887",E,E,N,N],[6,"P887",E,E,N,N],[6,"N887",E,E,N,N],[6,"U888",E,E,N,N],[6,"P888",E,E,N,N],[6,"N888",E,E,N,N],[6,"U889",E,E,N,N],[6,"P889",E,E,N,N],[6,"N889",E,E,N,N],[6,"U890",E,E,N,N],[6,"P890",E,E,N,N],[6,"N890",E,E,N,N],[6,"U891",E,E,N,N],[6,"P891",E,E,N,N],[6,"N891",E,E,N,N],[6,"U892",E,E,N,N],[6,"P892",E,E,N,N],[6,"N892",E,E,N,N],[6,"U893",E,E,N,N],[6,"P893",E,E,N,N],[6,"N893",E,E,N,N],[6,"U894",E,E,N,N],[6,"P894",E,E,N,N],[6,"N894",E,E,N,N],[6,"U895",E,E,N,N],[6,"P895",E,E,N,N],[6,"N895",E,E,N,N],[6,"U896",E,E,N,N],[6,"P896",E,E,N,N],[6,"N896",E,E,N,N],[6,"U897",E,E,N,N],[6,"P897",E,E,N,N],[6,"N897",E,E,N,N],[6,"U898",E,E,N,N],[6,"P898",E,E,N,N],[6,"N898",E,E,N,N],[6,"U899",E,E,N,N],[6,"P899",E,E,N,N],[6,"N899",E,E,N,N],[6,"U900",E,E,N,N],[6,"P900",E,E,N,N],[6,"N900",E,E,N,N],[6,"U901",E,E,N,N],[6,"P901",E,E,N,N],[6,"N901",E,E,N,N],[6,"U902",E,E,N,N],[6,"P902",E,E,N,N],[6,"N902",E,E,N,N],[6,"U903",E,E,N,N],[6,"P903",E,E,N,N],[6,"N903",E,E,N,N],[6,"U904",E,E,N,N],[6,"P904",E,E,N,N],[6,"N904",E,E,N,N],[6,"U905",E,E,N,N],[6,"P905",E,E,N,N],[6,"N905",E,E,N,N],[6,"U906",E,E,N,N],[6,"P906",E,E,N,N],[6,"N906",E,E,N,N],[6,"U907",E,E,N,N],[6,"P907",E,E,N,N],[6,"N907",E,E,N,N],[6,"U908",E,E,N,N],[6,"P908",E,E,N,N],[6,"N908",E,E,N,N],[6,"U909",E,E,N,N],[6,"P909",E,E,N,N],[6,"N909",E,E,N,N],[6,"U910",E,E,N,N],[6,"P910",E,E,N,N],[6,"N910",E,E,N,N],[6,"U911",E,E,N,N],[6,"P911",E,E,N,N],[6,"N911",E,E,N,N],[6,"U912",E,E,N,N],[6,"P912",E,E,N,N],[6,"N912",E,E,N,N],[6,"U913",E,E,N,N],[6,"P913",E,E,N,N],[6,"N913",E,E,N,N],[6,"U914",E,E,N,N],[6,"P914",E,E,N,N],[6,"N914",E,E,N,N],[6,"U915",E,E,N,N],[6,"P915",E,E,N,N],[6,"N915",E,E,N,N],[6,"U916",E,E,N,N],[6,"P916",E,E,N,N],[6,"N916",E,E,N,N],[6,"U917",E,E,N,N],[6,"P917",E,E,N,N],[6,"N917",E,E,N,N],[6,"U918",E,E,N,N],[6,"P918",E,E,N,N],[6,"N918",E,E,N,N],[6,"U919",E,E,N,N],[6,"P919",E,E,N,N],[6,"N919",E,E,N,N],[6,"U920",E,E,N,N],[6,"P920",E,E,N,N],[6,"N920",E,E,N,N],[6,"U921",E,E,N,N],[6,"P921",E,E,N,N],[6,"N921",E,E,N,N],[6,"U922",E,E,N,N],[6,"P922",E,E,N,N],[6,"N922",E,E,N,N],[6,"U923",E,E,N,N],[6,"P923",E,E,N,N],[6,"N923",E,E,N,N],[6,"U924",E,E,N,N],[6,"P924",E,E,N,N],[6,"N924",E,E,N,N],[6,"U925",E,E,N,N],[6,"P925",E,E,N,N],[6,"N925",E,E,N,N],[6,"U926",E,E,N,N],[6,"P926",E,E,N,N],[6,"N926",E,E,N,N],[6,"U927",E,E,N,N],[6,"P927",E,E,N,N],[6,"N927",E,E,N,N],[6,"U928",E,E,N,N],[6,"P928",E,E,N,N],[6,"N928",E,E,N,N],[6,"U929",E,E,N,N],[6,"P929",E,E,N,N],[6,"N929",E,E,N,N],[6,"U930",E,E,N,N],[6,"P930",E,E,N,N],[6,"N930",E,E,N,N],[6,"U931",E,E,N,N],[6,"P931",E,E,N,N],[6,"N931",E,E,N,N],[6,"U932",E,E,N,N],[6,"P932",E,E,N,N],[6,"N932",E,E,N,N],[6,"U933",E,E,N,N],[6,"P933",E,E,N,N],[6,"N933",E,E,N,N],[6,"U934",E,E,N,N],[6,"P934",E,E,N,N],[6,"N934",E,E,N,N],[6,"U935",E,E,N,N],[6,"P935",E,E,N,N],[6,"N935",E,E,N,N],[6,"U936",E,E,N,N],[6,"P936",E,E,N,N],[6,"N936",E,E,N,N],[6,"U937",E,E,N,N],[6,"P937",E,E,N,N],[6,"N937",E,E,N,N],[6,"U938",E,E,N,N],[6,"P938",E,E,N,N],[6,"N938",E,E,N,N],[6,"U939",E,E,N,N],[6,"P939",E,E,N,N],[6,"N939",E,E,N,N],[6,"U940",E,E,N,N],[6,"P940",E,E,N,N],[6,"N940",E,E,N,N],[6,"U941",E,E,N,N],[6,"P941",E,E,N,N],[6,"N941",E,E,N,N],[6,"U942",E,E,N,N],[6,"P942",E,E,N,N],[6,"N942",E,E,N,N],[6,"U943",E,E,N,N],[6,"P943",E,E,N,N],[6,"N943",E,E,N,N],[6,"U944",E,E,N,N],[6,"P944",E,E,N,N],[6,"N944",E,E,N,N],[6,"U945",E,E,N,N],[6,"P945",E,E,N,N],[6,"N945",E,E,N,N],[6,"U946",E,E,N,N],[6,"P946",E,E,N,N],[6,"N946",E,E,N,N],[6,"U947",E,E,N,N],[6,"P947",E,E,N,N],[6,"N947",E,E,N,N],[6,"U948",E,E,N,N],[6,"P948",E,E,N,N],[6,"N948",E,E,N,N],[6,"U949",E,E,N,N],[6,"P949",E,E,N,N],[6,"N949",E,E,N,N],[6,"U950",E,E,N,N],[6,"P950",E,E,N,N],[6,"N950",E,E,N,N],[6,"U951",E,E,N,N],[6,"P951",E,E,N,N],[6,"N951",E,E,N,N],[6,"U952",E,E,N,N],[6,"P952",E,E,N,N],[6,"N952",E,E,N,N],[6,"U953",E,E,N,N],[6,"P953",E,E,N,N],[6,"N953",E,E,N,N],[6,"U954",E,E,N,N],[6,"P954",E,E,N,N],[6,"N954",E,E,N,N],[6,"U955",E,E,N,N],[6,"P955",E,E,N,N],[6,"N955",E,E,N,N],[6,"U956",E,E,N,N],[6,"P956",E,E,N,N],[6,"N956",E,E,N,N],[6,"U957",E,E,N,N],[6,"P957",E,E,N,N],[6,"N957",E,E,N,N],[6,"U958",E,E,N,N],[6,"P958",E,E,N,N],[6,"N958",E,E,N,N],[6,"U959",E,E,N,N],[6,"P959",E,E,N,N],[6,"N959",E,E,N,N],[6,"U960",E,E,N,N],[6,"P960",E,E,N,N],[6,"N960",E,E,N,N],[6,"U961",E,E,N,N],[6,"P961",E,E,N,N],[6,"N961",E,E,N,N],[6,"U962",E,E,N,N],[6,"P962",E,E,N,N],[6,"N962",E,E,N,N],[6,"U963",E,E,N,N],[6,"P963",E,E,N,N],[6,"N963",E,E,N,N],[6,"U964",E,E,N,N],[6,"P964",E,E,N,N],[6,"N964",E,E,N,N],[6,"U965",E,E,N,N],[6,"P965",E,E,N,N],[6,"N965",E,E,N,N],[6,"U966",E,E,N,N],[6,"P966",E,E,N,N],[6,"N966",E,E,N,N],[6,"U967",E,E,N,N],[6,"P967",E,E,N,N],[6,"N967",E,E,N,N],[6,"U968",E,E,N,N],[6,"P968",E,E,N,N],[6,"N968",E,E,N,N],[6,"U969",E,E,N,N],[6,"P969",E,E,N,N],[6,"N969",E,E,N,N],[6,"U970",E,E,N,N],[6,"P970",E,E,N,N],[6,"N970",E,E,N,N],[6,"U971",E,E,N,N],[6,"P971",E,E,N,N],[6,"N971",E,E,N,N],[6,"U972",E,E,N,N],[6,"P972",E,E,N,N],[6,"N972",E,E,N,N],[6,"U973",E,E,N,N],[6,"P973",E,E,N,N],[6,"N973",E,E,N,N],[6,"U974",E,E,N,N],[6,"P974",E,E,N,N],[6,"N974",E,E,N,N],[6,"U975",E,E,N,N],[6,"P975",E,E,N,N],[6,"N975",E,E,N,N],[6,"U976",E,E,N,N],[6,"P976",E,E,N,N],[6,"N976",E,E,N,N],[6,"U977",E,E,N,N],[6,"P977",E,E,N,N],[6,"N977",E,E,N,N],[6,"U978",E,E,N,N],[6,"P978",E,E,N,N],[6,"N978",E,E,N,N],[6,"U979",E,E,N,N],[6,"P979",E,E,N,N],[6,"N979",E,E,N,N],[6,"U980",E,E,N,N],[6,"P980",E,E,N,N],[6,"N980",E,E,N,N],[6,"U981",E,E,N,N],[6,"P981",E,E,N,N],[6,"N981",E,E,N,N],[6,"U982",E,E,N,N],[6,"P982",E,E,N,N],[6,"N982",E,E,N,N],[6,"U983",E,E,N,N],[6,"P983",E,E,N,N],[6,"N983",E,E,N,N],[6,"U984",E,E,N,N],[6,"P984",E,E,N,N],[6,"N984",E,E,N,N],[6,"U985",E,E,N,N],[6,"P985",E,E,N,N],[6,"N985",E,E,N,N],[6,"U986",E,E,N,N],[6,"P986",E,E,N,N],[6,"N986",E,E,N,N],[6,"U987",E,E,N,N],[6,"P987",E,E,N,N],[6,"N987",E,E,N,N],[6,"U988",E,E,N,N],[6,"P988",E,E,N,N],[6,"N988",E,E,N,N],[6,"U989",E,E,N,N],[6,"P989",E,E,N,N],[6,"N989",E,E,N,N],[6,"U990",E,E,N,N],[6,"P990",E,E,N,N],[6,"N990",E,E,N,N],[6,"U991",E,E,N,N],[6,"P991",E,E,N,N],[6,"N991",E,E,N,N],[6,"U992",E,E,N,N],[6,"P992",E,E,N,N],[6,"N992",E,E,N,N],[6,"U993",E,E,N,N],[6,"P993",E,E,N,N],[6,"N993",E,E,N,N],[6,"U994",E,E,N,N],[6,"P994",E,E,N,N],[6,"N994",E,E,N,N],[6,"U995",E,E,N,N],[6,"P995",E,E,N,N],[6,"N995",E,E,N,N],[6,"U996",E,E,N,N],[6,"P996",E,E,N,N],[6,"N996",E,E,N,N],[6,"U997",E,E,N,N],[6,"P997",E,E,N,N],[6,"N997",E,E,N,N],[6,"U998",E,E,N,N],[6,"P998",E,E,N,N],[6,"N998",E,E,N,N],[6,"U999",E,E,N,N],[6,"P999",E,E,N,N],[6,"N999",E,E,N,N],[6,"U1000",E,E,N,N],[6,"P1000",E,E,N,N],[6,"N1000",E,E,N,N],[6,"U1001",E,E,N,N],[6,"P1001",E,E,N,N],[6,"N1001",E,E,N,N],[6,"U1002",E,E,N,N],[6,"P1002",E,E,N,N],[6,"N1002",E,E,N,N],[6,"U1003",E,E,N,N],[6,"P1003",E,E,N,N],[6,"N1003",E,E,N,N],[6,"U1004",E,E,N,N],[6,"P1004",E,E,N,N],[6,"N1004",E,E,N,N],[6,"U1005",E,E,N,N],[6,"P1005",E,E,N,N],[6,"N1005",E,E,N,N],[6,"U1006",E,E,N,N],[6,"P1006",E,E,N,N],[6,"N1006",E,E,N,N],[6,"U1007",E,E,N,N],[6,"P1007",E,E,N,N],[6,"N1007",E,E,N,N],[6,"U1008",E,E,N,N],[6,"P1008",E,E,N,N],[6,"N1008",E,E,N,N],[6,"U1009",E,E,N,N],[6,"P1009",E,E,N,N],[6,"N1009",E,E,N,N],[6,"U1010",E,E,N,N],[6,"P1010",E,E,N,N],[6,"N1010",E,E,N,N],[6,"U1011",E,E,N,N],[6,"P1011",E,E,N,N],[6,"N1011",E,E,N,N],[6,"U1012",E,E,N,N],[6,"P1012",E,E,N,N],[6,"N1012",E,E,N,N],[6,"U1013",E,E,N,N],[6,"P1013",E,E,N,N],[6,"N1013",E,E,N,N],[6,"U1014",E,E,N,N],[6,"P1014",E,E,N,N],[6,"N1014",E,E,N,N],[6,"U1015",E,E,N,N],[6,"P1015",E,E,N,N],[6,"N1015",E,E,N,N],[6,"U1016",E,E,N,N],[6,"P1016",E,E,N,N],[6,"N1016",E,E,N,N],[6,"U1017",E,E,N,N],[6,"P1017",E,E,N,N],[6,"N1017",E,E,N,N],[6,"U1018",E,E,N,N],[6,"P1018",E,E,N,N],[6,"N1018",E,E,N,N],[6,"U1019",E,E,N,N],[6,"P1019",E,E,N,N],[6,"N1019",E,E,N,N],[6,"U1020",E,E,N,N],[6,"P1020",E,E,N,N],[6,"N1020",E,E,N,N],[6,"U1021",E,E,N,N],[6,"P1021",E,E,N,N],[6,"N1021",E,E,N,N],[6,"U1022",E,E,N,N],[6,"P1022",E,E,N,N],[6,"N1022",E,E,N,N],[6,"U1023",E,E,N,N],[6,"P1023",E,E,N,N],[6,"N1023",E,E,N,N],[6,"U1024",E,E,N,N],[6,"P1024",E,E,N,N],[6,"N1024",E,E,N,N],[6,"U2048",E,E,N,N],[6,"P2048",E,E,N,N],[6,"N2048",E,E,N,N],[6,"U4096",E,E,N,N],[6,"P4096",E,E,N,N],[6,"N4096",E,E,N,N],[6,"U8192",E,E,N,N],[6,"P8192",E,E,N,N],[6,"N8192",E,E,N,N],[6,"U16384",E,E,N,N],[6,"P16384",E,E,N,N],[6,"N16384",E,E,N,N],[6,"U32768",E,E,N,N],[6,"P32768",E,E,N,N],[6,"N32768",E,E,N,N],[6,"U65536",E,E,N,N],[6,"P65536",E,E,N,N],[6,"N65536",E,E,N,N],[6,"U131072",E,E,N,N],[6,"P131072",E,E,N,N],[6,"N131072",E,E,N,N],[6,"U262144",E,E,N,N],[6,"P262144",E,E,N,N],[6,"N262144",E,E,N,N],[6,"U524288",E,E,N,N],[6,"P524288",E,E,N,N],[6,"N524288",E,E,N,N],[6,"U1048576",E,E,N,N],[6,"P1048576",E,E,N,N],[6,"N1048576",E,E,N,N],[6,"U2097152",E,E,N,N],[6,"P2097152",E,E,N,N],[6,"N2097152",E,E,N,N],[6,"U4194304",E,E,N,N],[6,"P4194304",E,E,N,N],[6,"N4194304",E,E,N,N],[6,"U8388608",E,E,N,N],[6,"P8388608",E,E,N,N],[6,"N8388608",E,E,N,N],[6,"U16777216",E,E,N,N],[6,"P16777216",E,E,N,N],[6,"N16777216",E,E,N,N],[6,"U33554432",E,E,N,N],[6,"P33554432",E,E,N,N],[6,"N33554432",E,E,N,N],[6,"U67108864",E,E,N,N],[6,"P67108864",E,E,N,N],[6,"N67108864",E,E,N,N],[6,"U134217728",E,E,N,N],[6,"P134217728",E,E,N,N],[6,"N134217728",E,E,N,N],[6,"U268435456",E,E,N,N],[6,"P268435456",E,E,N,N],[6,"N268435456",E,E,N,N],[6,"U536870912",E,E,N,N],[6,"P536870912",E,E,N,N],[6,"N536870912",E,E,N,N],[6,"U1073741824",E,E,N,N],[6,"P1073741824",E,E,N,N],[6,"N1073741824",E,E,N,N],[6,"U2147483648",E,E,N,N],[6,"P2147483648",E,E,N,N],[6,"N2147483648",E,E,N,N],[6,"U4294967296",E,E,N,N],[6,"P4294967296",E,E,N,N],[6,"N4294967296",E,E,N,N],[6,"U8589934592",E,E,N,N],[6,"P8589934592",E,E,N,N],[6,"N8589934592",E,E,N,N],[6,"U17179869184",E,E,N,N],[6,"P17179869184",E,E,N,N],[6,"N17179869184",E,E,N,N],[6,"U34359738368",E,E,N,N],[6,"P34359738368",E,E,N,N],[6,"N34359738368",E,E,N,N],[6,"U68719476736",E,E,N,N],[6,"P68719476736",E,E,N,N],[6,"N68719476736",E,E,N,N],[6,"U137438953472",E,E,N,N],[6,"P137438953472",E,E,N,N],[6,"N137438953472",E,E,N,N],[6,"U274877906944",E,E,N,N],[6,"P274877906944",E,E,N,N],[6,"N274877906944",E,E,N,N],[6,"U549755813888",E,E,N,N],[6,"P549755813888",E,E,N,N],[6,"N549755813888",E,E,N,N],[6,"U1099511627776",E,E,N,N],[6,"P1099511627776",E,E,N,N],[6,"N1099511627776",E,E,N,N],[6,"U2199023255552",E,E,N,N],[6,"P2199023255552",E,E,N,N],[6,"N2199023255552",E,E,N,N],[6,"U4398046511104",E,E,N,N],[6,"P4398046511104",E,E,N,N],[6,"N4398046511104",E,E,N,N],[6,"U8796093022208",E,E,N,N],[6,"P8796093022208",E,E,N,N],[6,"N8796093022208",E,E,N,N],[6,"U17592186044416",E,E,N,N],[6,"P17592186044416",E,E,N,N],[6,"N17592186044416",E,E,N,N],[6,"U35184372088832",E,E,N,N],[6,"P35184372088832",E,E,N,N],[6,"N35184372088832",E,E,N,N],[6,"U70368744177664",E,E,N,N],[6,"P70368744177664",E,E,N,N],[6,"N70368744177664",E,E,N,N],[6,"U140737488355328",E,E,N,N],[6,"P140737488355328",E,E,N,N],[6,"N140737488355328",E,E,N,N],[6,"U281474976710656",E,E,N,N],[6,"P281474976710656",E,E,N,N],[6,"N281474976710656",E,E,N,N],[6,"U562949953421312",E,E,N,N],[6,"P562949953421312",E,E,N,N],[6,"N562949953421312",E,E,N,N],[6,"U1125899906842624",E,E,N,N],[6,"P1125899906842624",E,E,N,N],[6,"N1125899906842624",E,E,N,N],[6,"U2251799813685248",E,E,N,N],[6,"P2251799813685248",E,E,N,N],[6,"N2251799813685248",E,E,N,N],[6,"U4503599627370496",E,E,N,N],[6,"P4503599627370496",E,E,N,N],[6,"N4503599627370496",E,E,N,N],[6,"U9007199254740992",E,E,N,N],[6,"P9007199254740992",E,E,N,N],[6,"N9007199254740992",E,E,N,N],[6,"U18014398509481984",E,E,N,N],[6,"P18014398509481984",E,E,N,N],[6,"N18014398509481984",E,E,N,N],[6,"U36028797018963968",E,E,N,N],[6,"P36028797018963968",E,E,N,N],[6,"N36028797018963968",E,E,N,N],[6,"U72057594037927936",E,E,N,N],[6,"P72057594037927936",E,E,N,N],[6,"N72057594037927936",E,E,N,N],[6,"U144115188075855872",E,E,N,N],[6,"P144115188075855872",E,E,N,N],[6,"N144115188075855872",E,E,N,N],[6,"U288230376151711744",E,E,N,N],[6,"P288230376151711744",E,E,N,N],[6,"N288230376151711744",E,E,N,N],[6,"U576460752303423488",E,E,N,N],[6,"P576460752303423488",E,E,N,N],[6,"N576460752303423488",E,E,N,N],[6,"U1152921504606846976",E,E,N,N],[6,"P1152921504606846976",E,E,N,N],[6,"N1152921504606846976",E,E,N,N],[6,"U2305843009213693952",E,E,N,N],[6,"P2305843009213693952",E,E,N,N],[6,"N2305843009213693952",E,E,N,N],[6,"U4611686018427387904",E,E,N,N],[6,"P4611686018427387904",E,E,N,N],[6,"N4611686018427387904",E,E,N,N],[6,"U9223372036854775808",E,E,N,N],[6,"U10000",E,E,N,N],[6,"P10000",E,E,N,N],[6,"N10000",E,E,N,N],[6,"U100000",E,E,N,N],[6,"P100000",E,E,N,N],[6,"N100000",E,E,N,N],[6,"U1000000",E,E,N,N],[6,"P1000000",E,E,N,N],[6,"N1000000",E,E,N,N],[6,"U10000000",E,E,N,N],[6,"P10000000",E,E,N,N],[6,"N10000000",E,E,N,N],[6,"U100000000",E,E,N,N],[6,"P100000000",E,E,N,N],[6,"N100000000",E,E,N,N],[6,"U1000000000",E,E,N,N],[6,"P1000000000",E,E,N,N],[6,"N1000000000",E,E,N,N],[6,"U10000000000",E,E,N,N],[6,"P10000000000",E,E,N,N],[6,"N10000000000",E,E,N,N],[6,"U100000000000",E,E,N,N],[6,"P100000000000",E,E,N,N],[6,"N100000000000",E,E,N,N],[6,"U1000000000000",E,E,N,N],[6,"P1000000000000",E,E,N,N],[6,"N1000000000000",E,E,N,N],[6,"U10000000000000",E,E,N,N],[6,"P10000000000000",E,E,N,N],[6,"N10000000000000",E,E,N,N],[6,"U100000000000000",E,E,N,N],[6,"P100000000000000",E,E,N,N],[6,"N100000000000000",E,E,N,N],[6,"U1000000000000000",E,E,N,N],[6,"P1000000000000000",E,E,N,N],[6,"N1000000000000000",E,E,N,N],[6,"U10000000000000000",E,E,N,N],[6,"P10000000000000000",E,E,N,N],[6,"N10000000000000000",E,E,N,N],[6,"U100000000000000000",E,E,N,N],[6,"P100000000000000000",E,E,N,N],[6,"N100000000000000000",E,E,N,N],[6,"U1000000000000000000",E,E,N,N],[6,"P1000000000000000000",E,E,N,N],[6,"N1000000000000000000",E,E,N,N],[6,"U10000000000000000000",E,E,N,N],[0,"bit",R[109],"Type-level bits.",N,N],[3,"B0",R[113],"The type-level bit 0.",N,N],[3,"B1",E,"The type-level bit 1.",N,N],[11,"new",E,R[105],0,[[],["b0"]]],[11,"new",E,R[105],1,[[],["b1"]]],[0,"uint",R[109],"Type-level unsigned integers.",N,N],[3,"UTerm",R[119],"The terminating type for `UInt`; it always comes after the…",N,N],[3,"UInt",E,"`UInt` is defined recursively, where `B` is the least…",N,N],[6,"GetBitOut",E,E,N,N],[6,"SetBitOut",E,"Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",N,N],[8,"GetBit",E,E,N,N],[16,"Output",E,E,2,N],[8,"SetBit",E,"A type operator that, when implemented for unsigned…",N,N],[16,"Output",E,E,3,N],[11,"new",E,R[106],4,[[],["uterm"]]],[11,"new",E,R[106],5,[[],["uint"]]],[0,"int",R[109],"Type-level signed integers.",N,N],[3,"PInt",R[121],"Type-level signed integers with positive sign.",N,N],[3,"NInt",E,"Type-level signed integers with negative sign.",N,N],[3,"Z0",E,"The type-level signed integer 0.",N,N],[11,"new",E,R[107],6,[[],["pint"]]],[11,"new",E,R[107],7,[[],["nint"]]],[11,"new",E,"Instantiates a singleton representing the integer 0.",8,[[],["z0"]]],[0,"marker_traits",R[109],"All of the marker traits used in typenum.",N,N],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",N,N],[8,"Ord",E,"A Marker trait for the types `Greater`, `Equal`, and `Less`.",N,N],[10,R[124],E,E,9,[[],[R[44]]]],[8,"Bit",E,"The marker trait for compile time bits.",N,N],[18,"U8",E,E,10,N],[18,"BOOL",E,E,10,N],[10,"to_u8",E,E,10,[[],["u8"]]],[10,"to_bool",E,E,10,[[],["bool"]]],[8,R[127],E,"The marker trait for compile time unsigned integers.",N,N],[18,"U8",E,E,11,N],[18,"U16",E,E,11,N],[18,"U32",E,E,11,N],[18,"U64",E,E,11,N],[18,"USIZE",E,E,11,N],[18,"I8",E,E,11,N],[18,"I16",E,E,11,N],[18,"I32",E,E,11,N],[18,"I64",E,E,11,N],[18,"ISIZE",E,E,11,N],[10,"to_u8",E,E,11,[[],["u8"]]],[10,"to_u16",E,E,11,[[],["u16"]]],[10,"to_u32",E,E,11,[[],["u32"]]],[10,"to_u64",E,E,11,[[],["u64"]]],[10,R[125],E,E,11,[[],[R[1]]]],[10,"to_i8",E,E,11,[[],["i8"]]],[10,"to_i16",E,E,11,[[],["i16"]]],[10,"to_i32",E,E,11,[[],["i32"]]],[10,"to_i64",E,E,11,[[],["i64"]]],[10,R[108],E,E,11,[[],["isize"]]],[8,R[167],E,"The marker trait for compile time signed integers.",N,N],[18,"I8",E,E,12,N],[18,"I16",E,E,12,N],[18,"I32",E,E,12,N],[18,"I64",E,E,12,N],[18,"ISIZE",E,E,12,N],[10,"to_i8",E,E,12,[[],["i8"]]],[10,"to_i16",E,E,12,[[],["i16"]]],[10,"to_i32",E,E,12,[[],["i32"]]],[10,"to_i64",E,E,12,[[],["i64"]]],[10,R[108],E,E,12,[[],["isize"]]],[8,"TypeArray",E,"The marker trait for type-level arrays of type-level…",N,N],[8,"PowerOfTwo",E,"The marker trait for type-level numbers which are a power…",N,N],[0,"type_operators",R[109],"Useful type operators that are not defined in `core::ops`.",N,N],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",N,N],[16,"Output",E,"Should always be `Self`",13,N],[8,"Abs",E,"A type operator that returns the absolute value.",N,N],[16,"Output",E,"The absolute value.",14,N],[8,"Pow",E,"A type operator that provides exponentiation by repeated…",N,N],[16,"Output",E,"The result of the exponentiation.",15,N],[10,"powi",E,R[110],15,[[["exp"]]]],[8,"Cmp",E,"A type operator for comparing `Self` and `Rhs`. It…",N,N],[16,"Output",E,"The result of the comparison. It should only ever be one…",16,N],[8,"Len",E,"A type operator that gives the length of an `Array` or the…",N,N],[16,"Output",E,"The length as a type-level unsigned integer.",17,N],[10,"len",E,R[110],17,[[["self"]]]],[8,R[128],E,"Division as a partial function. This type operator…",N,N],[16,"Output",E,"The type of the result of the division",18,N],[10,R[120],E,"Method for performing the division",18,[[["rhs"]]]],[8,"Min",E,"A type operator that returns the minimum of `Self` and…",N,N],[16,"Output",E,"The type of the minimum of `Self` and `Rhs`",19,N],[10,"min",E,"Method returning the minimum",19,[[["rhs"]]]],[8,"Max",E,"A type operator that returns the maximum of `Self` and…",N,N],[16,"Output",E,"The type of the maximum of `Self` and `Rhs`",20,N],[10,"max",E,"Method returning the maximum",20,[[["rhs"]]]],[8,"IsLess",E,"A type operator that returns `True` if `Self < Rhs`,…",N,N],[16,"Output",E,R[111],21,N],[10,R[122],E,R[112],21,[[["rhs"]]]],[8,"IsEqual",E,"A type operator that returns `True` if `Self == Rhs`,…",N,N],[16,"Output",E,R[111],22,N],[10,R[118],E,R[112],22,[[["rhs"]]]],[8,R[129],E,"A type operator that returns `True` if `Self > Rhs`,…",N,N],[16,"Output",E,R[111],23,N],[10,R[114],E,R[112],23,[[["rhs"]]]],[8,R[130],E,"A type operator that returns `True` if `Self <= Rhs`,…",N,N],[16,"Output",E,R[111],24,N],[10,R[115],E,R[112],24,[[["rhs"]]]],[8,R[131],E,"A type operator that returns `True` if `Self != Rhs`,…",N,N],[16,"Output",E,R[111],25,N],[10,R[116],E,R[112],25,[[["rhs"]]]],[8,R[132],E,"A type operator that returns `True` if `Self >= Rhs`,…",N,N],[16,"Output",E,R[111],26,N],[10,R[117],E,R[112],26,[[["rhs"]]]],[0,"operator_aliases",R[109],"Aliases for the type operators used in this crate. Their…",N,N],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",N,N],[6,"Or",E,"Alias for the associated type of `BitOr`: `Or<A, B> = <A…",N,N],[6,"Xor",E,"Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",N,N],[6,"Shleft",E,"Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",N,N],[6,"Shright",E,"Alias for the associated type of `Shr`: `Shright<A, B> =…",N,N],[6,"Sum",E,"Alias for the associated type of `Add`: `Sum<A, B> = <A as…",N,N],[6,"Diff",E,"Alias for the associated type of `Sub`: `Diff<A, B> = <A…",N,N],[6,"Prod",E,"Alias for the associated type of `Mul`: `Prod<A, B> = <A…",N,N],[6,"Quot",E,"Alias for the associated type of `Div`: `Quot<A, B> = <A…",N,N],[6,"Mod",E,"Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",N,N],[6,"PartialQuot",E,"Alias for the associated type of `PartialDiv`:…",N,N],[6,"Negate",E,"Alias for the associated type of `Neg`: `Negate<A> = <A as…",N,N],[6,"AbsVal",E,"Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",N,N],[6,"Exp",E,"Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",N,N],[6,"Add1",E,"Alias to make it easy to add 1: `Add1<A> = <A as…",N,N],[6,"Sub1",E,"Alias to make it easy to subtract 1: `Sub1<A> = <A as…",N,N],[6,"Square",E,"Alias to make it easy to square. `Square<A> = <A as…",N,N],[6,"Cube",E,"Alias to make it easy to cube. `Cube<A> = <Square<A> as…",N,N],[6,"Compare",E,"Alias for the associated type of `Cmp`: `Compare<A, B> =…",N,N],[6,"Length",E,"Alias for the associated type of `Len`: `Length<A> = <A as…",N,N],[6,"Minimum",E,"Alias for the associated type of `Min`: `Minimum<A, B> =…",N,N],[6,"Maximum",E,"Alias for the associated type of `Max`: `Maximum<A, B> =…",N,N],[6,"Le",E,"Alias for the associated type of `IsLess`: `Le<A, B> = <A…",N,N],[6,"Eq",E,"Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",N,N],[6,"Gr",E,"Alias for the associated type of `IsGreater`: `Gr<A, B> =…",N,N],[6,"GrEq",E,"Alias for the associated type of `IsGreaterOrEqual`:…",N,N],[6,"LeEq",E,"Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",N,N],[6,"NotEq",E,"Alias for the associated type of `IsNotEqual`: `NotEq<A,…",N,N],[0,"array",R[109],"A type-level array of type-level numbers.",N,N],[3,"ATerm",R[123],"The terminating type for type arrays.",N,N],[3,"TArr",E,"`TArr` is a type that acts as an array of types. It is…",N,N],[14,"op",R[109],"Convenient type operations.",N,N],[14,"cmp",E,"A convenience macro for comparing type numbers. Use `op!`…",N,N],[14,"tarr",E,"Create a new type-level arrray. Only usable on Rust 1.13.0…",N,N],[14,"assert_type_eq",E,"Asserts that two types are the same.",N,N],[14,"assert_type",E,"Asserts that a type is `True`, aka `B1`.",N,N],[11,"from",E,E,27,[[[T]],[T]]],[11,R[21],E,E,27,[[[U]],[R[24]]]],[11,"into",E,E,27,[[],[U]]],[11,R[22],E,E,27,[[],[R[24]]]],[11,R[26],E,E,27,[[["self"]],[T]]],[11,R[23],E,E,27,[[["self"]],[T]]],[11,R[25],E,E,27,[[["self"]],[R[27]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[21],E,E,28,[[[U]],[R[24]]]],[11,"into",E,E,28,[[],[U]]],[11,R[22],E,E,28,[[],[R[24]]]],[11,R[26],E,E,28,[[["self"]],[T]]],[11,R[23],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"]],[R[27]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[21],E,E,29,[[[U]],[R[24]]]],[11,"into",E,E,29,[[],[U]]],[11,R[22],E,E,29,[[],[R[24]]]],[11,R[26],E,E,29,[[["self"]],[T]]],[11,R[23],E,E,29,[[["self"]],[T]]],[11,R[25],E,E,29,[[["self"]],[R[27]]]],[11,R[122],R[113],E,0,[[["b"]]]],[11,R[118],E,E,0,[[["b"]]]],[11,R[114],E,E,0,[[["b"]]]],[11,R[115],E,E,0,[[["b"]]]],[11,R[116],E,E,0,[[["b"]]]],[11,R[117],E,E,0,[[["b"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,R[122],E,E,1,[[["b"]]]],[11,R[118],E,E,1,[[["b"]]]],[11,R[114],E,E,1,[[["b"]]]],[11,R[115],E,E,1,[[["b"]]]],[11,R[116],E,E,1,[[["b"]]]],[11,R[117],E,E,1,[[["b"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,"powi",R[119],E,4,[[["n"]]]],[11,R[120],E,E,4,[[["n"]]]],[11,R[122],E,E,4,[[["b"]]]],[11,R[118],E,E,4,[[["b"]]]],[11,R[114],E,E,4,[[["b"]]]],[11,R[115],E,E,4,[[["b"]]]],[11,R[116],E,E,4,[[["b"]]]],[11,R[117],E,E,4,[[["b"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[[U]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[],[R[24]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[27]]]],[11,"powi",E,E,5,[[["n"]]]],[11,R[120],E,E,5,[[["n"]]]],[11,R[122],E,E,5,[[["b"]]]],[11,R[118],E,E,5,[[["b"]]]],[11,R[114],E,E,5,[[["b"]]]],[11,R[115],E,E,5,[[["b"]]]],[11,R[116],E,E,5,[[["b"]]]],[11,R[117],E,E,5,[[["b"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[21],E,E,5,[[[U]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,R[22],E,E,5,[[],[R[24]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"]],[R[27]]]],[11,"powi",R[121],E,6,[[["n"]]]],[11,R[120],E,E,6,[[["n"]]]],[11,R[122],E,E,6,[[["b"]]]],[11,R[118],E,E,6,[[["b"]]]],[11,R[114],E,E,6,[[["b"]]]],[11,R[115],E,E,6,[[["b"]]]],[11,R[116],E,E,6,[[["b"]]]],[11,R[117],E,E,6,[[["b"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[21],E,E,6,[[[U]],[R[24]]]],[11,"into",E,E,6,[[],[U]]],[11,R[22],E,E,6,[[],[R[24]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"]],[R[27]]]],[11,"powi",E,E,7,[[["n"]]]],[11,R[120],E,E,7,[[["n"]]]],[11,R[122],E,E,7,[[["b"]]]],[11,R[118],E,E,7,[[["b"]]]],[11,R[114],E,E,7,[[["b"]]]],[11,R[115],E,E,7,[[["b"]]]],[11,R[116],E,E,7,[[["b"]]]],[11,R[117],E,E,7,[[["b"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[21],E,E,7,[[[U]],[R[24]]]],[11,"into",E,E,7,[[],[U]]],[11,R[22],E,E,7,[[],[R[24]]]],[11,R[26],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"]],[R[27]]]],[11,"powi",E,E,8,[[["n"]]]],[11,R[120],E,E,8,[[["n"]]]],[11,R[122],E,E,8,[[["b"]]]],[11,R[118],E,E,8,[[["b"]]]],[11,R[114],E,E,8,[[["b"]]]],[11,R[115],E,E,8,[[["b"]]]],[11,R[116],E,E,8,[[["b"]]]],[11,R[117],E,E,8,[[["b"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[21],E,E,8,[[[U]],[R[24]]]],[11,"into",E,E,8,[[],[U]]],[11,R[22],E,E,8,[[],[R[24]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"]],[R[27]]]],[11,R[120],R[123],E,30,[[["n"]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[21],E,E,30,[[[U]],[R[24]]]],[11,"into",E,E,30,[[],[U]]],[11,R[22],E,E,30,[[],[R[24]]]],[11,R[26],E,E,30,[[["self"]],[T]]],[11,R[23],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"]],[R[27]]]],[11,R[120],E,E,31,[[["n"]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[21],E,E,31,[[[U]],[R[24]]]],[11,"into",E,E,31,[[],[U]]],[11,R[22],E,E,31,[[],[R[24]]]],[11,R[26],E,E,31,[[["self"]],[T]]],[11,R[23],E,E,31,[[["self"]],[T]]],[11,R[25],E,E,31,[[["self"]],[R[27]]]],[11,R[124],R[109],E,27,[[],[R[44]]]],[11,R[124],E,E,28,[[],[R[44]]]],[11,R[124],E,E,29,[[],[R[44]]]],[11,"to_u8",R[113],E,0,[[],["u8"]]],[11,"to_bool",E,E,0,[[],["bool"]]],[11,"to_u8",E,E,1,[[],["u8"]]],[11,"to_bool",E,E,1,[[],["bool"]]],[11,"to_u8",R[119],E,4,[[],["u8"]]],[11,"to_u16",E,E,4,[[],["u16"]]],[11,"to_u32",E,E,4,[[],["u32"]]],[11,"to_u64",E,E,4,[[],["u64"]]],[11,R[125],E,E,4,[[],[R[1]]]],[11,"to_i8",E,E,4,[[],["i8"]]],[11,"to_i16",E,E,4,[[],["i16"]]],[11,"to_i32",E,E,4,[[],["i32"]]],[11,"to_i64",E,E,4,[[],["i64"]]],[11,R[108],E,E,4,[[],["isize"]]],[11,"to_u8",E,E,5,[[],["u8"]]],[11,"to_u16",E,E,5,[[],["u16"]]],[11,"to_u32",E,E,5,[[],["u32"]]],[11,"to_u64",E,E,5,[[],["u64"]]],[11,R[125],E,E,5,[[],[R[1]]]],[11,"to_i8",E,E,5,[[],["i8"]]],[11,"to_i16",E,E,5,[[],["i16"]]],[11,"to_i32",E,E,5,[[],["i32"]]],[11,"to_i64",E,E,5,[[],["i64"]]],[11,R[108],E,E,5,[[],["isize"]]],[11,"to_i8",R[121],E,8,[[],["i8"]]],[11,"to_i16",E,E,8,[[],["i16"]]],[11,"to_i32",E,E,8,[[],["i32"]]],[11,"to_i64",E,E,8,[[],["i64"]]],[11,R[108],E,E,8,[[],["isize"]]],[11,"to_i8",E,E,6,[[],["i8"]]],[11,"to_i16",E,E,6,[[],["i16"]]],[11,"to_i32",E,E,6,[[],["i32"]]],[11,"to_i64",E,E,6,[[],["i64"]]],[11,R[108],E,E,6,[[],["isize"]]],[11,"to_i8",E,E,7,[[],["i8"]]],[11,"to_i16",E,E,7,[[],["i16"]]],[11,"to_i32",E,E,7,[[],["i32"]]],[11,"to_i64",E,E,7,[[],["i64"]]],[11,R[108],E,E,7,[[],["isize"]]],[11,"powi",E,E,8,[[["z0"]]]],[11,"powi",E,E,8,[[["pint"]]]],[11,"powi",E,E,8,[[["nint"]]]],[11,"powi",R[109],E,32,[[["nint"]]]],[11,"powi",E,E,33,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi",E,E,33,[[["nint",["uint"]],["uint",["b1"]]]]],[11,"powi",R[121],E,6,[[["z0"]]]],[11,"powi",E,E,7,[[["z0"]]]],[11,"powi",E,E,6,[[["pint"]]]],[11,"powi",E,E,7,[[["uint",["b0"]],["pint",["uint"]]]]],[11,"powi",E,E,7,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"len",R[119],E,4,[[["self"]]]],[11,"len",E,E,5,[[["self"]]]],[11,"len",R[123],E,30,[[["self"]]]],[11,"len",E,E,31,[[["self"]]]],[11,R[120],R[119],E,4,[[["uint"]]]],[11,R[120],E,E,5,[[["uint"]]]],[11,R[120],R[123],E,30,[[["rhs"]]]],[11,R[120],E,E,31,[[["rhs"]]]],[11,"min",R[113],E,0,[[["b0"]],["b0"]]],[11,"min",E,E,0,[[["b1"]],["b0"]]],[11,"min",E,E,1,[[["b0"]],["b0"]]],[11,"min",E,E,1,[[["b1"]],["b1"]]],[11,"min",R[119],E,4,[[[U]]]],[11,"min",E,E,5,[[["ur"]]]],[11,"min",R[121],E,8,[[["z0"]]]],[11,"min",E,E,8,[[["pint"]]]],[11,"min",E,E,8,[[["nint"]]]],[11,"min",E,E,6,[[["z0"]]]],[11,"min",E,E,7,[[["z0"]]]],[11,"min",E,E,6,[[["pint"]]]],[11,"min",E,E,7,[[["pint"]]]],[11,"min",E,E,6,[[["nint"]]]],[11,"min",E,E,7,[[["nint"]]]],[11,"max",R[113],E,0,[[["b0"]],["b0"]]],[11,"max",E,E,0,[[["b1"]],["b1"]]],[11,"max",E,E,1,[[["b0"]],["b1"]]],[11,"max",E,E,1,[[["b1"]],["b1"]]],[11,"max",R[119],E,4,[[[U]]]],[11,"max",E,E,5,[[["ur"]]]],[11,"max",R[121],E,8,[[["z0"]]]],[11,"max",E,E,8,[[["pint"]]]],[11,"max",E,E,8,[[["nint"]]]],[11,"max",E,E,6,[[["z0"]]]],[11,"max",E,E,7,[[["z0"]]]],[11,"max",E,E,6,[[["pint"]]]],[11,"max",E,E,7,[[["pint"]]]],[11,"max",E,E,6,[[["nint"]]]],[11,"max",E,E,7,[[["nint"]]]],[11,"eq",R[113],E,0,[[["self"],["b0"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["b1"]],["bool"]]],[11,"eq",R[119],E,4,[[["self"],["uterm"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"eq",R[121],E,6,[[["self"],["pint"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["z0"]],["bool"]]],[11,"eq",R[123],E,30,[[["self"],["aterm"]],["bool"]]],[11,"eq",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"ne",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"eq",R[109],E,27,[[["self"],["greater"]],["bool"]]],[11,"eq",E,E,28,[[["self"],["less"]],["bool"]]],[11,"eq",E,E,29,[[["self"],["equal"]],["bool"]]],[11,"cmp",R[113],E,0,[[["self"],["b0"]],[R[44]]]],[11,"cmp",E,E,1,[[["self"],["b1"]],[R[44]]]],[11,"cmp",R[119],E,4,[[["self"],["uterm"]],[R[44]]]],[11,"cmp",E,E,5,[[["self"],["uint"]],[R[44]]]],[11,"cmp",R[121],E,6,[[["self"],["pint"]],[R[44]]]],[11,"cmp",E,E,7,[[["self"],["nint"]],[R[44]]]],[11,"cmp",E,E,8,[[["self"],["z0"]],[R[44]]]],[11,"cmp",R[123],E,30,[[["self"],["aterm"]],[R[44]]]],[11,"cmp",E,E,31,[[["self"],["tarr"]],[R[44]]]],[11,"cmp",R[109],E,27,[[["self"],["greater"]],[R[44]]]],[11,"cmp",E,E,28,[[["self"],["less"]],[R[44]]]],[11,"cmp",E,E,29,[[["self"],["equal"]],[R[44]]]],[11,R[45],R[113],E,0,[[["self"],["b0"]],[[R[44]],[R[20],[R[44]]]]]],[11,R[45],E,E,1,[[["self"],["b1"]],[[R[44]],[R[20],[R[44]]]]]],[11,R[45],R[119],E,4,[[["self"],["uterm"]],[[R[44]],[R[20],[R[44]]]]]],[11,R[45],E,E,5,[[["self"],["uint"]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"le",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"gt",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"ge",E,E,5,[[["self"],["uint"]],["bool"]]],[11,R[45],R[121],E,6,[[["self"],["pint"]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"le",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"gt",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"ge",E,E,6,[[["self"],["pint"]],["bool"]]],[11,R[45],E,E,7,[[["self"],["nint"]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"le",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"gt",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"ge",E,E,7,[[["self"],["nint"]],["bool"]]],[11,R[45],E,E,8,[[["self"],["z0"]],[[R[44]],[R[20],[R[44]]]]]],[11,R[45],R[123],E,30,[[["self"],["aterm"]],[[R[44]],[R[20],[R[44]]]]]],[11,R[45],E,E,31,[[["self"],["tarr"]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"le",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"gt",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"ge",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,R[45],R[109],E,27,[[["self"],["greater"]],[[R[44]],[R[20],[R[44]]]]]],[11,R[45],E,E,28,[[["self"],["less"]],[[R[44]],[R[20],[R[44]]]]]],[11,R[45],E,E,29,[[["self"],["equal"]],[[R[44]],[R[20],[R[44]]]]]],[11,"hash",R[113],E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[119],E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",R[121],E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",R[123],E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",R[109],E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"add",R[119],E,4,[[["b0"]]]],[11,"add",E,E,5,[[["b0"]]]],[11,"add",E,E,4,[[["b1"]]]],[11,"add",E,E,5,[[["b1"]]]],[11,"add",E,E,5,[[["b1"]]]],[11,"add",E,E,4,[[[U]]]],[11,"add",E,E,5,[[["uterm"]]]],[11,"add",E,E,5,[[["uint",["b0"]],["b0"]]]],[11,"add",E,E,5,[[["uint",["b1"]],["b1"]]]],[11,"add",E,E,5,[[["uint",["b0"]],["b0"]]]],[11,"add",E,E,5,[[["uint",["b1"]],["b1"]]]],[11,"add",R[121],E,8,[[["i"]]]],[11,"add",E,E,6,[[["z0"]]]],[11,"add",E,E,7,[[["z0"]]]],[11,"add",E,E,6,[[["pint"]]]],[11,"add",E,E,7,[[["nint"]]]],[11,"add",E,E,6,[[["nint"]]]],[11,"add",E,E,7,[[["pint"]]]],[11,"add",R[123],E,30,[[["aterm"]]]],[11,"add",E,E,31,[[["tarr"]]]],[11,"sub",R[119],E,4,[[["b0"]]]],[11,"sub",E,E,5,[[["b0"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,4,[[["uterm"]]]],[11,"sub",E,E,5,[[["ur"]]]],[11,"sub",R[121],E,8,[[["z0"]]]],[11,"sub",E,E,8,[[["pint"]]]],[11,"sub",E,E,8,[[["nint"]]]],[11,"sub",E,E,6,[[["z0"]]]],[11,"sub",E,E,7,[[["z0"]]]],[11,"sub",E,E,6,[[["nint"]]]],[11,"sub",E,E,7,[[["pint"]]]],[11,"sub",E,E,6,[[["pint"]]]],[11,"sub",E,E,7,[[["nint"]]]],[11,"sub",R[123],E,30,[[["aterm"]]]],[11,"sub",E,E,31,[[["tarr"]]]],[11,"mul",R[119],E,5,[[["b0"]]]],[11,"mul",E,E,4,[[["b0"]]]],[11,"mul",E,E,4,[[["b1"]]]],[11,"mul",E,E,5,[[["b1"]]]],[11,"mul",E,E,5,[[["uterm"]]]],[11,"mul",E,E,4,[[[U]]]],[11,"mul",E,E,5,[[["uint"]]]],[11,"mul",E,E,5,[[["uint"]]]],[11,"mul",R[121],E,8,[[["i"]]]],[11,"mul",E,E,6,[[["z0"]]]],[11,"mul",E,E,7,[[["z0"]]]],[11,"mul",E,E,6,[[["pint"]]]],[11,"mul",E,E,7,[[["nint"]]]],[11,"mul",E,E,6,[[["nint"]]]],[11,"mul",E,E,7,[[["pint"]]]],[11,"mul",R[123],E,30,[[["rhs"]]]],[11,"mul",E,E,31,[[["rhs"]]]],[11,"mul",R[121],E,8,[[["aterm"]]]],[11,"mul",E,E,6,[[["aterm"]]]],[11,"mul",E,E,7,[[["aterm"]]]],[11,"mul",E,E,8,[[["tarr"]]]],[11,"mul",E,E,6,[[["tarr"]]]],[11,"mul",E,E,7,[[["tarr"]]]],[11,"div",R[119],E,4,[[["uint"]]]],[11,"div",E,E,5,[[["uint"]]]],[11,"div",R[121],E,8,[[["i"]]]],[11,"div",E,E,6,[[["pint"]]]],[11,"div",E,E,6,[[["nint"]]]],[11,"div",E,E,7,[[["pint"]]]],[11,"div",E,E,7,[[["nint"]]]],[11,"div",R[123],E,30,[[["rhs"]]]],[11,"div",E,E,31,[[["rhs"]]]],[11,"rem",R[119],E,4,[[["uint"]]]],[11,"rem",E,E,5,[[["uint"]]]],[11,"rem",R[121],E,8,[[["i"]]]],[11,"rem",E,E,6,[[["pint"]]]],[11,"rem",E,E,6,[[["nint"]]]],[11,"rem",E,E,7,[[["pint"]]]],[11,"rem",E,E,7,[[["nint"]]]],[11,"rem",R[123],E,30,[[["rhs"]]]],[11,"rem",E,E,31,[[["rhs"]]]],[11,"neg",R[121],E,8,[[]]],[11,"neg",E,E,6,[[]]],[11,"neg",E,E,7,[[]]],[11,"neg",R[123],E,30,[[]]],[11,"neg",E,E,31,[[]]],[11,"not",R[113],E,0,[[]]],[11,"not",E,E,1,[[]]],[11,"bitand",E,E,0,[[["rhs"]]]],[11,"bitand",E,E,1,[[["b0"]]]],[11,"bitand",E,E,1,[[["b1"]]]],[11,"bitand",R[119],E,4,[[["ur"]]]],[11,"bitand",E,E,5,[[["ur"]]]],[11,"bitor",R[113],E,0,[[["b0"]]]],[11,"bitor",E,E,0,[[["b1"]]]],[11,"bitor",E,E,1,[[["rhs"]]]],[11,"bitor",R[119],E,4,[[[U]]]],[11,"bitor",E,E,5,[[["uterm"]]]],[11,"bitor",E,E,5,[[["uint",["b0"]],["b0"]]]],[11,"bitor",E,E,5,[[["uint",["b1"]],["b1"]]]],[11,"bitor",E,E,5,[[["uint",["b0"]],["b0"]]]],[11,"bitor",E,E,5,[[["uint",["b1"]],["b1"]]]],[11,"bitxor",R[113],E,0,[[["b0"]]]],[11,"bitxor",E,E,1,[[["b0"]]]],[11,"bitxor",E,E,0,[[["b1"]]]],[11,"bitxor",E,E,1,[[["b1"]]]],[11,"bitxor",R[119],E,4,[[["ur"]]]],[11,"bitxor",E,E,5,[[["ur"]]]],[11,"shl",E,E,4,[[["b0"]]]],[11,"shl",E,E,4,[[["b1"]]]],[11,"shl",E,E,5,[[["b0"]]]],[11,"shl",E,E,5,[[["b1"]]]],[11,"shl",E,E,5,[[["uterm"]]]],[11,"shl",E,E,4,[[[U]]]],[11,"shl",E,E,5,[[["uint"]]]],[11,"shr",E,E,4,[[[U]]]],[11,"shr",E,E,5,[[["uterm"]]]],[11,"shr",E,E,4,[[["b0"]]]],[11,"shr",E,E,4,[[["b1"]]]],[11,"shr",E,E,5,[[["b0"]]]],[11,"shr",E,E,5,[[["b1"]]]],[11,"shr",E,E,5,[[["uint"]]]],[11,"fmt",R[113],E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[119],E,4,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[121],E,6,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[123],E,30,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,31,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[109],E,27,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,28,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,29,[[["self"],[R[29]]],[R[24]]]],[11,"clone",R[113],E,0,[[["self"]],["b0"]]],[11,"clone",E,E,1,[[["self"]],["b1"]]],[11,"clone",R[119],E,4,[[["self"]],["uterm"]]],[11,"clone",E,E,5,[[["self"]],["uint"]]],[11,"clone",R[121],E,6,[[["self"]],["pint"]]],[11,"clone",E,E,7,[[["self"]],["nint"]]],[11,"clone",E,E,8,[[["self"]],["z0"]]],[11,"clone",R[123],E,30,[[["self"]],["aterm"]]],[11,"clone",E,E,31,[[["self"]],["tarr"]]],[11,"clone",R[109],E,27,[[["self"]],["greater"]]],[11,"clone",E,E,28,[[["self"]],["less"]]],[11,"clone",E,E,29,[[["self"]],["equal"]]],[11,R[126],R[113],E,0,[[],["b0"]]],[11,R[126],E,E,1,[[],["b1"]]],[11,R[126],R[119],E,4,[[],["uterm"]]],[11,R[126],E,E,5,[[],["uint"]]],[11,R[126],R[121],E,6,[[],["pint"]]],[11,R[126],E,E,7,[[],["nint"]]],[11,R[126],E,E,8,[[],["z0"]]],[11,R[126],R[109],E,27,[[],["greater"]]],[11,R[126],E,E,28,[[],["less"]]],[11,R[126],E,E,29,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,R[127]],[8,R[167]],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,R[128]],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,R[129]],[8,R[130]],[8,R[131]],[8,R[132]],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["x86_64"]={"doc":E,"i":[[0,"boot","x86_64",E,N,N],[3,R[579],R[555],E,N,N],[12,"area",E,E,0,N],[12,"memory_type",E,E,0,N],[3,R[580],E,"Describes a memory region that should be represented by…",N,N],[12,R[529],E,E,1,N],[12,R[551],E,E,1,N],[12,R[687],E,E,1,N],[12,"permissions",E,E,1,N],[3,R[581],E,"An image loaded from the filesystem by the bootloader. The…",N,N],[12,"name_length",E,"The name of the name in bytes. Maximum of 32.",2,N],[12,"name",E,"Name of the task that this image represents. Must be valid…",2,N],[12,"num_segments",E,E,2,N],[12,"segments",E,E,2,N],[12,"entry_point",E,E,2,N],[12,"capability_stream",E,E,2,N],[3,R[582],E,E,N,N],[12,"framebuffer_address",E,E,3,N],[12,"pixel_format",E,E,3,N],[12,"width",E,E,3,N],[12,"height",E,E,3,N],[12,"stride",E,"How many pixels are in each scan-line. This can be greater…",3,N],[3,R[583],E,"This structure is placed in memory by the bootloader and a…",N,N],[12,"magic",E,"This should be set to `BOOT_INFO_MAGIC` by the bootloader.",4,N],[12,"memory_map",E,E,4,N],[12,"num_memory_map_entries",E,E,4,N],[12,"rsdp_address",E,E,4,N],[12,"num_images",E,E,4,N],[12,"images",E,E,4,N],[12,"video_info",E,E,4,N],[4,R[584],E,E,N,N],[13,"UefiServices",E,"Memory used by the UEFI services. Cannot be used by the OS.",5,N],[13,"Conventional",E,"Conventional memory that can freely be used by the OS,",5,N],[13,"AcpiReclaimable",E,"Memory that contains ACPI tables. After the OS has parsed…",5,N],[13,"SleepPreserve",E,R[530],5,N],[13,"NonVolatileSleepPreserve",E,R[530],5,N],[13,"KernelImage",E,"Memory the bootloader has mapped the kernel image into.…",5,N],[13,"LoadedImage",E,"Memory the bootloader has mapped images its been asked to…",5,N],[13,"KernelPageTables",E,"Memory the bootloader has used for the page tables…",5,N],[13,"KernelHeap",E,"Memory the bootloader has mapped for use as the kernel…",5,N],[13,R[583],E,"Memory used for storing the `BootInfo` by the bootloader.…",5,N],[4,R[585],E,E,N,N],[13,"RGB32",E,R[531],6,N],[13,"BGR32",E,R[531],6,N],[17,"BOOT_INFO_MAGIC",E,E,N,N],[17,"NUM_MEMORY_MAP_ENTRIES",E,E,N,N],[17,"NUM_IMAGES",E,E,N,N],[17,"NUM_SEGMENTS_PER_IMAGE",E,"Each initial image is expected to have a maximum of three…",N,N],[17,"MAX_CAPABILITY_BYTES_PER_IMAGE",E,E,N,N],[17,"MAX_NAME_BYTES",E,"The maximum number of bytes that the task's name can be…",N,N],[11,"add_segment",E,R[532],2,[[["self"],[R[577]]]]],[11,"segments",E,E,2,[[["self"]]]],[11,"memory_entries",E,E,4,[[["self"]]]],[11,"add_memory_map_entry",E,R[532],4,[[["self"],["memoryentry"]]]],[11,"images",E,E,4,[[["self"]]]],[11,"add_image",E,R[532],4,[[["self"],[R[578]]]]],[0,"hw","x86_64",E,N,N],[3,R[586],R[536],E,N,N],[12,"limit",E,"`base + limit` is the last addressable byte of the…",7,N],[12,"base",E,"Virtual address of the start of the descriptor table.",7,N],[0,"gdt",E,E,N,N],[3,R[587],R[556],"An index into the GDT, specifying a particular segment.…",N,N],[12,"0",E,E,8,N],[3,R[589],E,E,N,N],[3,R[590],E,E,N,N],[3,R[591],E,E,N,N],[3,"Gdt",E,"A GDT suitable for the kernel to use. The order of the…",N,N],[4,R[588],E,E,N,N],[13,"Ring0",E,E,9,N],[13,"Ring1",E,E,9,N],[13,"Ring2",E,E,9,N],[13,"Ring3",E,E,9,N],[17,"KERNEL_CODE_SELECTOR",E,E,N,N],[17,"KERNEL_DATA_SELECTOR",E,E,N,N],[17,"USER_COMPAT_CODE_SELECTOR",E,E,N,N],[17,"USER_DATA_SELECTOR",E,E,N,N],[17,"USER_CODE64_SELECTOR",E,E,N,N],[17,"NUM_STATIC_ENTRIES",E,E,N,N],[17,"OFFSET_TO_FIRST_TSS",E,E,N,N],[17,"MAX_CPUS",E,E,N,N],[11,"new",E,E,8,[[["u16"],[R[533]]],[R[535]]]],[11,"table_offset",E,E,8,[[["self"]],["u16"]]],[11,"new",E,E,10,[[[R[533]]],["codesegment"]]],[11,"new",E,E,11,[[[R[533]]],["datasegment"]]],[11,"empty",E,E,12,[[],[R[534]]]],[11,"new",E,E,12,[[["tss"],["pin",["tss"]]],[R[534]]]],[11,"new",E,"Create a `Gdt` with pre-populated code and data segments,…",13,[[],["gdt"]]],[11,"add_tss",E,"Add a new TSS, if there's space for it. The first TSS…",13,[[["self"],[R[534]]],[R[535]]]],[11,"load",E,"Load the new GDT, switch to the new `kernel_code` code…",13,[[["self"],[R[535]]]]],[0,"tss",R[536],E,N,N],[3,"Tss",R[557],"Hardware task switching isn't supported on x86_64, so the…",N,N],[12,"privilege_stack_table",E,E,14,N],[12,"interrupt_stack_table",E,E,14,N],[12,"iomap_base",E,E,14,N],[11,"new",E,E,14,[[],["tss"]]],[11,"set_kernel_stack",E,E,14,[[["self"],[R[539]]]]],[0,"idt",R[536],E,N,N],[3,"IdtEntry",R[558],E,N,N],[3,"Idt",E,E,N,N],[3,R[592],E,E,N,N],[12,"instruction_pointer",E,E,15,N],[12,"code_segment",E,E,15,N],[12,"cpu_flags",E,E,15,N],[12,"stack_pointer",E,E,15,N],[12,"stack_segment",E,E,15,N],[6,"HandlerFunc",E,"The type of a function that can be used as an interrupt…",N,N],[11,"missing",E,E,16,[[],[R[537]]]],[11,R[688],E,E,16,[[["self"],[R[535]],["handlerfunc"]],["self"]]],[11,"set_ist_handler",E,E,16,[[["self"],["u8"]],["self"]]],[11,"set_privilege_level",E,E,16,[[["self"],[R[533]]],["self"]]],[11,"empty",E,E,17,[[],["idt"]]],[11,"divide_error",E,E,17,[[["self"]],[R[537]]]],[11,"debug_exception",E,E,17,[[["self"]],[R[537]]]],[11,"nmi",E,E,17,[[["self"]],[R[537]]]],[11,"breakpoint",E,E,17,[[["self"]],[R[537]]]],[11,"overflow",E,E,17,[[["self"]],[R[537]]]],[11,"bound_range_exceeded",E,E,17,[[["self"]],[R[537]]]],[11,"invalid_opcode",E,E,17,[[["self"]],[R[537]]]],[11,"device_not_available",E,E,17,[[["self"]],[R[537]]]],[11,"double_fault",E,E,17,[[["self"]],[R[537]]]],[11,"invalid_tss",E,E,17,[[["self"]],[R[537]]]],[11,"segment_not_present",E,E,17,[[["self"]],[R[537]]]],[11,"stack_segment_fault",E,E,17,[[["self"]],[R[537]]]],[11,"general_protection_fault",E,E,17,[[["self"]],[R[537]]]],[11,"page_fault",E,E,17,[[["self"]],[R[537]]]],[11,"x87_fault",E,E,17,[[["self"]],[R[537]]]],[11,"alignment_check",E,E,17,[[["self"]],[R[537]]]],[11,"machine_check",E,E,17,[[["self"]],[R[537]]]],[11,"simd_exception",E,E,17,[[["self"]],[R[537]]]],[11,"virtualization_exception",E,E,17,[[["self"]],[R[537]]]],[11,"load",E,E,17,[[["self"]]]],[0,"i8259_pic",R[536],E,N,N],[3,"Pic",R[559],E,N,N],[11,"new",E,E,18,[[],["pic"]]],[11,"remap_and_disable",E,"Remap and disable the PIC. It is necessary to remap the…",18,[[["self"],["u8"]]]],[0,"local_apic",R[536],E,N,N],[3,R[593],R[560],"Represents a register in the local APIC's configuration…",N,N],[3,R[594],E,"Methods on this type operate on the local APIC of the…",N,N],[11,"read",E,"Read from this register. Unsafe because not all registers…",19,[[["self"]],["u32"]]],[11,"write",E,"Write to this register. Unsafe because not all registers…",19,[[["self"],["u32"]]]],[11,"enable",E,E,20,[[["u8"]]]],[11,"enable_timer",E,"Set the local APIC timer to interrupt every `duration` ms,…",20,[[["u32"],["u8"]]]],[11,"register",E,E,20,[[[R[1]]],["localapicregister"]]],[11,"send_eoi",E,"Send an End Of Interrupt to the local APIC. This should be…",20,[[]]],[0,"cpu",R[536],E,N,N],[3,R[595],R[561],E,N,N],[12,"xsave",E,E,21,N],[3,"CpuInfo",E,"Describes information we know about the system we're…",N,N],[12,"max_supported_standard_level",E,E,22,N],[12,"vendor",E,E,22,N],[12,"model_info",E,E,22,N],[12,"supported_features",E,E,22,N],[12,"hypervisor_info",E,"Information about the hypervisor we're running under, if…",22,N],[3,R[596],E,E,N,N],[12,"family",E,E,23,N],[12,"model",E,E,23,N],[12,"stepping",E,E,23,N],[12,"extended_family",E,E,23,N],[12,"extended_model",E,E,23,N],[3,R[608],E,E,N,N],[4,"Vendor",E,E,N,N],[13,"Unknown",E,E,24,N],[13,"Intel",E,E,24,N],[13,"Amd",E,E,24,N],[4,R[597],E,"Intel and AMD microarchitectures we can expect processors…",N,N],[13,"Nehalem",E,E,25,N],[13,"Westmere",E,E,25,N],[13,"SandyBridge",E,E,25,N],[13,"IvyBridge",E,E,25,N],[13,"Haswell",E,E,25,N],[13,"Broadwell",E,E,25,N],[13,"Skylake",E,E,25,N],[13,"KabyLake",E,E,25,N],[13,"CoffeeLake",E,E,25,N],[13,"CannonLake",E,E,25,N],[13,"WhiskeyLake",E,E,25,N],[13,"AmberLake",E,E,25,N],[13,"Bulldozer",E,E,25,N],[13,"Jaguar",E,E,25,N],[13,"Zen",E,E,25,N],[4,R[598],E,E,N,N],[13,"Unknown",E,E,26,N],[13,"Kvm",E,E,26,N],[11,"new",E,E,22,[[],["cpuinfo"]]],[11,R[538],E,E,22,[[["self"]],[[R[20],[R[538]]],[R[538]]]]],[11,"apic_frequency",E,"Get the frequency the APIC runs at (in Hz), if we can…",22,[[["self"]],[[R[20],["u32"]],["u32"]]]],[0,"port",R[536],E,N,N],[3,"Port",R[562],"Represents an IO port that can be read and written to…",N,N],[8,"PortSize",E,"Implemented by the types used to represent 8-bit, 16-bit,…",N,N],[10,"port_read",E,E,27,[[["u16"]],["self"]]],[10,"port_write",E,E,27,[[["u16"]]]],[11,"new",E,"Create a new `Port` at the specified I/O address. Unsafe…",28,[[["u16"]],["port"]]],[11,"read",E,E,28,[[["self"]],[T]]],[11,"write",E,E,28,[[["self"],[T]]]],[0,"registers",R[536],E,N,N],[3,"CpuFlags",R[563],"A wrapper for the `RFLAGS` register, providing a nice…",N,N],[12,"0",E,E,29,N],[5,"read_msr",E,"Read from a model-specific register.",N,[[["u32"]],["u64"]]],[5,"write_msr",E,"Write to a model-specific register. This is unsafe,…",N,[[["u32"],["u64"]]]],[17,"CR4_RESTRICT_RDTSC",E,"If this is set, `rdtsc` can only be used in Ring 0.",N,N],[17,"CR4_ENABLE_PAE",E,E,N,N],[17,"CR4_ENABLE_GLOBAL_PAGES",E,E,N,N],[17,"CR4_XSAVE_ENABLE_BIT",E,E,N,N],[17,"EFER",E,E,N,N],[17,"EFER_ENABLE_SYSCALL",E,E,N,N],[17,"EFER_ENABLE_LONG_MODE",E,E,N,N],[17,"EFER_ENABLE_NX_BIT",E,E,N,N],[17,"IA32_STAR",E,"Contains the Ring 0 and Ring 3 code-segment selectors…",N,N],[17,"IA32_LSTAR",E,"Contains the virtual address of the handler to call upon…",N,N],[17,"IA32_FMASK",E,"Upon `syscall`, the value of this MSR is used to mask…",N,N],[17,"IA32_GS_BASE",E,"A virtual address can be stored in this MSR, and acts as…",N,N],[11,"read",E,"Read the contents of `RFLAGS`, creating a `CpuFlags`.",29,[[],["cpuflags"]]],[11,"interrupts_enabled",E,E,29,[[["self"]],["bool"]]],[0,"serial",R[536],E,N,N],[3,R[599],R[564],E,N,N],[17,"COM1",E,E,N,N],[11,"new",E,E,30,[[["u16"]],["serialport"]]],[11,"initialise",E,E,30,[[["self"]]]],[11,"read",E,E,30,[[["self"]],["u8"]]],[11,"write",E,E,30,[[["self"],["u8"]]]],[0,"tlb",R[536],E,N,N],[5,"invalidate_page","x86_64::hw::tlb",E,N,[[[R[539]]]]],[5,"flush",E,E,N,[[]]],[0,"memory","x86_64",E,N,N],[4,"Size4KiB",R[541],E,N,N],[4,"Size2MiB",E,E,N,N],[0,"frame",E,E,N,N],[3,"Frame",R[565],E,N,N],[12,R[542],E,E,31,N],[11,R[543],E,E,31,[[[R[540]]],["frame"]]],[11,R[545],E,E,31,[[[R[540]]],["frame"]]],[0,"frame_allocator",R[541],E,N,N],[8,R[600],"x86_64::memory::frame_allocator","`FrameAllocator` represents the `x86_64` crate's interface…",N,N],[11,"allocate",E,"Allocate a `Frame`.",32,[[["self"]],["frame"]]],[10,R[656],E,"Allocate `n` contiguous `Frame`s.",32,[[["self"],[R[1]]],[["range",["frame"]],["frame"]]]],[10,"free_n",E,"Free `n` frames that were previously allocated by this…",32,[[["self"],[R[1]],["frame"]]]],[0,"kernel_map",R[541],"These constants centralize the layout of the virtual…",N,N],[5,R[689],"x86_64::memory::kernel_map",E,N,[[[R[1]]],[R[539]]]],[5,"physical_to_virtual",E,"Access a given `PhysicalAddress` using the physical memory…",N,[[[R[540]]],[R[539]]]],[17,"STACK_SLOT_SIZE",E,"The size of a single kernel stack.",N,N],[17,"MAX_TASKS_PER_ADDRESS_SPACE",E,E,N,N],[17,"MAX_ADDRESS_SPACES",E,E,N,N],[17,"ADDRESS_SPACE_STACK_SLOT_SIZE",E,"The size of a slot of stacks that is allocated for a…",N,N],[17,"KERNEL_P4_ENTRY",E,"The kernel is mapped into the 511th entry of the P4.",N,N],[17,"KERNEL_ADDRESS_SPACE_START",E,E,N,N],[17,"PHYSICAL_MAPPING_BASE",E,"The base virtual address of the physical memory mapping.…",N,N],[17,"KERNEL_STACKS_BASE",E,E,N,N],[17,"KERNEL_BASE",E,"This is the base of the kernel address space. It starts at…",N,N],[17,R[690],E,"The start of the heap. The heap is 200 KiB.",N,N],[17,"HEAP_END",E,E,N,N],[17,"LOCAL_APIC_CONFIG",E,"While we could access the local APIC from the physical…",N,N],[17,"BOOT_INFO_NUM_PAGES",E,"This is the number of 4KiB pages we need to allocate for…",N,N],[17,"BOOT_INFO",E,E,N,N],[0,"page",R[541],E,N,N],[3,"Page",R[566],E,N,N],[12,R[542],E,E,33,N],[11,R[543],E,E,33,[[[R[539]]],["page"]]],[11,R[545],E,E,33,[[[R[539]]],["page"]]],[0,"page_table",R[541],E,N,N],[3,R[603],R[567],E,N,N],[3,"Entry",E,E,N,N],[3,"Table",E,E,N,N],[3,R[604],E,E,N,N],[3,"Mapper",E,E,N,N],[12,"physical_base",E,E,34,N],[12,"p4",E,E,34,N],[4,"Level4",E,E,N,N],[4,"Level3",E,E,N,N],[4,"Level2",E,E,N,N],[4,"Level1",E,E,N,N],[4,R[601],E,E,N,N],[13,"Frame4KiB",E,E,35,N],[13,"Frame2MiB",E,E,35,N],[13,"NotMapped",E,E,35,N],[4,"MapError",E,E,N,N],[13,"AlreadyMapped",E,E,36,N],[13,"TriedToMapInHugePage",E,"Produced when we tried to create a new page table, but…",36,N],[8,"TableLevel",E,E,N,N],[8,R[602],E,"Tables of levels that implement `HierarchicalLevel` are…",N,N],[16,"NextLevel",E,E,37,N],[18,"PRESENT",E,E,38,N],[18,"WRITABLE",E,E,38,N],[18,"USER_ACCESSIBLE",E,E,38,N],[18,"WRITE_THROUGH",E,E,38,N],[18,"NO_CACHE",E,E,38,N],[18,"ACCESSED",E,E,38,N],[18,"DIRTY",E,E,38,N],[18,"HUGE_PAGE",E,E,38,N],[18,"GLOBAL",E,E,38,N],[18,"NO_EXECUTE",E,E,38,N],[11,"empty",E,"Returns an empty set of flags.",38,[[],[R[544]]]],[11,"all",E,"Returns the set containing all flags.",38,[[],[R[544]]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",38,[[["self"]],["u64"]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",38,[[["u64"]],[[R[544]],[R[20],[R[544]]]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",38,[[["u64"]],[R[544]]]],[11,"is_empty",E,"Returns `true` if no flags are currently stored.",38,[[["self"]],["bool"]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",38,[[["self"]],["bool"]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",38,[[["self"],[R[544]]],["bool"]]],[11,R[545],E,"Returns `true` all of the flags in `other` are contained…",38,[[["self"],[R[544]]],["bool"]]],[11,"insert",E,"Inserts the specified flags in-place.",38,[[["self"],[R[544]]]]],[11,"remove",E,"Removes the specified flags in-place.",38,[[["self"],[R[544]]]]],[11,"toggle",E,"Toggles the specified flags in-place.",38,[[["self"],[R[544]]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",38,[[["self"],[R[544]],["bool"]]]],[11,"unused",E,E,39,[[],["entry"]]],[11,"is_unused",E,E,39,[[["self"]],["bool"]]],[11,"flags",E,E,39,[[["self"]],[R[544]]]],[11,"address",E,E,39,[[["self"]],[[R[540]],[R[20],[R[540]]]]]],[11,"set_unused",E,E,39,[[["self"]]]],[11,"set",E,"Set an entry to a given address and set of flags. Cannot…",39,[[["self"],[R[540]],[R[544]]]]],[11,"new",E,E,40,[[["self"]],["table"]]],[11,"zero",E,E,40,[[["self"]]]],[11,"next_table",E,"Get a reference to the table at the given `index`,…",40,[[["self"],[R[539]],[R[1]]],[[R[20],["table"]],["table"]]]],[11,"next_table_mut",E,"Get a mutable reference to the table at the given `index`,…",40,[[["self"],[R[539]],[R[1]]],[["table"],[R[20],["table"]]]]],[11,"next_table_create",E,E,40,[[["self"],[R[539]],[R[1]],["a"],["bool"]],[[R[24],["table",R[547]]],[R[547]],["table"]]]],[11,"new",E,E,41,[[[R[539]],["frame"]],[R[546]]]],[11,"from_frame",E,"Create a `PageTable` from a `Frame` that already contains…",41,[[[R[539]],["frame"]],[R[546]]]],[11,"mapper",E,E,41,[[["self"]],["mapper"]]],[11,R[691],E,E,41,[[["self"]]]],[11,"translate",E,E,34,[[["self"],[R[539]]],["translationresult"]]],[11,"map",E,"Allocates a `Frame` using the given allocator, and maps…",34,[[["self"],[R[544]],["a"],["page",[R[548]]],[R[548]]],[[R[24],["frame",R[547]]],[R[547]],["frame"]]]],[11,"map_to",E,E,34,[[["self"],["frame",[R[548]]],[R[544]],["a"],["page",[R[548]]],[R[548]]],[[R[24],[R[547]]],[R[547]]]]],[11,"map_to_2MiB",E,E,34,[[["self"],["a"],["frame",[R[549]]],["page",[R[549]]],[R[549]],[R[544]]],[[R[24],[R[547]]],[R[547]]]]],[11,"map_range_to",E,"Map a range of pages to a range of frames, all with the…",34,[[["self"],["frame"],["range",["frame"]],["a"],["page"],[R[544]],["range",["page"]]],[[R[24],[R[547]]],[R[547]]]]],[11,"unmap",E,"Unmap the given page, returning the `Frame` it was mapped…",34,[[["self"],["page",[R[548]]],[R[548]]],[["frame",[R[548]]],[R[20],["frame"]]]]],[0,R[529],R[541],E,N,N],[3,R[605],R[568],"Represents an address in the physical memory space. A…",N,N],[11,"new",E,E,42,[[[R[1]]],[[R[540]],[R[20],[R[540]]]]]],[11,R[552],E,E,42,[[[R[1]]],[R[540]]]],[11,"offset_into_frame",E,E,42,[[["self"]],[R[1]]]],[11,"is_frame_aligned",E,E,42,[[["self"]],["bool"]]],[11,R[550],E,"Get the greatest address less than or equal to this…",42,[[[R[1]]],[R[540]]]],[11,R[554],E,E,42,[[[R[1]]],[R[540]]]],[0,R[551],R[541],E,N,N],[3,R[606],R[569],"Represents a canonical virtual address. To be canonical,…",N,N],[11,"new",E,"Create a new `VirtualAddress` from the given address. If…",43,[[[R[1]]],[[R[20],[R[539]]],[R[539]]]]],[11,R[552],E,R[553],43,[[[R[1]]],[R[539]]]],[11,"new_canonicalise",E,R[553],43,[[[R[1]]],[R[539]]]],[11,"from_page_table_offsets",E,E,43,[[[R[1]]],[R[539]]]],[11,"ptr",E,E,43,[[]]],[11,"mut_ptr",E,E,43,[[]]],[11,"offset",E,E,43,[[["self"],["isize"]],[R[539]]]],[11,"offset_into_page",E,E,43,[[["self"]],[R[1]]]],[11,"is_page_aligned",E,E,43,[[["self"]],["bool"]]],[11,"is_aligned_to",E,E,43,[[["self"],[R[1]]],["bool"]]],[11,R[550],E,"Get the greatest address `x` with the given alignment such…",43,[[["self"],[R[1]]],[R[539]]]],[11,R[554],E,"Get the smallest address `x` with the given alignment such…",43,[[["self"],[R[1]]],[R[539]]]],[11,"canonicalise",E,"Addresses are always expected by the CPU to be canonical…",43,[[],[R[539]]]],[11,"p4_index",E,E,43,[[["self"]],[R[1]]]],[11,"p3_index",E,E,43,[[["self"]],[R[1]]]],[11,"p2_index",E,E,43,[[["self"]],[R[1]]]],[11,"p1_index",E,E,43,[[["self"]],[R[1]]]],[17,"KIBIBYTES_TO_BYTES",R[541],"Multiply by this to turn KiB into bytes",N,N],[17,"MEBIBYTES_TO_BYTES",E,"Multiply by this to turn MiB into bytes",N,N],[17,"GIBIBYTES_TO_BYTES",E,"Multiply by this to turn GiB into bytes",N,N],[8,R[607],E,"Implemented by marker types that denote the various sizes…",N,N],[18,"SIZE",E,"Frame size in bytes",44,N],[18,"LOG2_SIZE",E,"The log2 of the frame size (in bytes). This makes some…",44,N],[14,"getter","x86_64",E,N,N],[14,"read_control_reg",E,"Read a control register. The name of the control register…",N,N],[14,"write_control_reg",E,"Write to a control register. Calls to this macro will need…",N,N],[11,"from",R[555],E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[[U]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[],[R[24]]]],[11,R[26],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[27]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[[U]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[],[R[24]]]],[11,R[26],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[27]]]],[11,R[145],E,E,1,[[["self"]],[T]]],[11,R[144],E,E,1,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[21],E,E,2,[[[U]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[],[R[24]]]],[11,R[26],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[27]]]],[11,R[145],E,E,2,[[["self"]],[T]]],[11,R[144],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[[U]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[],[R[24]]]],[11,R[26],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[27]]]],[11,R[145],E,E,3,[[["self"]],[T]]],[11,R[144],E,E,3,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[[U]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[],[R[24]]]],[11,R[26],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[27]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[21],E,E,5,[[[U]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,R[22],E,E,5,[[],[R[24]]]],[11,R[26],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"]],[R[27]]]],[11,R[145],E,E,5,[[["self"]],[T]]],[11,R[144],E,E,5,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[21],E,E,6,[[[U]],[R[24]]]],[11,"into",E,E,6,[[],[U]]],[11,R[22],E,E,6,[[],[R[24]]]],[11,R[26],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"]],[R[27]]]],[11,R[145],E,E,6,[[["self"]],[T]]],[11,R[144],E,E,6,[[["self"],[T]]]],[11,"from",R[536],E,7,[[[T]],[T]]],[11,R[21],E,E,7,[[[U]],[R[24]]]],[11,"into",E,E,7,[[],[U]]],[11,R[22],E,E,7,[[],[R[24]]]],[11,R[26],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"]],[R[27]]]],[11,"from",R[556],E,8,[[[T]],[T]]],[11,R[21],E,E,8,[[[U]],[R[24]]]],[11,"into",E,E,8,[[],[U]]],[11,R[22],E,E,8,[[],[R[24]]]],[11,R[26],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"]],[R[27]]]],[11,R[145],E,E,8,[[["self"]],[T]]],[11,R[144],E,E,8,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[21],E,E,10,[[[U]],[R[24]]]],[11,"into",E,E,10,[[],[U]]],[11,R[22],E,E,10,[[],[R[24]]]],[11,R[26],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"]],[R[27]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[21],E,E,11,[[[U]],[R[24]]]],[11,"into",E,E,11,[[],[U]]],[11,R[22],E,E,11,[[],[R[24]]]],[11,R[26],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"]],[R[27]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[21],E,E,12,[[[U]],[R[24]]]],[11,"into",E,E,12,[[],[U]]],[11,R[22],E,E,12,[[],[R[24]]]],[11,R[26],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"]],[R[27]]]],[11,R[145],E,E,12,[[["self"]],[T]]],[11,R[144],E,E,12,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[21],E,E,13,[[[U]],[R[24]]]],[11,"into",E,E,13,[[],[U]]],[11,R[22],E,E,13,[[],[R[24]]]],[11,R[26],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"]],[R[27]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[21],E,E,9,[[[U]],[R[24]]]],[11,"into",E,E,9,[[],[U]]],[11,R[22],E,E,9,[[],[R[24]]]],[11,R[26],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"]],[R[27]]]],[11,R[145],E,E,9,[[["self"]],[T]]],[11,R[144],E,E,9,[[["self"],[T]]]],[11,"from",R[557],E,14,[[[T]],[T]]],[11,R[21],E,E,14,[[[U]],[R[24]]]],[11,"into",E,E,14,[[],[U]]],[11,R[22],E,E,14,[[],[R[24]]]],[11,R[26],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"]],[R[27]]]],[11,R[145],E,E,14,[[["self"]],[T]]],[11,R[144],E,E,14,[[["self"],[T]]]],[11,"from",R[558],E,16,[[[T]],[T]]],[11,R[21],E,E,16,[[[U]],[R[24]]]],[11,"into",E,E,16,[[],[U]]],[11,R[22],E,E,16,[[],[R[24]]]],[11,R[26],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"]],[R[27]]]],[11,R[145],E,E,16,[[["self"]],[T]]],[11,R[144],E,E,16,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[21],E,E,17,[[[U]],[R[24]]]],[11,"into",E,E,17,[[],[U]]],[11,R[22],E,E,17,[[],[R[24]]]],[11,R[26],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"]],[R[27]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[21],E,E,15,[[[U]],[R[24]]]],[11,"into",E,E,15,[[],[U]]],[11,R[22],E,E,15,[[],[R[24]]]],[11,R[26],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"]],[R[27]]]],[11,R[145],E,E,15,[[["self"]],[T]]],[11,R[144],E,E,15,[[["self"],[T]]]],[11,"from",R[559],E,18,[[[T]],[T]]],[11,R[21],E,E,18,[[[U]],[R[24]]]],[11,"into",E,E,18,[[],[U]]],[11,R[22],E,E,18,[[],[R[24]]]],[11,R[26],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"]],[R[27]]]],[11,"from",R[560],E,19,[[[T]],[T]]],[11,R[21],E,E,19,[[[U]],[R[24]]]],[11,"into",E,E,19,[[],[U]]],[11,R[22],E,E,19,[[],[R[24]]]],[11,R[26],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"]],[R[27]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[21],E,E,20,[[[U]],[R[24]]]],[11,"into",E,E,20,[[],[U]]],[11,R[22],E,E,20,[[],[R[24]]]],[11,R[26],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"]],[R[27]]]],[11,"from",R[561],E,21,[[[T]],[T]]],[11,R[21],E,E,21,[[[U]],[R[24]]]],[11,"into",E,E,21,[[],[U]]],[11,R[22],E,E,21,[[],[R[24]]]],[11,R[26],E,E,21,[[["self"]],[T]]],[11,R[23],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"]],[R[27]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[21],E,E,22,[[[U]],[R[24]]]],[11,"into",E,E,22,[[],[U]]],[11,R[22],E,E,22,[[],[R[24]]]],[11,R[26],E,E,22,[[["self"]],[T]]],[11,R[23],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"]],[R[27]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[21],E,E,23,[[[U]],[R[24]]]],[11,"into",E,E,23,[[],[U]]],[11,R[22],E,E,23,[[],[R[24]]]],[11,R[26],E,E,23,[[["self"]],[T]]],[11,R[23],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"]],[R[27]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[21],E,E,45,[[[U]],[R[24]]]],[11,"into",E,E,45,[[],[U]]],[11,R[22],E,E,45,[[],[R[24]]]],[11,R[26],E,E,45,[[["self"]],[T]]],[11,R[23],E,E,45,[[["self"]],[T]]],[11,R[25],E,E,45,[[["self"]],[R[27]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[21],E,E,24,[[[U]],[R[24]]]],[11,"into",E,E,24,[[],[U]]],[11,R[22],E,E,24,[[],[R[24]]]],[11,R[26],E,E,24,[[["self"]],[T]]],[11,R[23],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"]],[R[27]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[21],E,E,25,[[[U]],[R[24]]]],[11,"into",E,E,25,[[],[U]]],[11,R[22],E,E,25,[[],[R[24]]]],[11,R[26],E,E,25,[[["self"]],[T]]],[11,R[23],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"]],[R[27]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[21],E,E,26,[[[U]],[R[24]]]],[11,"into",E,E,26,[[],[U]]],[11,R[22],E,E,26,[[],[R[24]]]],[11,R[26],E,E,26,[[["self"]],[T]]],[11,R[23],E,E,26,[[["self"]],[T]]],[11,R[25],E,E,26,[[["self"]],[R[27]]]],[11,"from",R[562],E,28,[[[T]],[T]]],[11,R[21],E,E,28,[[[U]],[R[24]]]],[11,"into",E,E,28,[[],[U]]],[11,R[22],E,E,28,[[],[R[24]]]],[11,R[26],E,E,28,[[["self"]],[T]]],[11,R[23],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"]],[R[27]]]],[11,"from",R[563],E,29,[[[T]],[T]]],[11,R[21],E,E,29,[[[U]],[R[24]]]],[11,"into",E,E,29,[[],[U]]],[11,R[22],E,E,29,[[],[R[24]]]],[11,R[26],E,E,29,[[["self"]],[T]]],[11,R[23],E,E,29,[[["self"]],[T]]],[11,R[25],E,E,29,[[["self"]],[R[27]]]],[11,R[145],E,E,29,[[["self"]],[T]]],[11,R[144],E,E,29,[[["self"],[T]]]],[11,"from",R[564],E,30,[[[T]],[T]]],[11,R[21],E,E,30,[[[U]],[R[24]]]],[11,"into",E,E,30,[[],[U]]],[11,R[22],E,E,30,[[],[R[24]]]],[11,R[26],E,E,30,[[["self"]],[T]]],[11,R[23],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"]],[R[27]]]],[11,"from",R[541],E,46,[[[T]],[T]]],[11,R[21],E,E,46,[[[U]],[R[24]]]],[11,"into",E,E,46,[[],[U]]],[11,R[22],E,E,46,[[],[R[24]]]],[11,R[26],E,E,46,[[["self"]],[T]]],[11,R[23],E,E,46,[[["self"]],[T]]],[11,R[25],E,E,46,[[["self"]],[R[27]]]],[11,R[145],E,E,46,[[["self"]],[T]]],[11,R[144],E,E,46,[[["self"],[T]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[21],E,E,47,[[[U]],[R[24]]]],[11,"into",E,E,47,[[],[U]]],[11,R[22],E,E,47,[[],[R[24]]]],[11,R[26],E,E,47,[[["self"]],[T]]],[11,R[23],E,E,47,[[["self"]],[T]]],[11,R[25],E,E,47,[[["self"]],[R[27]]]],[11,R[145],E,E,47,[[["self"]],[T]]],[11,R[144],E,E,47,[[["self"],[T]]]],[11,"from",R[565],E,31,[[[T]],[T]]],[11,R[21],E,E,31,[[[U]],[R[24]]]],[11,"into",E,E,31,[[],[U]]],[11,R[22],E,E,31,[[],[R[24]]]],[11,R[26],E,E,31,[[["self"]],[T]]],[11,R[23],E,E,31,[[["self"]],[T]]],[11,R[25],E,E,31,[[["self"]],[R[27]]]],[11,R[145],E,E,31,[[["self"]],[T]]],[11,R[144],E,E,31,[[["self"],[T]]]],[11,"from",R[566],E,33,[[[T]],[T]]],[11,R[21],E,E,33,[[[U]],[R[24]]]],[11,"into",E,E,33,[[],[U]]],[11,R[22],E,E,33,[[],[R[24]]]],[11,R[26],E,E,33,[[["self"]],[T]]],[11,R[23],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"]],[R[27]]]],[11,R[145],E,E,33,[[["self"]],[T]]],[11,R[144],E,E,33,[[["self"],[T]]]],[11,"from",R[567],E,38,[[[T]],[T]]],[11,R[21],E,E,38,[[[U]],[R[24]]]],[11,"into",E,E,38,[[],[U]]],[11,R[22],E,E,38,[[],[R[24]]]],[11,R[26],E,E,38,[[["self"]],[T]]],[11,R[23],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"]],[R[27]]]],[11,R[145],E,E,38,[[["self"]],[T]]],[11,R[144],E,E,38,[[["self"],[T]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[21],E,E,39,[[[U]],[R[24]]]],[11,"into",E,E,39,[[],[U]]],[11,R[22],E,E,39,[[],[R[24]]]],[11,R[26],E,E,39,[[["self"]],[T]]],[11,R[23],E,E,39,[[["self"]],[T]]],[11,R[25],E,E,39,[[["self"]],[R[27]]]],[11,R[145],E,E,39,[[["self"]],[T]]],[11,R[144],E,E,39,[[["self"],[T]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[21],E,E,40,[[[U]],[R[24]]]],[11,"into",E,E,40,[[],[U]]],[11,R[22],E,E,40,[[],[R[24]]]],[11,R[26],E,E,40,[[["self"]],[T]]],[11,R[23],E,E,40,[[["self"]],[T]]],[11,R[25],E,E,40,[[["self"]],[R[27]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[21],E,E,41,[[[U]],[R[24]]]],[11,"into",E,E,41,[[],[U]]],[11,R[22],E,E,41,[[],[R[24]]]],[11,R[26],E,E,41,[[["self"]],[T]]],[11,R[23],E,E,41,[[["self"]],[T]]],[11,R[25],E,E,41,[[["self"]],[R[27]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[21],E,E,34,[[[U]],[R[24]]]],[11,"into",E,E,34,[[],[U]]],[11,R[22],E,E,34,[[],[R[24]]]],[11,R[26],E,E,34,[[["self"]],[T]]],[11,R[23],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"]],[R[27]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[21],E,E,48,[[[U]],[R[24]]]],[11,"into",E,E,48,[[],[U]]],[11,R[22],E,E,48,[[],[R[24]]]],[11,R[26],E,E,48,[[["self"]],[T]]],[11,R[23],E,E,48,[[["self"]],[T]]],[11,R[25],E,E,48,[[["self"]],[R[27]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[21],E,E,49,[[[U]],[R[24]]]],[11,"into",E,E,49,[[],[U]]],[11,R[22],E,E,49,[[],[R[24]]]],[11,R[26],E,E,49,[[["self"]],[T]]],[11,R[23],E,E,49,[[["self"]],[T]]],[11,R[25],E,E,49,[[["self"]],[R[27]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[21],E,E,50,[[[U]],[R[24]]]],[11,"into",E,E,50,[[],[U]]],[11,R[22],E,E,50,[[],[R[24]]]],[11,R[26],E,E,50,[[["self"]],[T]]],[11,R[23],E,E,50,[[["self"]],[T]]],[11,R[25],E,E,50,[[["self"]],[R[27]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[21],E,E,51,[[[U]],[R[24]]]],[11,"into",E,E,51,[[],[U]]],[11,R[22],E,E,51,[[],[R[24]]]],[11,R[26],E,E,51,[[["self"]],[T]]],[11,R[23],E,E,51,[[["self"]],[T]]],[11,R[25],E,E,51,[[["self"]],[R[27]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[21],E,E,35,[[[U]],[R[24]]]],[11,"into",E,E,35,[[],[U]]],[11,R[22],E,E,35,[[],[R[24]]]],[11,R[26],E,E,35,[[["self"]],[T]]],[11,R[23],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"]],[R[27]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[21],E,E,36,[[[U]],[R[24]]]],[11,"into",E,E,36,[[],[U]]],[11,R[22],E,E,36,[[],[R[24]]]],[11,R[26],E,E,36,[[["self"]],[T]]],[11,R[23],E,E,36,[[["self"]],[T]]],[11,R[25],E,E,36,[[["self"]],[R[27]]]],[11,"from",R[568],E,42,[[[T]],[T]]],[11,R[21],E,E,42,[[[U]],[R[24]]]],[11,"into",E,E,42,[[],[U]]],[11,R[22],E,E,42,[[],[R[24]]]],[11,R[26],E,E,42,[[["self"]],[T]]],[11,R[23],E,E,42,[[["self"]],[T]]],[11,R[25],E,E,42,[[["self"]],[R[27]]]],[11,R[145],E,E,42,[[["self"]],[T]]],[11,R[144],E,E,42,[[["self"],[T]]]],[11,"from",R[569],E,43,[[[T]],[T]]],[11,R[21],E,E,43,[[[U]],[R[24]]]],[11,"into",E,E,43,[[],[U]]],[11,R[22],E,E,43,[[],[R[24]]]],[11,R[26],E,E,43,[[["self"]],[T]]],[11,R[23],E,E,43,[[["self"]],[T]]],[11,R[25],E,E,43,[[["self"]],[R[27]]]],[11,R[145],E,E,43,[[["self"]],[T]]],[11,R[144],E,E,43,[[["self"],[T]]]],[11,"from",E,E,43,[[],[R[539]]]],[11,"from",E,E,43,[[],[R[539]]]],[11,"eq",R[555],E,5,[[["self"],[R[576]]],["bool"]]],[11,"eq",R[556],E,9,[[["self"],[R[533]]],["bool"]]],[11,"eq",R[561],E,24,[[["self"],["vendor"]],["bool"]]],[11,"eq",E,E,26,[[["self"],["hypervisorvendor"]],["bool"]]],[11,"eq",R[565],E,31,[[["self"],["frame"]],["bool"]]],[11,"ne",E,E,31,[[["self"],["frame"]],["bool"]]],[11,"eq",R[566],E,33,[[["self"],["page"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["page"]],["bool"]]],[11,"eq",R[567],E,38,[[["self"],[R[544]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[544]]],["bool"]]],[11,"eq",R[568],E,42,[[["self"],[R[540]]],["bool"]]],[11,"eq",R[569],E,43,[[["self"],[R[539]]],["bool"]]],[11,"eq",R[541],E,46,[[["self"],[R[548]]],["bool"]]],[11,"eq",E,E,47,[[["self"],[R[549]]],["bool"]]],[11,"cmp",R[565],E,31,[[["self"],["frame"]],[R[44]]]],[11,"cmp",R[566],E,33,[[["self"],["page"]],[R[44]]]],[11,"cmp",R[567],E,38,[[["self"],[R[544]]],[R[44]]]],[11,"cmp",R[568],E,42,[[["self"],[R[540]]],[R[44]]]],[11,"cmp",R[569],E,43,[[["self"],[R[539]]],[R[44]]]],[11,"cmp",R[541],E,46,[[["self"],[R[548]]],[R[44]]]],[11,"cmp",E,E,47,[[["self"],[R[549]]],[R[44]]]],[11,R[45],R[565],E,31,[[["self"],["frame"]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,31,[[["self"],["frame"]],["bool"]]],[11,"le",E,E,31,[[["self"],["frame"]],["bool"]]],[11,"gt",E,E,31,[[["self"],["frame"]],["bool"]]],[11,"ge",E,E,31,[[["self"],["frame"]],["bool"]]],[11,R[45],R[566],E,33,[[["self"],["page"]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,33,[[["self"],["page"]],["bool"]]],[11,"le",E,E,33,[[["self"],["page"]],["bool"]]],[11,"gt",E,E,33,[[["self"],["page"]],["bool"]]],[11,"ge",E,E,33,[[["self"],["page"]],["bool"]]],[11,R[45],R[567],E,38,[[["self"],[R[544]]],[[R[44]],[R[20],[R[44]]]]]],[11,"lt",E,E,38,[[["self"],[R[544]]],["bool"]]],[11,"le",E,E,38,[[["self"],[R[544]]],["bool"]]],[11,"gt",E,E,38,[[["self"],[R[544]]],["bool"]]],[11,"ge",E,E,38,[[["self"],[R[544]]],["bool"]]],[11,R[45],R[568],E,42,[[["self"],[R[540]]],[[R[20],[R[44]]],[R[44]]]]],[11,R[45],R[569],E,43,[[["self"],[R[539]]],[[R[20],[R[44]]],[R[44]]]]],[11,R[45],R[541],E,46,[[["self"],[R[548]]],[[R[44]],[R[20],[R[44]]]]]],[11,R[45],E,E,47,[[["self"],[R[549]]],[[R[44]],[R[20],[R[44]]]]]],[11,"hash",R[567],E,38,[[["self"],["__h"]]]],[11,"add",R[565],E,31,[[[R[1]]]]],[11,"add",R[566],E,33,[[[R[1]]]]],[11,"add",R[568],E,42,[[[R[1]]]]],[11,"add",R[569],E,43,[[[R[1]]]]],[11,"sub",R[567],"Returns the set difference of the two sets of flags.",38,[[[R[544]]],[R[544]]]],[11,"sub",R[568],E,42,[[[R[1]]]]],[11,"sub",R[569],E,43,[[[R[1]]]]],[11,R[170],R[565],E,31,[[["self"],[R[1]]]]],[11,R[170],R[566],E,33,[[["self"],[R[1]]]]],[11,R[170],R[568],E,42,[[["self"],[R[1]]]]],[11,R[170],R[569],E,43,[[["self"],[R[1]]]]],[11,R[171],R[567],"Disables all flags enabled in the set.",38,[[["self"],[R[544]]]]],[11,R[171],R[568],E,42,[[["self"],[R[1]]]]],[11,R[171],R[569],E,43,[[["self"],[R[1]]]]],[11,"not",R[567],"Returns the complement of this set of flags.",38,[[],[R[544]]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",38,[[[R[544]]],[R[544]]]],[11,"bitor",E,"Returns the union of the two sets of flags.",38,[[[R[544]]],[R[544]]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",38,[[[R[544]]],[R[544]]]],[11,"bitand_assign",E,"Disables all flags disabled in the set.",38,[[["self"],[R[544]]]]],[11,"bitor_assign",E,"Adds the set of flags.",38,[[["self"],[R[544]]]]],[11,"bitxor_assign",E,"Toggles the set of flags.",38,[[["self"],[R[544]]]]],[11,"index",R[558],E,17,[[["self"],["u8"]]]],[11,"index",R[567],E,40,[[["self"],[R[1]]]]],[11,R[570],R[558],E,17,[[["self"],["u8"]]]],[11,R[570],R[567],E,40,[[["self"],[R[1]]]]],[11,"fmt",R[555],E,5,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[556],E,8,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,10,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[557],E,14,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[558],E,15,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[561],E,24,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,25,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,23,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,26,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,45,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[563],E,29,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[565],E,31,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[566],E,33,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[567],E,38,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,39,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,35,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,36,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[568],E,42,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[569],E,43,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[541],E,46,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,47,[[["self"],[R[29]]],[R[24]]]],[11,"write_str",R[564],E,30,[[["self"],["str"]],[R[24]]]],[11,"from_iter",R[567],E,38,[[[R[575]]],[R[544]]]],[11,"fmt",E,E,38,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,38,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",E,E,38,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[568],E,42,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[569],E,43,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[567],E,38,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[568],E,42,[[["self"],[R[29]]],[R[24]]]],[11,"fmt",R[569],E,43,[[["self"],[R[29]]],[R[24]]]],[11,R[571],R[565],E,31,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,R[572],E,E,31,[[["self"]],["self"]]],[11,R[573],E,E,31,[[["self"]],["self"]]],[11,"add_one",E,E,31,[[["self"]],["self"]]],[11,"sub_one",E,E,31,[[["self"]],["self"]]],[11,R[574],E,E,31,[[["self"],[R[1]]],[R[20]]]],[11,R[571],R[566],E,33,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,R[572],E,E,33,[[["self"]],["self"]]],[11,R[573],E,E,33,[[["self"]],["self"]]],[11,"add_one",E,E,33,[[["self"]],["self"]]],[11,"sub_one",E,E,33,[[["self"]],["self"]]],[11,R[574],E,E,33,[[["self"],[R[1]]],[R[20]]]],[11,"extend",R[567],E,38,[[["self"],[R[575]]]]],[11,"clone",R[555],E,5,[[["self"]],[R[576]]]],[11,"clone",E,E,1,[[["self"]],[R[577]]]],[11,"clone",E,E,2,[[["self"]],[R[578]]]],[11,"clone",E,E,6,[[["self"]],["pixelformat"]]],[11,"clone",E,E,3,[[["self"]],[R[692]]]],[11,"clone",R[556],E,9,[[["self"]],[R[533]]]],[11,"clone",E,E,8,[[["self"]],[R[535]]]],[11,"clone",E,E,12,[[["self"]],[R[534]]]],[11,"clone",R[557],E,14,[[["self"]],["tss"]]],[11,"clone",R[558],E,16,[[["self"]],[R[537]]]],[11,"clone",E,E,15,[[["self"]],[R[614]]]],[11,"clone",R[563],E,29,[[["self"]],["cpuflags"]]],[11,"clone",R[565],E,31,[[["self"]],["frame"]]],[11,"clone",R[566],E,33,[[["self"]],["page"]]],[11,"clone",R[567],E,38,[[["self"]],[R[544]]]],[11,"clone",E,E,39,[[["self"]],["entry"]]],[11,"clone",R[568],E,42,[[["self"]],[R[540]]]],[11,"clone",R[569],E,43,[[["self"]],[R[539]]]],[11,"clone",R[541],E,46,[[["self"]],[R[548]]]],[11,"clone",E,E,47,[[["self"]],[R[549]]]],[11,R[126],R[555],E,0,[[],["self"]]],[11,R[126],E,E,1,[[],[R[577]]]],[11,R[126],E,E,2,[[],[R[578]]]],[11,R[126],R[567],E,38,[[],[R[544]]]],[11,R[126],R[568],E,42,[[],[R[540]]]],[11,R[126],R[569],E,43,[[],[R[539]]]]],"p":[[3,R[579]],[3,R[580]],[3,R[581]],[3,R[582]],[3,R[583]],[4,R[584]],[4,R[585]],[3,R[586]],[3,R[587]],[4,R[588]],[3,R[589]],[3,R[590]],[3,R[591]],[3,"Gdt"],[3,"Tss"],[3,R[592]],[3,"IdtEntry"],[3,"Idt"],[3,"Pic"],[3,R[593]],[3,R[594]],[3,R[595]],[3,"CpuInfo"],[3,R[596]],[4,"Vendor"],[4,R[597]],[4,R[598]],[8,"PortSize"],[3,"Port"],[3,"CpuFlags"],[3,R[599]],[3,"Frame"],[8,R[600]],[3,"Page"],[3,"Mapper"],[4,R[601]],[4,"MapError"],[8,R[602]],[3,R[603]],[3,"Entry"],[3,"Table"],[3,R[604]],[3,R[605]],[3,R[606]],[8,R[607]],[3,R[608]],[4,"Size4KiB"],[4,"Size2MiB"],[4,"Level4"],[4,"Level3"],[4,"Level2"],[4,"Level1"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);