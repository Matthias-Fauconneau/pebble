initSidebarItems({"fn":[["common_per_cpu_data","Access the common per-CPU data. This is exported from the x86_64 module so it can be used from the rest of the kernel."],["common_per_cpu_data_mut","Get a mutable reference to the common per-CPU data. Exported from the x86_64 module so it can be used from the rest of the kernel."],["per_cpu_data","Access the per-CPU data. Unsafe because this must not be called before the per-CPU data has been installed."],["per_cpu_data_mut","Get a mutable reference to the per-cpu data. This is unsafe because you must assure that only one mutable reference to the `PerCpu` exists at any one time (this is easier, however, than the general case, because it is only affected by the code running on one CPU - however, you must still consider interrupt handlers. If interrupts can occur around your call to this method, you must disable them and re-enable them after this reference has been dropped)."]],"struct":[["GuardedPerCpu","This guards a `PerCpu` instance, preventing it from being dropped, or moved in memory. This makes it safe to assume that accessing the per-cpu data is safe from the rest of the kernel."],["PerCpu",""]]});