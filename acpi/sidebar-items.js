initSidebarItems({"enum":[["AcpiError",""],["AmlError",""],["MadtError",""],["ProcessorState",""]],"fn":[["parse_rsdp","This is the entry point of `acpi` if you have the physical address of the RSDP. It maps the RSDP, works out what version of ACPI the hardware supports, and passes the physical address of the RSDT/XSDT to `parse_rsdt`."],["parse_rsdt","This is the entry point of `acpi` if you already have the physical address of the RSDT/XSDT; it parses all the SDTs in the RSDT/XSDT, calling the relevant handlers in the implementation's `AcpiHandler`."],["search_for_rsdp_bios","This is the entry point of `acpi` if you have no information except that the machine is running BIOS and not UEFI. It maps the RSDP, works out what version of ACPI the hardware supports, and passes the physical address of the RSDT/XSDT to `parse_rsdt`."]],"macro":[["check_attempt","This macro wraps parselets that check if we're parsing the thing we're attempting to. It should be used within `attempt_parse` calls, and converts `AmlError::UnexpectedByte` errors into `AmlError::NeedsBacktrack`s."],["parse_any_of","This macro takes a parser and one or more parsing functions and tries to parse the next part of the stream with each one. If a parsing function fails, it rolls back the stream and tries the next one. If none of the functions can parse the next part of the stream, we error on the unexpected byte."],["parser_trace","Easy macro for controlling whether debug output is printed during parsing. Takes a copy of the parser so we can, for example, print the offset in the AML stream for every trace."]],"mod":[["interrupt",""]],"struct":[["AcpiStaticInfo","All the information from parsing the static tables. This is returned by the `from_*` methods, and is the first step of parsing the ACPI tables."],["AmlNamespace",""],["PhysicalMapping","Describes a physical mapping created by `AcpiHandler::map_physical_region` and unmapped by `AcpiHandler::unmap_physical_region`. The region mapped must be at least `size_of::<T>()` bytes, but may be bigger."],["Processor",""]],"trait":[["AcpiHandler","An implementation of this trait must be provided to allow `acpi` to access platform-specific functionality, such as mapping regions of physical memory. You are free to implement these however you please, as long as they conform to the documentation of each function."]]});